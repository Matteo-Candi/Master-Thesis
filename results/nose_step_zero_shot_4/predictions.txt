



 

    if ( a == 0 ) { return a ; }
    if ( a == 0 ) { return a ; }
    if ( a == 0 ) { return a ; }
    if ( a == 0 ) { return a ; }
    if ( a == 0 ) { return a ; }
    if ( a == 0 ) { return a ; }
    if ( a == 0 ) { return a ; }
    if ( a == 0 ) { return a ; }
    if ( a == 0 ) { return a ; }
    if ( a == 0 ) { return a ; }
    if ( a == 0 ) { return a ; }
    if ( a == 0 ) { return a ; }
    if ( a == 0 ) { return a ; }
    if ( a == 0 ) { return a ; }
    if ( a == 0 ) { return a ; }
    if ( a == 0 ) { return a ; }
    if ( a == 0 ) { return a ; }
    if ( a == 0 ) { return a ; }
    if ( a == 0 ) { return a ; }
    if ( a == 0 ) { return a ; }
    if ( a == 0 ) { return a ; }
    if ( a == 0 ) { return a ; }
    if ( a == 0 ) { return a ; }
    if ( a == 0 ) { return a ; }
    if ( a == 0 ) { return a ; }
    if ( a == 0 ) { return a ; }
    if ( a == 0 ) { return a ; }
    if ( a == 0 ) { return a ; }
    if ( a == 0 ) { return a ; }
    if ( a == 0 ) { return a ; }
    if ( a == 0 ) { return a ; }
    if ( a == 0 ) { return a ; }
    if ( a == 0 ) { return a ; }
    if ( a == 0 ) { return a ; }
    if ( a == 0 ) { return a ; }
    if ( a == 0 ) { return a ; }
    if ( a == 0 ) { return a ; }
    if ( a == 0 ) { return a ; }
    if ( a == 0 ) { return a ; }
    if ( a == 0 ) { return a ; }
    if ( a == 0 ) { return a ; }
    if ( a == 0 ) { return a ; }
    if ( a == 0 ) { return a ; }
    if ( a == 0 ) { return a ; }
    if ( a == 0 ) { return a ; }
    if ( a == 0 ) { return a ; }
    if ( a == 0 ) { return a ; }
    if ( a == 0 ) { return a ; }
    if ( a == 0 ) { return a ; }
    if ( a == 0 ) { return a ; }
    if ( a == 0 ) { return a ; }
    if ( a == 0 ) { return a ; }
    if ( a == 0 ) { return a ; }
    if ( a == 0 ) { return a ; }
    if ( a == 0 ) { return a ; }
    if ( a == 0 ) { return a ; }
    if ( a == 0 ) { return a ; }
    if ( a == 0 ) { return a ; }
    if ( a == 0 ) { return a ; }
    if ( a == 0 ) { return a == 0 ) { return a ; }
    if ( a == 0 ) { return a ; }
    if ( a == 0 ) { return a ; }
    if ( a == 0 ) { return a ; }
    if ( a == 0 ) {

# END OF TRANSLATION




 

 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 10 ; 
 10 ; 
 10 ; 
 10 ; }
 10 ; }
 10 ; }
 
 1 ; }
 
 1 ; }
 
 1 ; } 
 1 ; 
 1 ; } 
 1 ; } 
 1 ; } 
 1 ; 
 1 ; 
 1 ; 2 1 ; } 1 ; } 1 ; 1 ; } 1 ; 1 ; 2 1 ; 2 1 ; 2 1 ; 2 ; 2 1 ; 2 ; 2 ; 1 ; 2 ; 1 ; 2 ; 1 ; 2 ; 1 ; 2 ; 1 ; 2 ; 1 ; 2 ; 1 ; 2 ; 1 ; 2 ; 1 ; 2 ; 1 ; 2 ; 1 ; 2 ; 1 ; 2 ; 1 ; 2 ; 1 ; 2 ; 1 ; 2 ; 1 ; 2 ; 1 ; 2 ; 1 ; 2 ; 1 ; 2 ; 1 ; 2 ; 1 ; 2 ; 1 ; 2 ; 2 ; 1 ; 2 ; 1 ; 2 ; 1 ; 2 ; 1 ; 2 ; 1 ; 2 ; 2 ; 1 ; 2 ; 1 ; 2 ; 1 ; 2 ; 2 ; 1 ; 2 ; 1 ; 2 ; 1 ; 2 ; 1 ; 2 ; 2 ; 1 ; 2 ; 1 ; 2 ; 1 ; 2 ; 2 ; 1 ; 2 ; 1 ; 2 ; 2 ; 1 ; 2 ; 1 ; 2 ; 1 ; 2 ; 2 ; 1 ; 2 ; 1 ; 2 ; 2 ; 1 ; 2 ; 1 ; 2 ; 2 ; 1 ; 2 ; 1 ; 2 ; 2 ; 1 ; 2 ; 1 ; 2 ; 2 ; 1 ; 2 ; 2 ; 1 ; 2 ; 1 ; 2 ; 2 ; 1 ; 2 ; 1 ; 2 ; 2 ; 1 ; 2 ; 2 ; 1 ; 2 ; 2 ; 1 ; 2 ; 2 ; 1 ; 2 ; 1 ; 2 ; 2 ; 1 ; 2 ; 2 ; 1 ; 2 ; 2 ; 1 ; 2 ; 2 ; 1 ; 2 ; 1 ; 2 ; 2 ; 1 ; 2 ; 2 ; 1 ; 2 ; 2 ; 1 ; 2 ; 2 ; 1 ; 2 ; 2 ; 1 ; 2 ; 2 ; 1 ; 2 ; 2 ; 1 ; 2 ; 2 ; 1 ; 2 ; 2 ; 1 ; 2 ; 2 ; 1 ; 2 ; 2 ; 1 ; 2 ; 2 ; 1 ; 2 ; 2 ; 1 ; 2 ; 2 ; 1 ; 2 ; 2 ; 1 ; 2 ; 2 ; 1 ; 2 ; 2 ; 2 ; 1 ; 2 ; 2 ; 1 ; 2 ; 2 ; 1 ; 2 ; 2 ; 2 ; 1 ; 2 ; 2 ; 1 ; 2 ; 2 ; 2 ;

# END OF TRANSLATION




 



    // if ( n == 0 ) { return false ; }

 
    // if ( n == 0 ) { return false ; }
    // if ( n == 0 ) { return false ; }
    // if ( n == 0 ) { return false ; }
    // if ( n == 0 ) { return false ; }
    // if ( n == 0 ) { return false ; }
    // if ( n == 0 ) { return false ; }
    // if ( n == 0 ) { return false ; }
    // if ( n == 0 ) { return false ; }
    // if ( n == 0 ) { return false ; }
    // if ( n == 0 ) { return false ; }
    // if ( n == 0 ) { return false ; }
    // if ( n == 0 ) { return false ; }
    // if ( n == 0 ) { return false ; }
    // if ( n == 0 ) { return false ; }
    // if ( n == 0 ) { return false ; }
    // if ( n == 0 ) { return false ; }
    // if ( n == 0 ) { return false ; }    // if ( n == 0 ) { return false ; }    // if ( n == 0 ) { return false ; }    // if ( n == 0 ) { return false ; }    // if ( n == 0 ) { return false ; }    // if ( n == 0 ) { return false ; }    // if ( n == 0 ) { return false ; }    // if ( n == 0 ) { return false ; }    // if ( n == 0 ) { return false ; }    // if ( n == 0 ) { return false ; }    // if ( n == 0 ) { return false ; }    // if ( n == 0 ) { return false ; }    // if ( n == 0 ) { return false ; }    // if ( n == 0 ) { return false ; }    // if ( n == 0 ) { return false ; }    // if ( n == 0 ) { return false ; }    // if ( n == 0 ) { return false ; }    // if ( n == 0 ) { return false ; }    // if ( n == 0 ) { return false ; }    // if ( n == 0 ) { return false ; }    // if ( n == 0 ) { return false ; }    // if ( n == 0 ) { return false ; }    // if ( n == 0 ) { return false ; }    // if ( n == 0 ) { return false ; }    // if ( n == 0 ) { return false ; }    // if ( n == 0 ) { return false ; }    // if ( n == 0 ) { return false ; }    // if ( n == 0 ) { return false ; }    // if ( n == 0 ) { return false ; }    // if ( n == 0 ) { return false ; }    // if ( n == 0 ) { return false ; }    // if ( n == 0 ) { return false ; }    // if ( n == 0 ) { return false ; }    // if ( n == 0 ) { return false ; }    // if ( n == 0 ) { return false ; }    // if ( n == 0 ) { return false ; }    // if ( n == 0 ) { return false ; }    // if ( n == 0 ) { return false ; }    // if ( n == 0 ) { return false ; }    // if ( n == 0 ) { return false ; }    // if ( n == 0 ) { return false ; }    // if ( n == 0 ) { return false ; }    // if ( n == 0 ) { return false ; }    // if ( n == 0 ) { return false ; }    // if ( n == 0 ) { return false ; }    // if ( n == 0 ) { return false ; }    // if ( n == 0 ) { return false ; }    // if ( n == 

# END OF TRANSLATION



 
 
 
 
 
 
 
 
 
 10 ; }
 
 
 10 ; }
 
 10 ; }
 
 10 ; }
 
 10 ; }
 
 10 ; }
 
 10 ; }
 
 1 ; }
 
 1 ; } 
 1 ; } 
 1 ; } 
 1 ; } 
 1 ; } 
 1 ; } 1 ; } 1 ; } 1 ; } 1 ; } 1 ; } 1 ; } 1 ; } 1 ; } 1 ; } 1 ; } 1 ; } 1 ; } 1 ; } 1 ; } 1 ; } 1 ; } 1 ; } 1 ; } 1 ; } 1 ; } 1 ; } 1 ; } 1 ; } 1 ; } 1 ; } 1 ; } 1 ; } 1 ; } 1 ; 1 ; } 1 ; } 1 ; } 1 ; } 1 ; 1 ; } 1 ; } 1 ; } 1 ; 1 ; } 1 ; } 1 ; 1 ; } 1 ; 1 ; } 1 ; 1 ; } 1 ; 1 ; } 1 ; 1 ; } 1 ; 1 ; 1 ; } 1 ; 1 ; } 1 ; 1 ; 1 ; 1 ; } 1 ; 1 ; 1 ; 1 ; 1 ; 1 ; } 1 ; 1 ; 1 ; 1 ; 1 ; 1 ; 1 ; 1 ; 1 ; 1 ; 1 ; 1 ; 1 ; 1 ; 1 ; 1 ; 1 ; 1 ; 1 ; 1 ; 1 ; 1 ; 1 ; 1 ; 1 ; 1 ; 1 ; 1 ; 1 ; 1 ; 1 ; 1 ; 1 ; 1 ; 1 ; 1 ; 1 ; 1 ; 1 ; 1 ; 1 ; 1 ; 1 ; 1 ; 1 ; 1 ; 1 ; 1 ; 1 ; 1 ; 1 ; 1 ; 1 ; 1 ; 1 ; 1 ; 1 ; 1 ; 1 ; 1 ; 1 ; 1 ; 1 ; 1 ; 1 ; 1 ; 1 ; 1 ; 1 ; 1 ; 1 ; 1 ; 1 ; 1 ; 1 ; 1 ; 1 ; 1 ; 1 ; 1 ; 1 ; 1 ; 1 ; 1 ; 1 ; 1 ; 1 ; 1 ; 1 ; 1 ; 1 ; 1 ; 1 ; 1 ; 1 ; 1 ; 1 ; 1 ; 1 ; 1 ; 1 ; 1 ; 1 ; 1 ; 1 ; 1 ; 1 ; 1 ; 1 ; 1 ; 1 ; 1 ; 1 ; 1 ; 1 ; 1 ; 1 ; 1 ; 1 ; 1 ; 1 ; 1 ; 1 ; 1 ; 1 ; 1 ; 1 ; 1 ; 1 ; 1 ; 1 ; 1 ; 1 ; 1 ; 1 ; 1 ; 1 ; 1 ; 1 ; 1 ; 1 ; 1 ; 1 ; 1 ; 1 ; 1 ; 1 ; 1 ; 1 ; 1 ; 1 ; 1 ; 1 ; 1 ; 1 ; 1 ; 

# END OF TRANSLATION





 

   = 0 ; }
    // 1 ; }
    // 1 = f1 ; }
    // 1 ;
    // 2 = f1 ; }
    // 2 = f1 ; }
    // 2 = f1 ; }
    // 2 = f1 ; }
    // 2 = f1 ; }
    // 2 = f1 ; }
    // 2 = f1 ; }
    // 2 = f1 ; }
    // 2 = f1 ; }
    // 2 = f1 ; }
    // 2 = f1 ; }
    // 2 = f1 ; }
    // 2 = f1 ; }
    // 2 = f1 ; }
    // 2 = f1 ; }
    // 2 = f1 ; }
    // 2 = f1 ; }
    // 2 = f1 ; }
    // 2 = f1 ; }
    // 2 = f1 ; }
    // 2 = f1 ; }
    // 2 = f1 ; }
    // 2 = f1 ;  // 2 = f1 ; }
    // 2 = f1 ;  // 2 = f1 ; }
    // 2 = f1 ; 2 = f1 ; }
    // 2 = f1 ; 2 = f1 ; 2 = f1 ; 2 = f1 ; 2 = f1 ; 2 = f1 ; 2 = f1 ; 2 = f1 ; 2 = f1 ; 2 = f1 ; 2 = f1 ; 2 = f1 ; 2 = f1 ; 2 = f1 ; 2 = f1 ; 2 = f1 ; 2 = f1 ; 2 = f1 ; 2 = f1 ; 2 = f1 ; 2 = f1 ; 2 = f1 ; 2 = f1 ; 2 = f1 ; 2 = f1 ; 2 = f1 ; 2 = f1 ; 2 = f1 ; 2 = f1 ; 2 = f1 ; 2 = f1 ; 2 = f1 ; 2 = f1 ; 2 = f1 ; 2 = f1 ; 2 = f1 ; 2 = f1 ; 2 = f1 ; 2 = f1 ; 2 = f1 ; 2 = f1 ; 2 = f1 ; 2 = f1 ; 2 = f1 ; 2 = f1 ; 2 = f1 ; 2 = f1 ; 2 = f1 ; 2 = f1 ; 2 = f1 ; 2 = f1 ; 2 = f1 ; 2 = f1 ; 2 = f1 ; 2 = f1 ; 2 = f1 ; 2 = f1 ; 2 = f1 ; 2 = f1 ; 2 = f1 ; 2 = f1 ; 2 = f1 ; 2 = f1 ; 2 = f1 ; 2 = f1 ; 2 = f1 ; 2 = f1 ; 2 = f1 ; 2 = f1 ; 2 = f1 ; 2 = f1 ; 2 = f1 ; 2 = f1 ; 2 = f1 ; 2 = f1 ; 2 = f1 ; 2 = f1 ; 2 = f1 ; 2 = f1 ; 2 = f1 ; 2 = f1 ; 2 = f1 ; 2 = f1 ; 

# END OF TRANSLATION

```



   
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 


# END OF TRANSLATION




 

 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 10 ; 
 10 ; 
 10 ; 
 10 ; 
 10 ; 
 10 ; 
 1 ; 
 1 ; 2 1 ; 2 2 1 ; 2 2 1 ; 2 2 1 ; 2 2 1 ; 2 2 1 ; 2 2 1 ; 2 2 1 ; 2 1 ; 2 2 1 ; 2 2 1 ; 2 2 1 ; 2 1 ; 2 2 1 ; 2 2 1 ; 2 2 1 ; 2 2 1 ; 2 2 1 ; 2 2 1 ; 2 2 ; 2 1 ; 2 2 ; 2 1 ; 2 2 ; 2 1 ; 2 2 ; 2 1 ; 2 1 ; 2 2 ; 2 1 ; 2 2 ; 2 1 ; 2 ; 2 1 ; 2 2 ; 2 ; 2 1 ; 2 ; 2 ; 2 ; 2 ; 2 ; 2 ; 1 ; 2 ; 2 ; 2 ; 2 ; 1 ; 2 ; 2 ; 2 ; 2 ; 2 ; 2 ; 1 ; 2 ; 2 ; 2 ; 2 ; 2 ; 2 ; 2 ; 2 ; 2 ; 1 ; 2 ; 2 ; 2 ; 2 ; 2 ; 2 ; 2 ; 2 ; 2 ; 1 ; 2 ; 2 ; 2 ; 2 ; 2 ; 2 ; 2 ; 2 ; 2 ; 2 ; 2 ; 2 ; 2 ; 2 ; 2 ; 2 ; 2 ; 2 ; 2 ; 2 ; 2 ; 2 ; 2 ; 2 ; 2 ; 2 ; 2 ; 2 ; 2 ; 2 ; 2 ; 2 ; 2 ; 2 ; 2 ; 2 ; 2 ; 2 ; 2 ; 2 ; 2 ; 2 ; 2 ; 2 ; 2 ; 2 ; 2 ; 2 ; 2 ; 2 ; 2 ; 2 ; 2 ; 2 ; 2 ; 2 ; 2 ; 2 ; 2 ; 2 ; 2 ; 2 ; 2 ; 2 ; 2 ; 2 ; 2 ; 2 ; 2 ; 2 ; 2 ; 2 ; 2 ; 2 ; 2 ; 2 ; 2 ; 2 ; 2 ; 2 ; 2 ; 2 ; 2 ; 2 ; 2 ; 2 ; 2 ; 2 ; 2 ; 2 ; 2 ; 2 ; 2 ; 2 ; 2 ; 2 ; 2 ; 2 ; 2 ; 2 ; 2 ; 2 ; 2 ; 2 ; 2 ; 2 ; 2 ; 2 ; 2 ; 2 ; 2 ; 2 ; 2 ; 2 ; 2 ; 2 ; 2 ; 2 ; 2 ; 2 ; 2 ; 2 ; 2 ; 2 ; 2 ; 2 ; 2 ; 2 ; 2 ; 2 ; 2 ; 2 ; 2 ; 2 ; 2 ; 2 ; 2 ; 2 ; 2 ; 2 ; 2 ; 2 ;

# END OF TRANSLATION

```



   
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 


# END OF TRANSLATION




 

 
 
 
 
 
 
 
 
 
 
 
 
 
 1 ) { return 0 ; }
 
 
 1 }
 
 10 ; }
 
 1 }
 
 1 }
 
 1 }
 
 10 ; }
 
 1 }
 
 1 }
 1 }
 1 }
 1 }
 1 }
 1 } 
 1 } 
 1 } 1 } 1 1 } 1 1 } 1 1 } 1 1 } 1 1 } 1 1 } 1 1 } 1 1 } 1 1 1 } 1 1 1 } 1 1 1 1 1 } 1 1 1 1 1 1 1 1 1 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 1 2 1 2 1 1 2 1 1 2 1 1 2 1 1 2 1 1 2 1 1 2 1 2 1 1 2 1 1 2 1 1 2 1 1 2 1 1 2 1 1 2 1 1 2 1 1 2 1 1 2 1 1 2 1 1 2 1 1 2 1 1 2 1 1 2 1 1 2 1 1 2 1 1 2 1 1 2 1 1 2 1 1 2 1 1 2 1 1 2 1 1 2 1 1 1 2 1 1 2 1 1 2 1 1 2 1 1 2 1 1 2 1 1 2 1 1 2 1 1 2 1 1 2 1 1 2 1 1 1 2 1 1 1 2 1 1 2 1 1 2 1 1 1 2 1 1 2 1 1 2 1 1 2 1 1 2 1 1 1 2 1 1 2 1 1 1 2 1 1 2 1 1 1 2 1 1 2 1 1 2 1 1 2 1 1 1 2 1 1 1 2 1 1 2 1 1 1 2 1 1 2 1 1 1 2 1 1 2 1 1 1 2 1 1 2 1 1 1 2 1 1 2 1 1 1 2 1 1 1 2 1 1 2 1 1 1 2 1 1 1 2 1 1 2 1 1 1 2 1 1 2 1 1 1 2 1 1 2 1 1 1 2 1 1 1 2 1 1 1 2 1 1 1 2 1 1 2 1 1 1 2 1 1 1 2 1 1 1 2 1 1 1 2 1 1 1 2 1 1 1 2 1 1 1 2 1 1 1 2 

# END OF TRANSLATION




 

 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
  
 
 
 
 
  
 
 
 
 
 
 
 
 
 
 
  
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 


# END OF TRANSLATION




 

    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 


# END OF TRANSLATION




 
 
 
 0 ) ; }
 
 
 
 
 0 ) ; }
 
 
 0 ; }
 
 
 0 ; }
 
 0 ; }
 
 0 ; }
 
 0 ; }
 
 0 ; }
 
 
 0 ; } 
 
 0 ; } 
 
 0 ; } 
 
 0 ; } 
 
 0 ; } 
 
 0 ; } 
 
 0 ; } 
 0 ; } 
 0 ; } 
 
 0 ; 
 0 ; } 
 0 ; 
 0 ; } 
 0 ; 
 0 ; } 
 0 ; 
 0 ; } 
 0 ; } 
 0 ; 
 0 ; 
 0 ; } 
 0 ; 
 0 ; } 
 0 ; 
 0 ; 
 0 ; 
 0 ; 0 ; } 
 0 ; 
 0 ; 0 ; 0 ; 0 ; 0 ; 0 ; 0 ; 0 ; 0 ; 0 ; 0 ; 0 ; 0 ; 0 ; 0 ; 0 ; 0 ; 0 ; 0 ; 0 ; 0 ; 0 ; 0 ; 0 ; 0 ; 0 ; 0 ; 0 ; 0 ; 0 ; 0 ; 0 ; 0 ; 0 ; 0 ; 0 ; 0 ; 0 ; 0 ; 0 ; 0 ; 0 ; 0 ; 0 ; 0 ; 0 ; 0 ; 0 ; 0 ; 0 ; 0 ; 0 ; 0 ; 0 ; 0 ; 0 ; 0 ; 0 ; 0 ; 0 ; 0 ; 0 ; 0 ; 0 ; 0 ; 0 ; 0 ; 0 ; 0 ; 0 ; 0 ; 0 ; 0 ; 0 ; 0 ; 0 ; 0 ; 0 ; 0 ; 0 ; 0 ; 0 ; 0 ; 0 ; 0 ; 0 ; 0 ; 0 ; 0 ; 0 ; 0 ; 0 ; 0 ; 0 ; 0 ; 0 ; 0 ; 0 ; 0 ; 0 ; 0 ; 0 ; 0 ; 0 ; 0 ; 0 ; 0 ; 0 ; 0 ; 0 ; 0 ; 0 ; 0 ; 0 ; 0 ; 0 ; 0 ; 0 ; 0 ; 0 ; 0 ; 0 ; 0 ; 0 ; 0 ; 0 ; 0 ; 0 ; 0 ; 0 ; 0 ; 0 ; 0 ; 0 ; 0 ; 0 ; 0 ; 0 ; 0 ; 0 ; 0 ; 0 ; 0 ; 0 ; 0 ; 0 ; 0 ; 0 ; 0 ; 0 ; 0 ; 0 ; 0 ; 0 ; 0 ; 0 ; 0 ; 0 ; 0 ; 0 ; 0 ; 0 ; 0 ; 0 ; 0 ; 0 ; 0 ; 0 ; 0 ; 0 ; 0 ; 0 ; 0 ; 0 ; 0 ; 0 ; 0 ; 0 ; 0 ; 0 ; 0 ; 0 ; 0 ; 0 ; 0 ; 0 ; 0 ; 0 ; 0 ; 0 ; 0 ; 0 ; 0 ; 0 ; 0 ; 0 ; 

# END OF TRANSLATION



 

 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 


# END OF TRANSLATION




 


    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 


# END OF TRANSLATION




 

 
 
 
 
 
 
 
 
 
 
 
 
 
 
 10 ; }
 
 
 10 ; }
 
 1 ; }
 
 1 ; }
 
 1 ; }
 
 1 ; }
 
 1 ; }
 
 1 ; }
 
 1 ; }
 
 1 ; } 
 1 ; } 
 1 ; } 
 1 ; } 
 1 ; } 
 1 ; } 
 1 ; } 
 1 ; } 
 1 ; } 
 1 ; } 
 1 ; } 1 ; } 1 ; } 1 ; } 1 ; } 1 ; } 1 ; } 1 ; 1 ; } 1 ; } 1 ; } 1 ; 1 ; } 1 ; } 1 ; } 1 ; } 1 ; } 1 ; 1 ; } 1 ; } 1 ; 1 ; } 1 ; } 1 ; 1 ; } 1 ; } 1 ; 1 ; } 1 ; 1 ; } 1 ; 1 ; } 1 ; 1 ; 1 ; } 1 ; 1 ; 1 ; 1 ; } 1 ; 1 ; 1 ; 1 ; 1 ; 1 ; 1 ; 1 ; 1 ; 1 ; 1 ; 1 ; 1 ; 1 ; 1 ; 1 ; 1 ; 1 ; 1 ; 1 ; 1 ; 1 ; 1 ; 1 ; 1 ; 1 ; 1 ; 1 ; 1 ; 1 ; 1 ; 1 ; 1 ; 1 ; 1 ; 1 ; 1 ; 1 ; 1 ; 1 ; 1 ; 1 ; 1 ; 1 ; 1 ; 1 ; 1 ; 1 ; 1 ; 1 ; 1 ; 1 ; 1 ; 1 ; 1 ; 1 ; 1 ; 1 ; 1 ; 1 ; 1 ; 1 ; 1 ; 1 ; 1 ; 1 ; 1 ; 1 ; 1 ; 1 ; 1 ; 1 ; 1 ; 1 ; 1 ; 1 ; 1 ; 1 ; 1 ; 1 ; 1 ; 1 ; 1 ; 1 ; 1 ; 1 ; 1 ; 1 ; 1 ; 1 ; 1 ; 1 ; 1 ; 1 ; 1 ; 1 ; 1 ; 1 ; 1 ; 1 ; 1 ; 1 ; 1 ; 1 ; 1 ; 1 ; 1 ; 1 ; 1 ; 1 ; 1 ; 1 ; 1 ; 1 ; 1 ; 1 ; 1 ; 1 ; 1 ; 1 ; 1 ; 1 ; 1 ; 1 ; 1 ; 1 ; 1 ; 1 ; 1 ; 1 ; 1 ; 1 ; 1 ; 1 ; 1 ; 1 ; 1 ; 1 ; 1 ; 1 ; 1 ; 1 ; 1 ; 1 ; 1 ; 1 ; 1 ; 1 ; 1 ; 1 ; 1 ; 1 ; 1 ; 1 ; 1 ; 1 ; 1 ; 1 ; 1 ; 1 ; 1 ; 1 ; 1 ; 1 ; 1 ; 1 ; 1 ; 1 ; 1 ; 1 ; 1 ; 1 ; 1 ; 1 ; 1 ; 1 ; 1 ; 1 ; 1 ; 1 ; 1 ; 1 ; 1 ; 1 ; 1 ; 1

# END OF TRANSLATION

```



    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 


# END OF TRANSLATION



 
 
 
 
 1 , int fact = 1 ;
 
 1 , int fact = 1 ; }
 
 1 , int fact = 1 ; }
 
 1 , int fact = 1 ; }
 
 1 , int fact = 1 ; 2 , int fact = 1 ; }
 1 , int fact = 1 ; 2 , int fact = 1 ; 2 , int fact = 1 ; } 1 , int fact = 1 ; 2 , int fact = 1 ; 2 , int fact = 1 ; 2 , int fact = 1 ; 2 , int fact = 1 ; 2 , int fact = 1 ; 2 , int fact = 1 ; 2 , int fact = 1 ; 2 , int fact = 1 ; 2 , int fact = 1 ; 2 , int fact = 1 ; 2 , int fact = 1 ; 2 , int fact = 1 ; 2 , int fact = 1 ; 2 , int fact = 1 ; 2 , int fact = 1 ; 2 , int fact = 1 ; 2 , int fact = 1 ; 2 , int fact = 1 ; 2 , int fact = 1 ; 2 , int fact = 1 ; 2 , int fact = 1 ; 2 , int fact = 1 ; 2 , int fact = 1 ; 2 , int fact = 1 ; 2 , int fact = 1 ; 2 , int fact = 1 ; 2 , int fact = 1 ; 2 , int fact = 1 ; 2 , int fact = 1 ; 2 , int fact = 1 ; 2 , int fact = 1 ; 2 , int fact = 1 ; 2 , int fact = 1 ; 2 , int fact = 1 ; 2 , int fact = 1 ; 2 , int fact = 1 ; 2 , int fact = 1 ; 2 , int fact = 1 ; 2 , int fact = 1 ; 2 , int fact = 1 ; 2 , int fact = 1 ; 2 , int fact = 1 ; 2 , int fact = 1 ; 2 , int fact = 1 ; 2 , int fact = 1 ; 2 , int fact = 1 ; 2 , int fact = 1 ; 2 , int fact = 1 ; 2 , int fact = 1 ; 2 , int fact = 1 ; 2 , int fact = 1 ; 2 , int fact = 1 ; 2 , int fact = 1 ; 2 , int fact = 1 ; 2 , int fact = 1 ; 2 , int fact = 1 ; 2 , int fact = 1 ; 2 , int fact = 1 ; 2 , int fact = 1 ; 2 , int fact = 1 ; 2 , int fact = 1 ; 2 , int fact = 1 ; 2 , int fact = 1 ; 2 , int fact = 1 ; 2 , int fact = 1 ; 2 , int fact = 1 ; 2 , int fact = 1 ; 2 , int fact = 1 ; 2 , int fact = 1 ; 2 , int fact = 1 ; 2 , int fact = 1 ; 2 , int fact = 1 ; 2 , int fact = 1 ; 2 , int fact = 1 ; 2 , int fact = 1 ; 2 , int fact = 1 ; 2 , int fact = 1 ; 2 , int fact = 1 ; 2 , int fact = 1 ; 2 , int fact = 1 ; 2 , int fact = 1 ; 2 , int fact = 1 ; 2 , int fact = 1 ; 2 , int fact = 1 ; 2 , int fact = 1 ; 2 , int fact = 1 ; 2 , int fact = 1 ; 2 , int fact = 1 ; 2 , int fact = 1 ; 2 , int fact = 1 ; 2 , int fact = 1 ; 2 , int fact = 1 ; 2 , int fact = 1 ; 2 , int fact = 1 ; 2 , int fact = 1 ;

# END OF TRANSLATION





 


   
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    //  //  // 


# END OF TRANSLATION



 


    * c = a + b == a + c * b == a + c * b == a + c * b == a + c * b == a + c * b == a + c * b == a + c * b == a + c * b == a + c * b == a + c * b == a + c * b == a + c * b == a + c * b == a + c * b == a + c * b == a + c * b == a + c * b == a + c * b == a + c * b == a + c * b == a + c * b == a + c * b == a + c * b == a + c * b == a + c * b == a + c * b == a + c * b == a + c * b == a + c * b == a + c * b == a + c * b == a + c * b == a + c * b == a + c * b == a + c * b == a + c * b == a + c * b == a + c * b == a + c * b == a + c * b == a + c * b == a + c * b == a + c * b == a + c * b == a + c * b == a + c * b == a + c * b == a + c * b == a + c * b == a + c * b == a + c * b == a + c * b == a + c * b == a + c * b == a + c * b == a + c * b == a + c * b == a + c * b == a + c * b == a + c * b == a + c * b == a + c * b == a + c * b == a + c * b == a + c * b == a + c * b == a + c * b == a + c * b == a + c * b == a + c * b == a + c * b == a + c * b == a + c * b == a + c * b == a + c * b == a + c * b == a + c * b == a + c * b == a + c * b == a + c * b == a + c * b == a + c * b == a + c * b == a + c * b == a + c * b == a + c * b == a + c * b == a + c * b == a + c * b == a + c * b == a + c * b == a + c * b == a + c * b == a + c * b == a + c * b == a + c * b == a + c * b == a + c * b == a + c * b == a + c * b == a + c * b == a + c * b == a + c * b == a + c * b == a + c * b == a + c * b == a + c * b == a + c * b == a + c * b == a + c * b == a + c * b == a + c * b == a + c * b == a + c * b == a + c * b == a + c * b == a + c * b == a + c * b == a + c * b == a + c * b == a + c * b == a + c * b == a + c * b == a + c * b == a + c * b == a + c * b == a + c * b == a + c * b == a + c * b == a + c * b == a + c * b == a + c * b == a + c * b == a + c * b == a + c * b == a + c * b == a + c * b == a + c * b == a + c * b == a + c * b == a + c * b == a + c *

# END OF TRANSLATION





    // if ( k == 0 ) { return 1 ; }
    // if ( k == 0 ) { return 1 ; }
    // if ( k == 0 ) { return 1 ; }
    // if ( k == 0 ) { return 1 ; }
    // if ( k == 0 ) { return 1 ; }
    // if ( k == 0 ) { return 1 ; }
    // if ( k == 0 ) { return 1 ; }
    // if ( k == 0 ) { return 1 ; }
    // if ( k == 0 ) { return 1 ; }
    // if ( k == 0 ) { return 1 ; }
    // if ( k == 0 ) { return 1 ; }
    // if ( k == 0 ) { return 1 ; }
    // if ( k == 0 ) { return 1 ; }    // if ( k == 0 ) { return 1 ; }    // if ( k == 0 ) { return 1 ; }    // if ( k == 0 ) { return 1 ; }    // if ( k == 0 ) { return 1 ; }    // if ( k == 0 ) { return 1 ; }    // if ( k == 0 ) { return 1 ; }    // if ( k == 0 ) { return 1 ; }    // if ( k == 0 ) { return 1 ; }    // if ( k == 0 ) { return 1 ; }    // if ( k == 0 ) { return 1 ; }    // if ( k == 0 ) { return 1 ; }    // if ( k == 0 ) { return 1 ; }    // if ( k == 0 ) { return 1 ; }    // if ( k == 0 ) { return 1 ; }    // if ( k == 0 ) { return 1 ; }    // if ( k == 0 ) { return 1 ; }    // if ( k == 0 ) { return 1 ; }    // if ( k == 0 ) { return 1 ; }    // if ( k == 0 ) { return 1 ; }    // if ( k == 0 ) { return 1 ; }    // if ( k == 0 ) { return 1 ; }    // if ( k == 0 ) { return 1 ; }    // if ( k == 0 ) { return 1 ; }    // if ( k == 0 ) { return 1 ; }    // if ( k == 0 ) { return 1 ; }    // if ( k == 0 ) { return 1 ; }    // if ( k == 0 ) { return 1 ; }    // if ( k == 0 ) { return 1 ; }    // if ( k == 0 ) { return 1 ; }    // if ( k == 0 ) { return 1 ; }    // if ( k == 0 ) { return 1 ; }    // if ( k == 0 ) { return 1 ; }    // if ( k == 0 ) { return 1 ; }    // if ( k == 0 ) { return 1 ; }    // if ( k == 0 ) { return 1 ; }    // if ( k == 0 ) { return 1 ; }    // if ( k == 0 ) { return 1 ; }    // if ( k == 0 ) { return 1 ; }    // if ( k == 0 ) { return 1 ; }    // if ( k == 0 ) { return 1 ; }    // if ( k == 0 ) { return 1 ; }    // if ( k == 0 ) { return 1 ; }    // if ( k == 0 ) { return 1 ; }    // if ( k == 0 ) { return 1 ; }    // if ( k == 0 ) { return 1 ; }    // if ( k == 0 ) { return 1 ; }    // if ( k == 0 ) { return 

# END OF TRANSLATION




 


    // 20 ; }


 
    // 20 ; }
    // 20 ; }
    // 20 ; }
    // 20 ; }
    // 20 ; 
    // 20 ; 
    // 20 ; 
    // 20 ; 
    // 2 ; 
    // 2 ; 


# END OF TRANSLATION




 

    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 


# END OF TRANSLATION




 

 
 
 
 
 
 10 ; }
 
 
 10 ; }
 
 
 1 ; }
 
 1 ; 
 1 ; }
 
 1 ; 
 1 ; 2 ; 2 ; 1 ; 2 ; 2 ; 1 ; 2 ; 1 ; 2 ; 1 ; 2 ; 1 ; 2 ; 1 ; 2 ; 1 ; 2 ; 1 ; 2 ; 1 ; 2 ; 1 ; 2 ; 1 ; 2 ; 1 ; 2 ; 1 ; 2 ; 1 ; 2 ; 1 ; 2 ; 1 ; 2 ; 1 ; 2 ; 1 ; 2 ; 1 ; 2 ; 1 ; 2 ; 1 ; 2 ; 1 ; 2 ; 1 ; 2 ; 1 ; 2 ; 1 ; 2 ; 1 ; 2 ; 1 ; 2 ; 1 ; 2 ; 1 ; 2 ; 1 ; 2 ; 1 ; 2 ; 1 ; 2 ; 1 ; 2 ; 1 ; 2 ; 1 ; 2 ; 1 ; 2 ; 1 ; 2 ; 1 ; 2 ; 1 ; 2 ; 2 ; 1 ; 2 ; 1 ; 2 ; 1 ; 2 ; 1 ; 2 ; 1 ; 2 ; 1 ; 2 ; 1 ; 2 ; 2 ; 1 ; 2 ; 1 ; 2 ; 1 ; 2 ; 1 ; 2 ; 1 ; 2 ; 2 ; 1 ; 2 ; 1 ; 2 ; 1 ; 2 ; 1 ; 2 ; 2 ; 1 ; 2 ; 1 ; 2 ; 1 ; 2 ; 1 ; 2 ; 2 ; 1 ; 2 ; 1 ; 2 ; 2 ; 1 ; 2 ; 1 ; 2 ; 1 ; 2 ; 2 ; 1 ; 2 ; 1 ; 2 ; 2 ; 1 ; 2 ; 1 ; 2 ; 1 ; 2 ; 2 ; 1 ; 2 ; 1 ; 2 ; 2 ; 1 ; 2 ; 1 ; 2 ; 2 ; 1 ; 2 ; 2 ; 1 ; 2 ; 1 ; 2 ; 2 ; 1 ; 2 ; 1 ; 2 ; 2 ; 1 ; 2 ; 1 ; 2 ; 2 ; 1 ; 2 ; 2 ; 1 ; 2 ; 1 ; 2 ; 2 ; 1 ; 2 ; 1 ; 2 ; 2 ; 1 ; 2 ; 2 ; 1 ; 2 ; 1 ; 2 ; 2 ; 1 ; 2 ; 2 ; 1 ; 2 ; 2 ; 1 ; 2 ; 2 ; 1 ; 2 ; 2 ; 1 ; 2 ; 2 ; 1 ; 2 ; 2 ; 1 ; 2 ; 2 ; 1 ; 2 ; 2 ; 1 ; 2 ; 2 ; 1 ; 2 ; 2 ; 1 ; 2 ; 2 ; 1 ; 2 ; 2 ; 1 ; 2 ; 2 ; 1 ; 2 ; 2 ; 1 ; 2 ; 2 ; 1 ; 2 ; 2 ; 1 ; 2 ; 2 ; 1 ; 2 ; 2 ; 1 ; 2 ; 2 ; 1 ; 2 ; 2 ; 2 ; 1 ; 2 ; 2 ; 1 ; 2 ; 2 ; 1 ; 2 ; 2 ; 2 ; 1 ; 2 ; 2

# END OF TRANSLATION



 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 10 ; int i = 0 ; i++ ; int count = 0 ; i++ ; }
 
 1 ; }
 
 1 ; 
 1 ; int count = 0 ; i++ ; 
 1 ; int count = 0 ; i++ ; }
 
 1 ; int count = 0 ; i++ ; }
 
 1 ; int count = 0 ; i++ ; }
 
 1 ; int count = 0 ; i++ ; 1 ; int count = 0 ; i++ ; } 1 ; int count = 0 ; i++ ; int count = 0 ; i++ ; } 1 ; int count = 0 ; i++ ; int count = 0 ; i++ ; int count = 0 ; i++ ; int count = 0 ; i++ ; int count = 0 ; i++ ; int count = 0 ; i++ ; int count = 0 ; i++ ; int count = 0 ; i++ ; int count = 0 ; i++ ; int count = 0 ; i++ ; int count = 0 ; int count = 0 ; i++ ; int count = 0 ; int count = 0 ; i++ ; int count = 0 ; i++ ; int count = 0 ; int count = 0 ; i++ ; int count = 0 ; int count = 0 ; i++ ; int count = 0 ; int count = 0 ; i++ ; int count = 0 ; int count = 0 ; i++ ; int count = 0 ; int count = 0 ; i++ ; int count = 0 ; int count = 0 ; i++ ; int count = 0 ; int count = 0 ; i++ ; int count = 0 ; int count = 0 ; i++ ; int count = 0 ; int count = 0 ; int count = 0 ; i++ ; int count = 0 ; int count = 0 ; int count = 0 ; i++ ; int count = 0 ; int count = 0 ; int count = 0 ; i++ ; int count = 0 ; int count = 0 ; int count = 0 ; i++ ; int count = 0 ; int count = 0 ; int count = 0 ; int count = 0 ; int count = 0 ; int count = 0 ; i++ ; int count = 0 ; int count = 0 ; int count = 0 ; int count = 0 ; int count = 0 ; int count = 0 ; int count = 0 ; int count = 0 ; int count = 0 ; int count = 0 ; int count = 0 ; int count = 0 ; int count = 0 ; int count = 0 ; int count = 0 ; int count = 0 ; int count = 0 ; int count = 0 ; int count = 0 ; int count = 0 ; int count = 0 ; int count = 0 ; int count = 0 ; int count = 0 ; int count = 0 ; int count = 0 ; int count = 0 ; int count = 0 ; int count = 0 ; int count = 0 ; int count = 0 ; int count = 0 ; int count = 0 ; int count = 0 ; int count = 0 ; int count = 0 ; int count = 0 ; int count = 0 ; int count = 0 ; int count = 0 ; int count = 0 ; int count = 0 ; int count = 0 ; int count = 0 ; int count = 0 ; int count = 0 ; int count = 0 ; int count = 0 ; int count = 0 ; int count = 0 ; int count = 0 ; int count = 0 ; int count = 0 ; int count = 0 ; int count = 0 ; int count = 0 ; int count = 0 ; int count = 0 ; int count = 0 ; int count = 0 ; int count = 0 ; int count = 0 ; int count = 0 ; int count = 0 ; int count = 0 ; int count = 0 ; int count = 0 ; int count = 0 ; int count = 0 ; int count = 0 ; int count = 0 ; int count = 0 ; int count = 

# END OF TRANSLATION





 


    // if ( x , y ) { return 1 ; } else {
    // if ( x , y ) { return 1 ; } else {
    // if ( x , y ) { return 1 ; } else {
    // if ( x , y ) { return 1 ; } else {
    // if ( x , y ) { return 1 ; } else {
    // if ( x , y ) { return 1 ; } else {
    // if ( x , y ) { return 1 ; } else {
    // if ( x , y ) { return 1 ; } else {
    // if ( x , y ) { return 1 ; } else {
    // if ( x , y ) { return 1 ; } else {
    // if ( x , y ) { return 1 ; } else {
    // if ( x , y ) { return 1 ; } else {
    // if ( x , y ) { return 1 ; } else {
    // if ( x , y ) { return 1 ; } else {
    // if ( x , y ) { return 1 ; } else {
    // if ( x , y ) { return 1 ; } else {
    // if ( x , y ) { return 1 ; } else {
    // if ( x , y ) { return 1 ; } else {
    // if ( x , y ) { return 1 ; } else {
    // if ( x , y ) { return 1 ; } else {
    // if ( x , y ) { return 1 ; } else {
    // if ( x , y ) { return 1 ; } else {
    // if ( x , y ) { return 1 ; } else {
    // if ( x , y ) { return 1 ; } else {
    // if ( x , y ) { return 1 ; } else {
    // if ( x , y ) { return 1 ; } else {
    // if ( x , y ) { return 1 ; } else {
    // if ( x , y ) { return 1 ; } else {
    // if ( x , y ) { return 1 ; } else {
    // if ( x , y ) { return 1 ; } else {
    // if ( x , y ) { return 1 ; } else {
    // if ( x , y ) { return 1 ; } else {
    // if ( x , y ) { return 1 ; } else {
    // if ( x , y ) { return 1 ; } else {
    // if ( x , y ) { return 1 ; } else {
    // if ( x , y ) { return 1 ; } else {
    // if ( x , y ) { return 1 ; } else {
    // if ( x , y ) { return 1 ; } else {
    // if ( x , y ) { return 1 ; } else {
    // if ( x , y ) { return 1 ; } else {
    // if ( x , y ) { return 1 ; } else {
    // if ( x , y ) { return 1 ; } else {
    // if ( x , y ) { return 1 ; } else {
    // if ( x , y ) { return 1 ; } else {
    // if ( x , y ) { return 1 ; } else {
    // if ( x , y ) { return 1 ; } else {
    // if ( x , y ) { return 1 ; } else {
    // if ( x , y ) { return 1 ; } else {
    // if ( x , y ) { return 1 ;

# END OF TRANSLATION





 



    // if ( y == 0 ) { return temp ; } else {
    // if ( y == 0 ) { return temp ; } else {
    // if ( y == 0 ) { return temp ; } else {
    // if ( y == 0 ) { return temp ; } else {
    // if ( y == 0 ) { return temp ; } else {
    // if ( y == 0 ) { return temp ; } else {
    // if ( y == 0 ) { return temp ; } else {
    // if ( y == 0 ) { return temp ; } else {
    // if ( y == 0 ) { return temp ; } else {
    // if ( y == 0 ) { return temp ; } else {
    // if ( y == 0 ) { return temp ; } else {
    // if ( y == 0 ) { return temp ; } else {
    // if ( y == 0 ) { return temp ; } else {
    // if ( y == 0 ) { return temp ; } else {
    // if ( y == 0 ) { return temp ; } else {
    // if ( y == 0 ) { return temp ; } else {
    // if ( y == 0 ) { return temp ; } else {
    // if ( y == 0 ) { return temp ; } else {
    // if ( y == 0 ) { return temp ; } else {
    // if ( y == 0 ) { return temp ; } else {
    // if ( y == 0 ) { return temp ; } else {
    // if ( y == 0 ) { return temp ; } else {
    // if ( y == 0 ) { return temp ; } else {
    // if ( y == 0 ) { return temp ; } else {
    // if ( y == 0 ) { return temp ; } else {
    // if ( y == 0 ) { return temp ; } else {
    // if ( y == 0 ) { return temp ; } else {
    // if ( y == 0 ) { return temp ; } else {
    // if ( y == 0 ) { return temp ; } else {
    // if ( y == 0 ) { return temp ; } else {
    // if ( y == 0 ) { return temp ; } else {
    // if ( y == 0 ) { return temp ; } else {
    // if ( y == 0 ) { return temp ; } else {
    // if ( y == 0 ) { return temp ; } else {
    // if ( y == 0 ) { return temp ; } else {
    // if ( y == 0 ) { return temp ; } else {
    // if ( y == 0 ) { return temp ; } else {
    // if ( y == 0 ) { return temp ; } else {
    // if ( y == 0 ) { return temp ; } else {
    // if ( y == 0 ) { return temp ; } else {
    // if ( y == 0 ) { return temp ; } else {
    // if ( y == 0 ) { return temp ; } else {
    // if ( y == 0 ) { return temp ; } else {
    // if ( y == 0 ) { return temp ; } else {
    // if ( y == 0 ) { return temp ; } else {
    // if ( y == 0 ) { return temp ; } else {
    // if ( y == 0 ) { return temp ; } else {
    // if ( y == 0 ) { return {
    // if ( y == 0 ) { return temp ; } else {
    // if ( y == 0 ) { return {
    // if ( y == 0 ) { return temp ; } else {
    // if ( y == 0 ) { return {
    // if ( y == 0 ) { return

# END OF TRANSLATION





 



    // if ( x , y ) { return 0 ; } else {
    // if ( x , y ) { return 0 ; } else {
    // if ( x , y ) { return 0 ; } else {
    // if ( x , y ) { return 0 ; } else {
    // if ( x , y ) { return 0 ; } else {
    // if ( x , y ) { return 0 ; } else {
    // if ( x , y ) { return 0 ; } else {
    // if ( x , y ) { return 0 ; } else {
    // if ( x , y ) { return 0 ; } else {
    // if ( x , y ) { return 0 ; } else {
    // if ( x , y ) { return 0 ; } else {
    // if ( x , y ) { return 0 ; } else {
    // if ( x , y ) { return 0 ; } else {
    // if ( x , y ) { return 0 ; } else {
    // if ( x , y ) { return 0 ; } else {
    // if ( x , y ) { return 0 ; } else {
    // if ( x , y ) { return 0 ; } else {
    // if ( x , y ) { return 0 ; } else {
    // if ( x , y ) { return 0 ; } else {
    // if ( x , y ) { return 0 ; } else {
    // if ( x , y ) { return 0 ; } else {
    // if ( x , y ) { return 0 ; } else {
    // if ( x , y ) { return 0 ; } else {
    // if ( x , y ) { return 0 ; } else {
    // if ( x , y ) { return 0 ; } else {
    // if ( x , y ) { return 0 ; } else {
    // if ( x , y ) { return 0 ; } else {
    // if ( x , y ) { return 0 ; } else {
    // if ( x , y ) { return 0 ; } else {
    // if ( x , y ) { return 0 ; } else {
    // if ( x , y ) { return 0 ; } else {
    // if ( x , y ) { return 0 ; } else {
    // if ( x , y ) { return 0 ; } else {
    // if ( x , y ) { return 0 ; } else {
    // if ( x , y ) { return 0 ; } else {
    // if ( x , y ) { return 0 ; } else {
    // if ( x , y ) { return 0 ; } else {
    // if ( x , y ) { return 0 ; } else {
    // if ( x , y ) { return 0 ; } else {
    // if ( x , y ) { return 0 ; } else {
    // if ( x , y ) { return 0 ; } else {
    // if ( x , y ) { return 0 ; } else {
    // if ( x , y ) { return 0 ; } else {
    // if ( x , y ) { return 0 ; } else {
    // if ( x , y ) { return 0 ; } else {
    // if ( x , y ) { return 0 ; } else {
    // if ( x , y ) { return 0 ; } else {
    // if ( x , y ) { return 0 ; } else {
    // if ( x , y ) { return 0 ; } else {
    // if ( x , y ) { return 0 ; } else {

# END OF TRANSLATION





 



 

    // 
 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 


# END OF TRANSLATION




 



 

    // if ( n == 0 ) { return false ; }
 
    // if ( n == 0 ) { return false ; }
    // if ( n == 0 ) { return false ; }
    // if ( n == 0 ) { return false ; }
    // if ( n == 0 ) { return false ; }
    // if ( n == 0 ) { return false ; }
    // if ( n == 0 ) { return false ; }
    // if ( n == 0 ) { return false ; }
    // if ( n == 0 ) { return false ; }
    // if ( n == 0 ) { return false ; }
    // if ( n == 0 ) { return false ; }
    // if ( n == 0 ) { return false ; }
    // if ( n == 0 ) { return false ; }
    // if ( n == 0 ) { return false ; }
    // if ( n == 0 ) { return false ; }
    // if ( n == 0 ) { return false ; }
    // if ( n == 0 ) { return false ; }
    // if ( n == 0 ) { return false ; }
    // if ( n == 0 ) { return false ; }
    // if ( n == 0 ) { return false ; }
    // if ( n == 0 ) { return false ; }
    // if ( n == 0 ) { return false ; }
    // if ( n == 0 ) { return false ; }
    // if ( n == 0 ) { return false ; }
    // if ( n == 0 ) { return false ; }
    // if ( n == 0 ) { return false ; }
    // if ( n == 0 ) { return false ; }
    // if ( n == 0 ) { return false ; }    // if ( n == 0 ) { return false ; }
    // if ( n == 0 ) { return false ; }    // if ( n == 0 ) { return false ; }    // if ( n == 0 ) { return false ; }    // if ( n == 0 ) { return false ; }    // if ( n == 0 ) { return false ; }
    // if ( n == 0 ) { return false ; }    // if ( n == 0 ) { return false ; }    // if ( n == 0 ) { return false ; }    // if ( n == 0 ) { return false ; }    // if ( n == 0 ) { return false ; }    // if ( n == 0 ) { return false ; }    // if ( n == 0 ) { return false ; }    // if ( n == 0 ) { return false ; }    // if ( n == 0 ) { return false ; }    // if ( n == 0 ) { return false ; }    // if ( n == 0 ) { return false ; }    // if ( n == 0 ) { return false ; }    // if ( n == 0 ) { return false ; }    // if ( n == 0 ) { return false ; }    // if ( n == 0 ) { return false ; }    // if ( n == 0 ) { return false ; }    // if ( n == 0 ) { return false ; }    // if ( n == 0 ) { return false ; }    // if ( n == 0 ) { return false ; }    // if ( n == 0 ) { return false ; }    // if ( n == 0 ) { return false ; }    // if ( n == 0 ) { return false ; }    // if ( n == 0 ) { return false ; }    // if ( n == 0 ) { return false ; }    // if ( n == 0 ) { return false ; }    // if ( n == 0 ) { return false ; }    // if ( n == 0 ) { return false ; }    // if ( n == 0 ) { return false ; }    // if ( n == 0 ) { return false ; }    //

# END OF TRANSLATION




 

    int x = m ; int x = x ; int x1 = x ; int x1 = x ; int x1 ; }
    // int x1 = x ; int x1 = x ; int x1 = x ; int x1 = x ; int x1 ; int x1 = x ; int x1 ; int x1 = x ; int x1 = x ; int x1 ; int x1 = x ; int x1 = x ; int x1 ; int x1 = x ; int x1 = x ; int x1 ; int x1 = x ; int x1 = x ; int x1 ; int x1 = x1 ; int x1 = x ; int x1 ; int x1 = x1 ; int x1 = x ; int x1 ; int x1 = x1 ; int x1 = x1 ; int x1 = x1 ; int x1 = x1 ; int x1 = x1 ; int x1 = x1 ; int x1 = x1 ; int x1 = x1 ; int x1 = x1 ; int x1 = x1 ; int x1 = x1 ; int x1 = x1 ; int x1 = x1 ; int x1 = x1 ; int x1 = x1 ; int x1 = x1 ; int x1 = x1 ; int x1 = x1 ; int x1 = x1 ; int x1 = x1 ; int x1 = x1 ; int x1 = x1 ; int x1 = x1 ; int x1 = x1 ; int x1 = x1 ; int x1 = x1 ; int x1 = x1 ; int x1 = x1 ; int x1 = x1 ; int x1 = x1 ; int x1 = x1 ; int x1 = x1 ; int x1 = x1 ; int x1 = x1 ; int x1 = x1 ; int x1 = x1 ; int x1 = x1 ; int x1 = x1 ; int x1 = x1 ; int x1 = x1 ; int x1 = x1 ; int x1 = x1 ; int x1 = x1 ; int x1 = x1 ; int x1 = x1 ; int x1 = x1 ; int x1 = x1 ; int x1 = x1 ; int x1 = x1 ; int x1 = x1 ; int x1 = x1 ; int x1 = x1 ; int x1 = x1 ; int x1 = x1 ; int x1 = x1 ; int x1 = x1 ; int x1 = x1 ; int x1 = x1 ; int x1 = x1 ; int x1 = x1 ; int x1 = x1 ; int x1 = x1 ; int x1 = x1 ; int x1 = x1 ; int x1 = x1 ; int x1 = x1 ; int x1 = x1 ; int x1 = x1 ; int x1 = x1 ; int x1 = x1 ; int x1 = x1 ; int x1 = x1 ; int x1 = x1 ; int x1 = x1 ; int x1 = x1 ; int x1 = x1 ; int x1 = x1 ; int x1 = x1 ; int x1 = x1 ; int x1 = x1 ; int x1 = x1 ; int x1 = x1 ; int x1 = x1 ; int x1 = x1 ; int x1 = x1 ; int x1 = x1 ; int x1 = x1 ; int x1 = x1 ; int x1 = x1 ; int x1 = x1 ; int x1 =

# END OF TRANSLATION




 

 

 2 = i ; }
 

 
 2 = i ; } ; }
 
 
 
 
 2 = i ; } ; }
 
 
 2 = i ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ;

# END OF TRANSLATION




 


    int i = 0 ; }
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    //  // 


# END OF TRANSLATION





 


    // if ( temp .length ( ) { return false ; } else {
    // if ( temp .length ) { return false ; } else {
    // if ( temp .length ) { return false ; }
    // if ( temp .length ) { return false ; } else {
    // if ( temp .length ) { return false ; } else {
    // if ( temp .length ) { return false ; } else {
    // if ( temp .length ) { return false ; } else {
    // if ( temp .length ) { return false ; } else {
    // if ( temp .length ) { return false ; } else {
    // if ( temp .length ) { return false ; } else {
    // if ( temp .length ) { return false ; } else {
    // if ( temp .length ) { return false ; } else {
    // if ( temp .length ) { return false ; } else {
    // if ( temp .length ) { return false ; } else {
    // if ( temp .length ) { return false ; } else {
    // if ( temp .length ) { return false ; } else {
    // if ( temp .length ) { return false ; } else {
    // if ( temp .length ) { return false ; } else {
    // if ( temp .length ) { return false ; } else {
    // if ( temp .length ) { return false ; } else {
    // if ( temp .length ) { return false ; } else {
    // if ( temp .length ) { return false ; } else {
    // if ( temp .length ) { return false ; } else {
    // if ( temp .length ) { return false ; } else {
    // if ( temp .length ) { return false ; } else {
    // if ( temp .length ) { return false ; } else {
    // if ( temp .length ) { return false ; } else {
    // if ( temp .length ) { return false ; } else {
    // if ( temp .length ) { return false ; } else {
    // if ( temp .length ) { return false ; } else {
    // if ( temp .length ) { return false ; } else {
    // if ( temp .length ) { return false ; } else {
    // if ( temp .length ) { return false ; } else {
    // if ( temp .length ) { return false ; } else {
    // if ( temp .length ) { return false ; } else {
    // if ( temp .length ) { return false ; } else {
    // if ( temp .length ) { return false ; } else {
    // if ( temp .length ) { return false ; } else {
    // if ( temp .length ) { return false ; } else {
    // if ( temp .length ) { return false ; } else {
    // if ( temp .length ) { return false ; } else {
    // if ( temp .length ) { return false ; } else {
    // if ( temp .length ) { return false ; } else {
    // if ( temp .length ) { return false ; } else {
    // if ( temp .length ) { return false ; } else {
    // if ( temp .length ) { return false ; } else {
    // if ( temp .length ) { return false ; } else {
    // if ( temp .length ) { return false ; } else {
    // if ( temp .length ) { return false ; } else {
    // if ( temp .length ) { return false ; } else {
    // if ( temp .length ) { return { return false ; } else {
    // if ( temp .length ) { return false ; }

# END OF TRANSLATION






 

    // if ( i <= n ) {
    // if ( i <= n ) {
    // if ( i <= n ) {
    // if ( i <= n ) {
    // if ( i <= n ) {
    // if ( i <= n ) {
    // if ( i <= n ) {
    // if ( i <= n ) {
    // if ( i <= n ) {
    // if ( i <= n ) {
    // if ( i <= n ) {
    // if ( i <= n ) {
    // if ( i <= n ) {
    // if ( i <= n ) {
    // if ( i <= n ) {
    // if ( i <= n ) {
    // if ( i <= n ) {
    // if ( i <= n ) {
    // if ( i <= n ) {
    // if ( i <= n ) {
    // if ( i <= n ) {
    // if ( i <= n ) {
    // if ( i <= n ) {
    // if ( i <= n ) {
    // if ( i <= n ) {
    // if ( i <= n ) {
    // if ( i <= n ) {
    // if ( i <= n ) {
    // if ( i <= n ) {
    // if ( i <= n ) {
    // if ( i <= n ) {
    // if ( i <= n ) {
    // if ( i <= n ) {
    // if ( i <= n ) {
    // if ( i <= n ) {
    // if ( i <= n ) {
    // if ( i <= n ) {
    // if ( i <= n ) {
    // if ( i <= n ) {
    // if ( i <= n ) {
    // if ( i <= n ) {
    // if ( i <= n ) {
    // if ( i <= n ) {
    // if ( i <= n ) {
    // if ( i <= n ) {
    // if ( i <= n ) {
    // if ( i <= n ) {
    // if ( i <= n ) {
    // if ( i <= n ) {
    // if ( i <= n ) {
    // if ( i <= n ) {
    // if ( i <= n ) {
    // if ( i <= n ) {
    // if ( i <= n ) {
    // if ( i <= n ) {
    // if ( i <= n ) {
    // if ( i <= n ) {
    // if ( i <= n ) {
    // if ( i <= n ) {
    // if ( i <= n ) {
    // if ( i <= n ) {
    // if ( i <= n ) {
    // if ( i <= n ) {
    // if ( i <= n ) {
    // if ( i <= n ) {
    // if ( i <= n ) {
    // if ( i <= n ) {
    // if ( i <= n ) {
    // if ( i <= n ) {
    // if ( i <= n ) {
    // if ( i <= n ) {
    // if ( i <= n ) {
    // if ( i <= n ) {
    // if ( i <= n ) {
    // if ( i <= n ) {
    // if ( i <= n ) {
   

# END OF TRANSLATION

 int ( mid ) ; }
 int ( mid ) ; } else {
 int ( mid ) ; } else {
 int ( mid ) ; } ; }
 int ( mid ) ; } else {
 int ( mid ) ; } else {
 int ( mid ) ; } ; } else {
 int ( mid ) ; } ; } else {
 int ( mid ) ; } ; } else {
 int ( mid ) ; } ; } ; } else {
 int ( mid ) ; } ; } ; } else {
 int ( mid ) ; } ; } ; } ; } else {
 int ( mid ) ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; }

# END OF TRANSLATION





 


    // if ( required == true ) {
    // if ( required == true ) {
    // if ( required == true ) {
    // if ( required == true ) {
    // if ( required == true ) {
    // if ( required == true ) {
    // if ( required == true ) {
    // if ( required == true ) {
    // if ( required == true ) {
    // if ( required == true ) {
    // if ( required == true ) {
    // if ( required == true ) {
    // if ( required == true ) {
    // if ( required == true ) {
    // if ( required == true ) {
    // if ( required == true ) {
    // if ( required == true ) {
    // if ( required == true ) {
    // if ( required == true ) {
    // if ( required == true ) {
    // if ( required == true ) {
    // if ( required == true ) {
    // if ( required == true ) {
    // if ( required == true ) {
    // if ( required == true ) {
    // if ( required == true ) {
    // if ( required == true ) {
    // if ( required == true ) {
    // if ( required == true ) {
    // if ( required == true ) {
    // if ( required == true ) {
    // if ( required == true ) {
    // if ( required == true ) {
    // if ( required == true ) {
    // if ( required == true ) {
    // if ( required == true ) {
    // if ( required == true ) {
    // if ( required == true ) {
    // if ( required == true ) {
    // if ( required == true ) {
    // if ( required == true ) {
    // if ( required == true ) {
    // if ( required == true ) {
    // if ( required == true ) {
    // if ( required == true ) {
    // if ( required == true ) {
    // if ( required == true ) {
    // if ( required == true ) {
    // if ( required == true ) {
    // if ( required == true ) {
    // if ( required == true ) {
    // if ( required == true ) {
    // if ( required == true ) {
    // if ( required == true ) {
    // if ( required == true ) {
    // if ( required == true ) {
    // if ( required == true ) {
    // if ( required == true ) {
    // if ( required == true ) {
    // if ( required == true ) {
    // if ( required == true ) {
    // if ( required == true ) {
    // if ( required == true ) {
    // if ( required == true ) {
    // if ( required == true ) {
    // if ( required == true ) {
    // if ( required == true ) {
    // if ( required == true ) {
    // if ( required == true ) {
    // if ( required == true ) {
    // if ( required == true ) {
    // if ( required == true ) {
    // if ( required == true ) {
    // if ( required == true ) {
    // if ( required == true ) {
    // if ( required == true ) {
    // if ( required == true ) {
    // if ( required == true ) {
    // if ( required == true ) {
    // if ( required == true ) {
    // if ( required == true ) {
    // if ( required == true ) {
    // if ( required == true ) {
    // if ( required

# END OF TRANSLATION





 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    //  // 


# END OF TRANSLATION




 

 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 10 ) { return 0 ; }
 
 
 
 
 10 ; }
 
 
 10 ; }
 
 
 
 10 ; 
 10 ; 
 10 ; 
 10 ; 
 10 ; 
 10 ; 
 10 ; 
 10 ; 
 10 ; 
 1 10 ; 
 1 1 0 ; 
 1 0 ; 
 1 0 ; 
 1 0 ; 1 0 ; 1 0 ; 1 0 ; 1 0 ; 0 ; 1 0 ; 1 0 ; 1 0 ; 1 0 ; 1 0 ; 0 ; 1 0 ; 1 0 ; 0 ; 1 0 ; 1 0 ; 1 0 ; 1 0 ; 1 0 ; 0 ; 1 0 ; 1 0 ; 0 ; 1 0 ; 0 ; 1 0 ; 1 0 ; 1 0 ; 0 ; 1 0 ; 1 0 ; 0 ; 1 0 ; 1 ; 0 ; 0 ; 1 ; 0 ; 1 ; 0 ; 1 ; 0 ; 1 ; 0 ; 1 ; 0 ; 1 ; 0 ; 1 ; 0 ; 1 ; 0 ; 1 ; 0 ; 1 ; 0 ; 0 ; 1 ; 0 ; 1 ; 0 ; 0 ; 1 ; 0 ; 1 ; 0 ; 1 ; 0 ; 1 ; 0 ; 1 ; 0 ; 0 ; 1 ; 0 ; 1 ; 0 ; 1 ; 0 ; 0 ; 1 ; 0 ; 1 ; 0 ; 1 ; 0 ; 1 ; 0 ; 1 ; 0 ; 1 ; 0 ; 1 ; 0 ; 1 ; 0 ; 1 ; 0 ; 1 ; 0 ; 1 ; 0 ; 1 ; 0 ; 1 ; 0 ; 0 ; 1 ; 0 ; 1 ; 0 ; 1 ; 0 ; 1 ; 0 ; 1 ; 0 ; 1 ; 0 ; 1 ; 0 ; 1 ; 0 ; 1 ; 0 ; 1 ; 0 ; 1 ; 0 ; 1 ; 0 ; 1 ; 0 ; 1 ; 0 ; 1 ; 0 ; 1 ; 0 ; 1 ; 0 ; 1 ; 0 ; 1 ; 0 ; 1 ; 0 ; 1 ; 0 ; 1 ; 0 ; 1 ; 0 ; 1 ; 0 ; 1 ; 0 ; 1 ; 0 ; 1 ; 0 ; 1 ; 0 ; 1 ; 0 ; 1 ; 0 ; 1 ; 0 ; 1 ; 0 ; 1 ;

# END OF TRANSLATION


 
    int i = 0 ; }
 
    int i = 0 ; }
    int i = 0 ; }
    int i = 0 ; i ++ i ; }
    int i = 0 ; }
    int i = 0 ; }
    int i = 0 ; }
    int i = 0 ; i = 0 ; }
    int i = 0 ; }
    int i = 0 ; i = 0 ; int i = 0 ; i = 0 ; int i = 0 ; i = 0 ; }
    int i = 0 ; i = 0 ; }
    int i = 0 ; i = 0 ; }
    int i = 0 ; i = 0 ; int i = 0 ; i = 0 ; int i = 0 ; i = 0 ; int i = 0 ; i = 0 ; }    int i = 0 ; i = 0 ; int i = 0 ; i = 0 ; i = 0 ; int i = 0 ; i = 0 ; }    int i = 0 ; i = 0 ; int i = 0 ; i = 0 ; int i = 0 ; i = 0 ; i = 0 ; int i = 0 ; i = 0 ; i = 0 ; int i = 0 ; i = 0 ; int i = 0 ; i = 0 ; int i = 0 ; i = 0 ; i = 0 ; int i = 0 ; i = 0 ; i = 0 ; int i = 0 ; i = 0 ; int i = 0 ; i = 0 ; i = 0 ; int i = 0 ; i = 0 ; i = 0 ; int i = 0 ; i = 0 ; i = 0 ; int i = 0 ; i = 0 ; i = 0 ; int i = 0 ; i = 0 ; i = 0 ; int i = 0 ; i = 0 ; i = 0 ; int i = 0 ; i = 0 ; i = 0 ; int i = 0 ; i = 0 ; i = 0 ; int i = 0 ; i = 0 ; i = 0 ; int i = 0 ; i = 0 ; i = 0 ; i = 0 ; int i = 0 ; i = 0 ; i = 0 ; i = 0 ; int i = 0 ; i = 0 ; i = 0 ; i = 0 ; int i = 0 ; i = 0 ; i = 0 ; i = 0 ; int i = 0 ; i = 0 ; i = 0 ; i = 0 ; i = 0 ; int i = 0 ; i = 0 ; i = 0 ; i = 0 ; i = 0 ; int i = 0 ; i = 0 ; i = 0 ; i = 0 ; i = 0 ; int i = 0 ; i = 0 ; i = 0 ; i = 0 ; i = 0 ; i = 0 ; i = 0 ; int i = 0 ; i = 0 ; i = 0 ; i = 0 ; i = 0 ; i = 0 ; i = 0 ; i = 0 ; i = 0 ; i = 0 ; i = 0 ; i = 0 ; i = 0 ; i = 0 ; i = 0 ; i = 0 ; i = 0 ; i = 0 ; i = 0 ; i = 0

# END OF TRANSLATION





 


 

   = 0 ; }

 

    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    //  // 
    //  // 


# END OF TRANSLATION




    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    //  // 


# END OF TRANSLATION




    // 10 ; }


    // 10 ; }
    // 10 ; }
    // 10 ; }
    // 10 ; }
    // 1 ; 
    // 1 ; 
    // 1 ; 
    // 1 ; 
    // 1 ; 
    // 2 ;  // 2 ;  // 2 ;  // 2 ;  // 1 ;  // 2 ;  // 1 ;  // 2 ;  // 1 ;  // 2 ;  // 1 ;  // 2 ;  // 2 ;  // 1 ;  // 2 ;  // 1 ;  // 2 ;  // 1 ;  // 2 ;  // 1 ;  // 2 ;  // 2 ;  // 1 ;  // 2 ;  // 2 ;  // 1 ;  // 2 ;  // 1 ;  // 2 ;  // 2 ;  // 1 ;  // 2 ;  // 2 ;  // 1 ;  // 2 ;  // 1 ;  // 2 ;  // 2 ;  // 1 ;  // 2 ;  // 2 ;  // 1 ;  // 2 ;  // 2 ;  // 1 ;  // 2 ;  // 2 ;  // 1 ;  // 2 ;  // 2 ;  // 1 ;  // 2 ;  // 2 ;  // 1 ;  // 2 ;  // 2 ;  // 1 ;  // 2 ;  // 2 ;  // 1 ;  // 2 ;  // 2 ;  // 1 ;  // 2 ;  // 2 ;  // 1 ;  // 2 ;  // 2 ;  // 2 ;  // 1 ;  // 2 ;  // 2 ;  // 2 ;  // 1 ;  // 2 ;  // 2 ;  // 1 ;  // 2 ;  // 2 ;  // 2 ;  // 1 ;  // 2 ;  // 2 ;  // 2 ;  // 1 ;  // 2 ;  // 2 ;  // 2 ;  // 1 ;  // 2 ;  // 2 ;  // 2 ;  // 2 ;  // 1 ;  // 2 ;  // 2 ;  // 2 ;  // 2 ;  // 1 ;  // 2 ;  // 2 ;  // 2 ;  // 2 ;  // 2 ;  // 1 ;  // 2 ;  // 2 ;  // 2 ;  // 2 ;  // 2 ;  // 1 ;  // 2 ;  // 2 ;  // 2 ;  // 2 ;  // 2 ;  // 2 ;  // 2 ;  // 1 ;  // 2 ;  // 2 ;  // 2 ;  // 2 ;  // 2 ;  // 2 ;  // 2 ;  // 2 ;  // 2 ;  // 2 ;  // 2 ;  // 2 ;  // 2 ;  // 2 ;  // 2 ;  // 2 ;  // 2 ;  // 2 ;  // 2 ;  // 2 ;  // 2 ;  // 2 ;  // 2 ;

# END OF TRANSLATION





    int x = a ; int x = a ; int x ; int y = a ; int y ; } else {
    int x = a ; int x ; int = a ; int = a ; int = a ; int = a ; int = a ; int = a ; int = a ; int = a ; int = a ; int = a ; int = a ; int = a ; int = a ; int = a ; int = a ; int = a ; int = a ; int = a ; int = a ; int = a ; int = a ; int = a ; int = a ; int = a ; int = a ; int = a ; int = a ; int = a ; int = a ; int = a ; int = a ; int = a ; int = a ; int = a ; int = a ; int = a ; int = a ; int = a ; int = a ; int = a ; int = a ; int = a ; int = a ; int = a ; int = a ; int = a ; int = a ; int = a ; int = a ; int = a ; int = a ; int = a ; int = a ; int = a ; int = a ; int = a ; int = a ; int = a ; int = a ; int = a ; int = a ; int = a ; int = a ; int = a ; int = a ; int = a ; int = a ; int = a ; int = a ; int = a ; int = a ; int = a ; int = a ; int = a ; int = a ; int = a ; int = a ; int = a ; int = a ; int = a ; int = a ; int = a ; int = a ; int = a ; int = a ; int = a ; int = a ; int = a ; int = a ; int = a ; int = a ; int = a ; int = a ; int = a ; int = a ; int = a ; int = a ; int = a ; int = a ; int = a ; int = a ; int = a ; int = a ; int = a ; int = a ; int = a ; int = a ; int = a ; int = a ; int = a ; int = a ; int = a ; int = a ; int = a ; int = a ; int = a ; int = a ; int = a ; int = a ; int = a ; int = a ; int = a ; int = a ; int = a ; int = a ; int = a ; int = a ; int = a ; int = a ; int = a ; int = a ; int = a ; int = a ; int = a ; int = a ; int = a ; int = a ; int = a ; int = a ; int = a ; int = a ; int = a ; int = a ; int = a ; int = a ; int = a ; int = a ; int = a ; int = a ; int = a ; int = a ; int = a ; int = a ; int = a ; int = a ; int = a ; int = a ; int = a ; int = a ; int = a ; int = a ; int = a ; int = a ; int = a ; int = a ; int = a ; int = a ; int = a ; int = a ; int = a ; int = a ; int = a ; int = a ; int = a ; int = a ; int = a ; int = a ; int = a ; int = a ; int = a ; int = a ; int = a ; int = a ; int = a ; int = a ; int = a ; int = a ; int = a ; int = a ; int = a ; int = a ; int = a ; int = a ; int = a ; int = a ; int = a ; int = a ; int = a ; int = a ; int = a ; int = a ; int = a ; int =

# END OF TRANSLATION




   
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    //  // 


# END OF TRANSLATION





 

    // 2 = ( mid ) ; }
    // 2 = ( mid + 1 ; }
    // 2 = ( mid + 1 ) ; }
    // 2 = ( mid + 1 ; } else {
    // 2 = ( mid + 1 ; }
    // 2 = ( mid + 1 ; }
    // 2 = ( mid + 1 ; }
    // 2 = ( mid + 1 ; } else {
    // 2 = ( mid + 1 ; }
    // 2 = ( mid + 1 ; }
    // 2 = ( mid + 1 ; }
    // 2 = ( mid + 1 ; } else {
    // 2 = ( mid + 1 ; }
    // 2 = ( mid + 1 ; }
    // 2 = ( mid + 1 ; } else {
    // 2 = ( mid + 1 ; }
    // 2 = ( mid + 1 ; }
    // 2 = ( mid + 1 ; } else {
    // 2 = ( mid + 1 ; } else {
    // 2 = ( mid + 1 ; }
    // 2 = ( mid + 1 ; }
    // 2 = ( mid + 1 ; }
    // 2 = ( mid + 1 ; } else {
    // 2 = ( mid + 1 ; } else {
    // 2 = ( mid + 1 ; }    // 2 = ( mid + 1 ; }
    // 2 = ( mid + 1 ; }    // 2 = ( mid + 1 ; } else {
    // 2 = ( mid + 1 ; } else {
    // 2 = ( mid + 1 ; }    // 2 = ( mid + 1 ; }
    // 2 = ( mid + 1 ; }    // 2 = ( mid + 1 ; } else {
    // 2 = ( mid + 1 ; }    // 2 = ( mid + 1 ; } else {
    // 2 = ( mid + 1 ; }    // 2 = ( mid + 1 ; }    // 2 = ( mid + 1 ; } else {
    // 2 = ( mid + 1 ; }    // 2 = ( mid + 1 ; }    // 2 = ( mid + 1 ; } else {
    // 2 = ( mid + 1 ; }    // 2 = ( mid + 1 ; } else {
    // 2 = ( mid + 1 ; }    // 2 = ( mid + 1 ; }    // 2 = ( mid + 1 ; } else {
    // 2 = ( mid + 1 ; }    // 2 = ( mid + 1 ; }    // 2 = ( mid + 1 ; } else {
    // 2 = ( mid + 1 ; } else {
    // 2 = ( mid + 1 ; }    // 2 = ( mid + 1 ; }    // 2 = ( mid + 1 ; }    // 2 = ( mid + 1 ; } else {
    // 2 = ( mid + 1 ; } else {
    // 2 = ( mid + 1 ; }    // 2 = ( mid + 1 ; }    // 2 = ( mid + 1 ; }    // 2 = ( mid + 1 ; } else {
    // 2 = ( mid + 1 ; }    // 2 = ( mid + 1 ; } else {
    // 2 = ( mid + 1 ; }    // 2 = ( mid + 1 ; } else {
    // 2 = ( mid + 1 ; }    // 2 = ( mid + 1 ; }    // 2 = ( mid + 1 ;

# END OF TRANSLATION








    // if ( max ( max_value = max ( int ) {
    // if ( max_value = max ( int ) ; i++ ) ; }
    // if ( max_value = max ( int ) ; i++ ) ; }
    // if ( max_value = max ( int ) ; int i++ ) ; }
    // if ( max_value = max ( int ) ; i++ ) ; }
    // if ( max_value = max ( int ) ; i++ ) ; }
    // if ( max_value = max ( int ) ; int ) ; }
    // if ( int ) {
    // if ( max_value = max ( int ) ; i++ ) ; }
    // if ( int ) {
    // if ( max_value = max ( int ) ; i++ ) ; }
    // if ( int ) {
    // if ( int ) {
    // if ( int ) {
    // if ( int ) {
    // if ( int ) {
    // if ( int ) {
    // if ( int ) {
    // if ( int ) {
    // if ( int ) {
    // if ( int ) {
    // if ( int ) {
    // if ( int ) {
    // if ( int ) {
    // if ( int ) {
    // if ( int ) {
    // if ( int ) {
    // if ( int ) {
    // if ( int ) {
    // if ( int ) {
    // if ( int ) {
    // if ( int ) {
    // if ( int ) {
    // if ( int ) {
    // if ( int ) {
    // if ( int ) {
    // if ( int ) {
    // if ( int ) {
    // if ( int ) {
    // if ( int ) {
    // if ( int ) {
    // if ( int ) {
    // if ( int ) {
    // if ( int ) {
    // if ( int ) {
    // if ( int ) {
    // if ( int ) {
    // if ( int ) {
    // if ( int ) {
    // if ( int ) {
    // if ( int ) {
    // if ( int ) {
    // if ( int ) {
    // if ( int ) {
    // if ( int ) {
    // if ( int ) {
    // if ( int ) {
    // if ( int ) {
    // if ( int ) {
    // if ( int ) {
    // if ( int ) {
    // if ( int ) {
    // if ( int ) {
    // if ( int ) {
    // if ( int ) {
    // if ( int ) {
    // if ( int ) {
    // if ( int ) {
    // if ( int ) {
    // if ( int ) {
    // if ( int ) {
    // if ( int ) {
    // if ( int ) {
    // if ( int ) {
    // if ( int ) {
    // if ( int ) {
    // if ( int ) {
    // if ( int ) {
    // if ( int ) {
    // if ( int ) {
    // if ( int ) {
    // if ( int ) {

# END OF TRANSLATION



 
 
 
 
 
 1 ; }
 
 
 1 ; }
 
 
 1 ; }
 
 1 ; }
 
 1 ; }
 
 1 ; 
 1 ; }
 
 1 ; 
 1 ; 2 ; 2 ; } 
 1 ; 2 ; 1 ; 2 ; 2 ; 1 ; 2 ; 1 ; 2 ; 1 ; 2 ; 1 ; 2 ; 1 ; 2 ; 1 ; 2 ; 1 ; 2 ; 1 ; 2 ; 1 ; 2 ; 1 ; 2 ; 1 ; 2 ; 1 ; 2 ; 1 ; 2 ; 1 ; 2 ; 1 ; 2 ; 1 ; 2 ; 1 ; 2 ; 1 ; 2 ; 1 ; 2 ; 2 ; 1 ; 2 ; 1 ; 2 ; 1 ; 2 ; 1 ; 2 ; 1 ; 2 ; 1 ; 2 ; 2 ; 1 ; 2 ; 1 ; 2 ; 1 ; 2 ; 1 ; 2 ; 2 ; 1 ; 2 ; 1 ; 2 ; 1 ; 2 ; 1 ; 2 ; 2 ; 1 ; 2 ; 1 ; 2 ; 2 ; 1 ; 2 ; 1 ; 2 ; 2 ; 1 ; 2 ; 1 ; 2 ; 1 ; 2 ; 2 ; 1 ; 2 ; 1 ; 2 ; 2 ; 1 ; 2 ; 1 ; 2 ; 2 ; 1 ; 2 ; 1 ; 2 ; 2 ; 1 ; 2 ; 2 ; 1 ; 2 ; 1 ; 2 ; 2 ; 1 ; 2 ; 1 ; 2 ; 2 ; 1 ; 2 ; 2 ; 1 ; 2 ; 2 ; 1 ; 2 ; 2 ; 1 ; 2 ; 2 ; 1 ; 2 ; 2 ; 1 ; 2 ; 2 ; 1 ; 2 ; 2 ; 1 ; 2 ; 2 ; 1 ; 2 ; 2 ; 1 ; 2 ; 2 ; 1 ; 2 ; 2 ; 1 ; 2 ; 2 ; 1 ; 2 ; 2 ; 1 ; 2 ; 2 ; 1 ; 2 ; 2 ; 1 ; 2 ; 2 ; 1 ; 2 ; 2 ; 1 ; 2 ; 2 ; 1 ; 2 ; 2 ; 1 ; 2 ; 2 ; 1 ; 2 ; 2 ; 1 ; 2 ; 2 ; 2 ; 1 ; 2 ; 2 ; 1 ; 2 ; 2 ; 2 ; 1 ; 2 ; 2 ; 1 ; 2 ; 2 ; 2 ; 1 ; 2 ; 2 ; 1 ; 2 ; 2 ; 2 ; 1 ; 2 ; 2 ; 2 ; 1 ; 2 ; 2 ; 2 ; 1 ; 2 ; 2 ; 2 ; 1 ; 2 ; 2 ; 2 ; 1 ; 2 ; 2 ; 2 ; 1 ; 2 ; 2 ; 2 ; 1 ; 2 ; 2 ; 2 ; 2 ; 1 ; 2 ; 2 ; 2 ; 2 ; 1 ; 2 ; 2 ; 2 ; 2 ; 1 ; 2 ; 2 ; 2 ; 2 ; 2 ; 1 ; 2 ; 2 ; 2 ; 2 ; 1 ; 

# END OF TRANSLATION





 


 1 ) { return ( j ) ; } else {
 
    } else {
    return ( j ) ; } else {
    } else {
    return ( i ) ; } else {
    } else {
    } else {
    } else {
    } else {
    } else {
    } else {
    } else {
    } else {
    } else {
    } else {
    } else {
    } else {
    } else {
    } else {
    } else {
    } else {
    } else {
    } else {
    } else {
    } else {
    } else {
    } else {
    } else {
    } else {
    } else {
    } else {
    } else {
    } else {
    } else {
    } else {
    } else {
    } else {
    } else {
    } else {
    } else {
    } else {
    } else {
    } else {
    } else {
    } else {
    } else {
    } else {
    } else {
    } else {
    } else {
    } else {
    } else {
    } else {
    } else {
    } else {
    } else {
    } else {
    } else {
    } else {
    } else {
    } else {
    } else {
    } else {
    } else {
    } else {
    } else {
    } else {
    } else {
    } else {
    } else {
    } else {
    } else {
    } else {
    } else {
    } else {
    } else {
    } else {
    } else {
    } else {
    } else {
    } else {
    } else {
    } else {
    } else {
    } else {
    } else {
    } else {
    } else {
    } else {
    } else {
    } else {
    } else {
    } else {
    } else {
    } else {
    } else {
    } else {
    } else {
    } else {
    } else {
    } else {
    } else {
    } else {
    } else {
    } else {
    } else {
    } else {
    } else {
    } else {
    } else {
    } else {
    } else {
    } else {
    } else {
    } else {
    } else {
    } else {
    } else {
    } else {
    } else {
    } else {
    } else {
    } else {
    } else {
    } else {
    } else {
    } else {
    } else {
    } else {
    } else {
    } else {
    } else {
    } else {
    } else {
    } else {
    } else {
    } else {
    } else {
    } else {
    } else {
    } else {
    } else {
    } else {
    } else {
    } else {
    } else {
    } else {
    } else {
    } else {
   

# END OF TRANSLATION






 



    int i = 0 ; }
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 


# END OF TRANSLATION




 



 


 2 ) { x2 ) { return ( y2 ) ; } else {
 
 2 ) ; }
 
 
 2 ) ; }
 
 
 
 2 ) ; }
 
 
 2 ) ; }
 
 
 2 ) ; }
 
 
 2 ) ; } else {
 2 ) ; } else {
 2 ) ; }
 
 2 ) ; }
 
 2 ) ; } 
 2 ) ; } 
 2 ) ; } 
 2 ) ; } 
 2 ) ; } 
 2 ) ; } 
 2 ) ; } 
 2 ) ; } 
 2 ) ; } 
 2 ) ; } 
 2 ) ; } 
 2 ) ; } 
 2 ) ; } 
 2 ) ; } 2 ) ; } 2 ) ; } 2 ) ; } 2 ) ; } 2 ) ; } 2 ) ; } 2 ) ; } 2 ) ; } 2 ) ; } 2 ) ; } 2 ) ; } 2 ) ; } 2 ) ; } 2 ) ; } 2 ) ; } 2 ) ; } 2 ) ; } 2 ) ; } 2 ) ; } 2 ) ; } 2 ) ; } 2 ) ; } 2 ) ; } 2 ) ; } 2 ) ; } 2 ) ; } 2 ) ; } 2 ) ; } 2 ) ; } 2 ) ; } 2 ) ; } 2 ) ; } 2 ) ; } 2 ) ; } 2 ) ; } 2 ) ; } 2 ) ; } 2 ) ; } 2 ) ; } 2 ) ; } 2 ) ; } 2 ) ; } 2 ) ; } 2 ) ; } 2 ) ; } 2 ) ; } 2 ) ; } 2 ) ; } 2 ) ; } 2 ) ; } 2 ) ; } 2 ) ; } 2 ) ; } 2 ) ; } 2 ) ; } 2 ) ; } 2 ) ; } 2 ) ; } 2 ) ; } 2 ; } 2 ) ; } 2 ) ; } 2 ; } 2 ) ; } 2 ) ; } 2 ; } 2 ) ; } 2 ; } 2 ) ; } 2 ; } 2 ) ; } 2 ; } 2 ) ; } 2 ; } 2 ) ; } 2 ; } 2 ) ; } 2 ; } 2 ; } 2 ) ; } 2 ; } 2 ; } 2 ) ; } 2 ; } 2 ; } 2 ; } 2 ; } 2 ; } 2 ; } 2 ; } 2 ; } 2 ; } 2 ; } 2 ; } 2 ; } 2 ; } 2 ; } 2 ; } 2 ; } 2 ; } 2 ; } 2 ; } 2 ; } 2 ; } 2 ; } 2 ; } 2 ; } 2 ; } 2 ; } 2 ; } 2 ; } 2 ; } 2 ; } 2 ; } 2 ; } 2 ; } 2 ; } 2 ; } 2 ; } 2 ; } 2 ; } 2 ; } 2 ; } 2

# END OF TRANSLATION




    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    //  //  // 
    //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //

# END OF TRANSLATION



 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 10 ; }
 
 
 10 ; }
 
 10 ; }
 
 10 ; }
 
 1 , 1 , 20 , 1 , 2 , 2 , 2 , 1 , 2 , 2 , 1 , 2 , 2 , 1 , 2 , 2 , 1 , 2 , 2 , 1 , 2 , 2 , 1 , 2 , 2 , 1 , 2 , 2 , 1 , 2 , 2 , 1 , 2 , 2 , 1 , 2 , 2 , 1 , 2 , 2 , 1 , 2 , 2 , 1 , 2 , 2 , 1 , 2 , 2 , 1 , 2 , 2 , 1 , 2 , 2 , 1 , 2 , 2 , 1 , 2 , 2 , 2 , 1 , 2 , 2 , 1 , 2 , 2 , 1 , 2 , 2 , 1 , 2 , 2 , 2 , 1 , 2 , 2 , 1 , 2 , 2 , 1 , 2 , 2 , 2 , 1 , 2 , 2 , 1 , 2 , 2 , 2 , 1 , 2 , 2 , 1 , 2 , 2 , 2 , 1 , 2 , 2 , 2 , 1 , 2 , 2 , 1 , 2 , 2 , 2 , 1 , 2 , 2 , 1 , 2 , 2 , 2 , 1 , 2 , 2 , 2 , 1 , 2 , 2 , 2 , 1 , 2 , 2 , 2 , 1 , 2 , 2 , 2 , 1 , 2 , 2 , 2 , 1 , 2 , 2 , 2 , 2 , 1 , 2 , 2 , 2 , 1 , 2 , 2 , 2 , 1 , 2 , 2 , 2 , 2 , 1 , 2 , 2 , 2 , 1 , 2 , 2 , 2 , 2 , 1 , 2 , 2 , 2 , 2 , 1 , 2 , 2 , 2 , 2 , 1 , 2 , 2 , 2 , 1 , 2 , 2 , 2 , 2 , 2 , 2 , 1 , 2 , 2 , 2 , 2 , 1 , 2 , 2 , 2 , 2 , 2 , 1 , 2 , 2 , 2 , 2 , 2 , 2 , 2 , 1 , 2 , 2 , 2 , 2 , 2 , 2 , 1 , 2 , 2 , 2 , 2 , 2 , 2 , 2 , 1 , 2 , 2 , 2 , 2 , 2 , 2 , 2 , 2 , 1 , 2 , 2 , 2 , 2 , 2 , 2 , 2 , 2 , 2 , 2 , 2 , 2 , 2 , 2 , 2 , 2 , 2 , 2 , 2 , 2 , 2 , 2 , 2 , 2 , 2 , 2 , 2 , 2 , 

# END OF TRANSLATION





    // 

    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    //  //  // 


# END OF TRANSLATION




 

    int i = 1 ; }
    // 1 , int i = 1 ; }
    // 1 , int i = 1 ; }
    // 1 , int i = 1 ; }
    // 1 , int i = 1 ; }
    // 1 , int i = 1 ; }
    // 1 , int i = 1 ; }
    // 1 , int i = 1 ; }
    // 1 , int i = 1 ; }
    // 1 , int i = 1 ; }
    // 1 , int i = 1 ; }
    // 1 , int i = 1 ; }
    // 1 , int i = 1 ; }
    // 1 , int i = 1 , int i = 1 ; }
    // 1 , int i = 1 , int i = 1 ; }
    // 1 , int i = 1 , int i = 1 ; }
    // 1 , int i = 1 , int i = 1 ; }
    // 1 , int i = 1 , int i = 1 ; }
    // 1 , int i = 1 , int i = 1 ; }
    // 1 , int i = 1 , int i = 1 , int i = 1 , int i = 1 ; }
    // 1 , int i = 1 , int i = 1 , int i = 1 , int i = 1 , int i = 1 , int i = 1 , int i = 1 , int i = 1 , int i = 1 , int i = 1 , int i = 1 , int i = 1 , int i = 1 , int i = 1 , int i = 1 , int i = 1 , int i = 1 , int i = 1 , int i = 1 , int i = 1 , int i = 1 , int i = 1 , int i = 1 , int i = 1 , int i = 1 , int i = 1 , int i = 1 , int i = 1 , int i = 1 , int i = 1 , int i = 1 , int i = 1 , int i = 1 , int i = 1 , int i = 1 , int i = 1 , int i = 1 , int i = 1 , int i = 1 , int i = 1 , int i = 1 , int i = 1 , int i = 1 , int i = 1 , int i = 1 , int i = 1 , int i = 1 , int i = 1 , int i = 1 , int i = 1 , int i = 1 , int i = 1 , int i = 1 , int i = 1 , int i = 1 , int i = 1 , int i = 1 , int i = 1 , int i = 1 , int i = 1 , int i = 1 , int i = 1 , int i = 1 , int i = 1 , int i = 1 , int i = 1 , int i = 1 , int i = 1 , int i = 1 , int i = 1 , int i = 1 , int i = 1 , int i = 1 , int i = 1 , int i = 1 , int i = 1 , int i = 1 , int i = 1 , int i = 1 , int i = 1 , int i = 1 , int i = 1 , int i = 1 , int i = 1 , int i = 1 , int i = 1 , int i = 1 , int i = 1 , int i = 1 , int i = 1 , int i = 1 , int i = 1 , int i = 1 , int i = 1 , int i = 1 , int i = 1 , int i = 1 , int i = 1 , int i = 1 , int i = 1 , int i = 1 , int i = 1 , int i = 1 , int i = 1 , int i = 1

# END OF TRANSLATION



 
 
 10 ; }
 
 
 
 10 ; }
 
 
 10 ; }
 
 10 ; }
 
 10 ; }
 
 10 ; }
 
 1 ; }
 
 1 ; }
 
 1 ; } 
 1 ; } 
 1 ; } 
 1 ; } 
 1 ; } 
 1 ; } 
 1 ; } 
 1 ; } 
 1 ; } 1 ; } 1 ; } 1 ; } 1 ; } 1 ; } 1 ; } 1 ; } 1 ; } 1 ; } 1 ; } 1 ; } 1 ; } 1 ; } 1 ; } 1 ; } 1 ; } 1 ; } 1 ; } 1 ; } 1 ; } 1 ; } 1 ; } 1 ; } 1 ; } 1 ; } 1 ; } 1 ; } 1 ; } 1 ; } 1 ; } 1 ; } 1 ; } 1 ; } 1 ; } 1 ; } 1 ; } 1 ; } 1 ; } 1 ; } 1 ; } 1 ; } 1 ; } 1 ; } 1 ; } 1 ; } 1 ; } 1 ; } 1 ; } 1 ; } 1 ; } 1 ; } 1 ; } 1 ; } 1 ; } 1 ; } 1 ; } 1 ; } 1 ; } 1 ; } 1 ; } 1 ; } 1 ; } 1 ; } 1 ; } 1 ; } 1 ; } 1 ; } 1 ; } 1 ; } 1 ; } 1 ; } 1 ; } 1 ; } 1 ; } 1 ; } 1 ; } 1 ; } 1 ; } 1 ; } 1 ; } 1 ; } 1 ; } 1 ; } 1 ; } 1 ; } 1 ; } 1 ; } 1 ; } 1 ; } 1 ; } 1 ; } 1 ; } 1 ; } 1 ; } 1 ; } 1 ; } 1 ; } 1 ; } 1 ; } 1 ; } 1 ; } 1 ; } 1 ; } 1 ; } 1 ; } 1 ; } 1 ; } 1 ; } 1 ; } 1 ; } 1 ; } 1 ; } 1 ; } 1 ; } 1 ; } 1 ; } 1 ; } 1 ; } 1 ; } 1 ; } 1 ; } 1 ; } 1 ; } 1 ; } 1 ; } 1 ; } 1 ; } 1 ; } 1 ; } 1 ; } 1 ; } 1 ; } 1 ; } 1 ; } 1 ; } 1 ; } 1 ; } 1 ; } 1 ; } 1 ; } 1 ; } 1 ; } 1 ; } 1 ; } 1 ; } 1 ; } 1 ; } 1 ; } 1 ; } 1 ; } 1 ; } 1 ; } 1 ; } 1 ; } 1 ; } 1 ; } 1 ; } 1 ; } 1 ; } 1 ; } 1 ; } 1 ; } 1 ; } 1 ; } 1 ; } 1 ; } 1 ; } 1 ; } 1 ; } 1 ; } 1 ; } 1 ;

# END OF TRANSLATION




 

    int i = 0 ; }
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 


# END OF TRANSLATION



 
 
 
 
 
 
 
 
 
 1 ; }
 
 
 
 1 ; }
 
 
 1 ; }
 
 1 ; }
 
 1 ; }
 
 1 ; }
 
 1 ; }
 
 1 ; }
 
 1 ; }
 
 1 ; } 
 1 ; } 
 1 ; } 
 1 ; } 
 1 ; 
 1 ; } 1 ; } 1 ; 
 1 ; } 1 ; 
 1 ; } 1 ; 1 ; } 1 ; 1 ; } 1 ; 1 ; 1 ; 1 ; 1 ; 2 ; 1 ; 2 ; 1 ; 2 ; 1 ; 2 ; 1 ; 2 ; 1 ; 2 ; 1 ; 2 ; 1 ; 2 ; 1 ; 2 ; 1 ; 2 ; 1 ; 2 ; 1 ; 2 ; 1 ; 1 ; 2 ; 1 ; 2 ; 1 ; 2 ; 1 ; 2 ; 1 ; 2 ; 1 ; 2 ; 1 ; 2 ; 1 ; 2 ; 1 ; 2 ; 1 ; 2 ; 1 ; 2 ; 1 ; 2 ; 1 ; 2 ; 1 ; 2 ; 1 ; 2 ; 1 ; 2 ; 1 ; 2 ; 1 ; 2 ; 1 ; 2 ; 1 ; 2 ; 1 ; 2 ; 1 ; 2 ; 1 ; 2 ; 1 ; 2 ; 1 ; 2 ; 1 ; 2 ; 1 ; 2 ; 1 ; 2 ; 1 ; 2 ; 1 ; 2 ; 1 ; 2 ; 1 ; 2 ; 1 ; 2 ; 1 ; 2 ; 1 ; 2 ; 1 ; 2 ; 1 ; 2 ; 1 ; 2 ; 1 ; 2 ; 1 ; 2 ; 1 ; 2 ; 1 ; 2 ; 1 ; 2 ; 1 ; 2 ; 1 ; 2 ; 1 ; 2 ; 1 ; 2 ; 1 ; 2 ; 1 ; 2 ; 1 ; 2 ; 1 ; 2 ; 1 ; 2 ; 1 ; 2 ; 1 ; 2 ; 1 ; 2 ; 1 ; 2 ; 1 ; 2 ; 1 ; 2 ; 1 ; 2 ; 1 ; 2 ; 1 ; 2 ; 1 ; 2 ; 1 ; 2 ; 1 ; 2 ; 1 ; 2 ; 1 ; 2 ; 1 ; 2 ; 1 ; 2 ; 1 ; 2 ; 1 ; 2 ; 1 ; 2 ; 1 ; 2 ; 1 ; 2 ; 1 ; 2 ; 1 ; 2 ; 1 ; 2 ; 1 ; 2 ; 1 ; 2 ; 1 ; 2 ; 1 ; 2 ; 1 ; 2 ; 1 ; 2 ; 1 ; 2 ; 1 ; 2 ; 1 ; 2 ; 2 ; 1 ; 2 ; 1 ; 2 ; 1 ; 2 ; 1 ; 2 ; 1 ; 2 ; 1 ; 2 ; 1 ; 2 ; 1 ; 2 ; 1 ; 2 ; 2 ; 1 ; 2 ; 1 ; 2 ; 1 ; 2 ; 1 ; 2 ; 1 ; 2 ; 2 ; 1 ; 2 ; 1 ; 2 ;

# END OF TRANSLATION



 

 1 , int currentIndex + 1 , int currentIndex + 1 , int currentIndex ) ; } else {
 
 1 , int currentIndex + 1 , int currentIndex + 1 , int currentIndex + 1 , int currentIndex + 1 , int currentIndex + 1 , int currentIndex + 1 , int currentIndex + 1 , int currentIndex + 1 , int currentIndex + 1 , int currentIndex + 1 , int currentIndex + 1 , int currentIndex + 1 , int currentIndex + 1 , int currentIndex + 1 , int currentIndex + 1 , int currentIndex + 1 , int currentIndex + 1 , int currentIndex + 1 , int currentIndex + 1 , int currentIndex + 1 , int currentIndex + 1 , int currentIndex + 1 , int currentIndex + 1 , int currentIndex + 1 , int currentIndex + 1 , int currentIndex + 1 , int currentIndex + 1 , int currentIndex + 1 , int currentIndex + 1 , int currentIndex + 1 , int currentIndex + 1 , int currentIndex + 1 , int currentIndex + 1 , int currentIndex + 1 , int currentIndex + 1 , int currentIndex + 1 , int currentIndex + 1 , int currentIndex + 1 , int currentIndex + 1 , int currentIndex + 1 , int currentIndex + 1 , int currentIndex + 1 , int currentIndex + 1 , int currentIndex + 1 , int currentIndex + 1 , int currentIndex + 1 , int currentIndex + 1 , int currentIndex + 1 , int currentIndex + 1 , int currentIndex + 1 , int currentIndex + 1 , int currentIndex + 1 , int currentIndex + 1 , int currentIndex + 1 , int currentIndex + 1 , int currentIndex + 1 , int currentIndex + 1 , int currentIndex + 1 , int currentIndex + 1 , int currentIndex + 1 , int currentIndex + 1 , int currentIndex + 1 , int currentIndex + 1 , int currentIndex + 1 , int currentIndex + 1 , int currentIndex + 1 , int currentIndex + 1 , int currentIndex + 1 , int currentIndex + 1 , int currentIndex + 1 , int currentIndex + 1 , int currentIndex + 1 , int currentIndex + 1 , int currentIndex + 1 , int currentIndex + 1 , int currentIndex + 1 , int currentIndex + 1 , int currentIndex + 1 , int currentIndex + 1 , int currentIndex + 1 , int currentIndex + 1 , int currentIndex + 1 , int currentIndex + 1 , int currentIndex + 1 , int currentIndex + 1 , int currentIndex + 1 , int currentIndex + 1 , int currentIndex + 1 , int currentIndex + 1 , int currentIndex + 1 , int currentIndex + 1 , int currentIndex + 1 , int currentIndex + 1 , int currentIndex + 1 , int currentIndex + 1 , int currentIndex + 1 , int currentIndex + 1 , int currentIndex + 1 , int currentIndex + 1 , int currentIndex + 1 , int currentIndex + 1 , int currentIndex + 1 , int currentIndex + 1 , int currentIndex + 1 , int currentIndex + 1 , int currentIndex + 1 , int currentIndex + 1 , int currentIndex + 1 , int currentIndex + 1 , int currentIndex

# END OF TRANSLATION

charAt ( i ) { return 1 ; } if ( st . charAt ( i ) { return 1 ; } if ( st . charAt ( i ) { return 1 ; } if ( st . charAt ( i ) { return 1 ; } if ( st . charAt ( i ) { return 1 ; } if ( st . charAt ( i ) { return 1 ; } if ( st . charAt ( i ) { return 1 ; } if ( st . charAt ( i ) { return 1 ; } if ( st . charAt ( i ) { return 1 ; } if ( st . charAt ( i ) { return 1 ; } if ( st . charAt ( i ) { return 1 ; } if ( st . charAt ( i ) { return 1 ; } if ( st . charAt ( i ) { return 1 ; } if ( st . charAt ( i ) { return 1 ; } if ( st . charAt ( i ) { return 1 ; } if ( st . charAt ( i ) { return 1 ; } if ( st . charAt ( i ) { return 1 ; } if ( st . charAt ( i ) { return 1 ; } if ( st . charAt ( i ) { return 1 ; } if ( st . charAt ( i ) { return 1 ; } if ( st . charAt ( i ) { return 1 ; } if ( st . charAt ( i ) { return 1 ; } if ( st . charAt ( i ) { return 1 ; } if ( st . charAt ( i ) { return 1 ; } if ( st . charAt ( i ) { return 1 ; } if ( st . charAt ( i ) { return 1 ; } if ( st . charAt ( i ) { return 1 ; } if ( st . charAt ( i ) { return 1 ; } if ( st . charAt ( i ) { return 1 ; } if ( st . charAt ( i ) { return 1 ; } if ( st . charAt ( i ) { return 1 ; } if ( st . charAt ( i ) { return 1 ; } if ( st . charAt ( i ) { return 1 ; } if ( st . charAt ( i ) { return 1 ; } if ( st . charAt ( i ) { return 1 ; } if ( st . charAt ( i ) { return 1 ; } if ( st . charAt ( i ) { return 1 ; } if ( st . charAt ( i ) { return 1 ; } if ( st . charAt ( i ) { return 1 ; } if ( st . charAt ( i ) { return 1 ; } if ( st . charAt ( i ) { return 1 ; } if ( st . charAt ( i ) { return 1 ; } if (

# END OF TRANSLATION





 10 ) ; }


 


    // 10 ; }

 
    // 10 ; }
    // 10 ; }
    // 10 ; }
    // 10 ; }
    // 1 ; 
    // 1 ; 
    // 1 ; 
    // 1 ; 
    // 1 ; 
    // 1 ; 
    // 1 ; 
    // 1 ; 
    // 1 ;  // 2 ;  // 2 ;  // 2 ;  // 1 ;  // 2 ;  // 1 ;  // 2 ;  // 1 ;  // 2 ;  // 1 ;  // 2 ;  // 1 ;  // 2 ;  // 1 ;  // 2 ;  // 1 ;  // 2 ;  // 1 ;  // 2 ;  // 1 ;  // 2 ;  // 1 ;  // 2 ;  // 1 ;  // 2 ;  // 2 ;  // 1 ;  // 2 ;  // 1 ;  // 2 ;  // 1 ;  // 2 ;  // 1 ;  // 2 ;  // 2 ;  // 1 ;  // 2 ;  // 1 ;  // 2 ;  // 1 ;  // 2 ;  // 1 ;  // 2 ;  // 2 ;  // 1 ;  // 2 ;  // 1 ;  // 2 ;  // 2 ;  // 1 ;  // 2 ;  // 1 ;  // 2 ;  // 2 ;  // 1 ;  // 2 ;  // 2 ;  // 1 ;  // 2 ;  // 1 ;  // 2 ;  // 1 ;  // 2 ;  // 2 ;  // 1 ;  // 2 ;  // 2 ;  // 1 ;  // 2 ;  // 2 ;  // 1 ;  // 2 ;  // 2 ;  // 1 ;  // 2 ;  // 2 ;  // 1 ;  // 2 ;  // 2 ;  // 1 ;  // 2 ;  // 2 ;  // 1 ;  // 2 ;  // 2 ;  // 1 ;  // 2 ;  // 2 ;  // 1 ;  // 2 ;  // 2 ;  // 1 ;  // 2 ;  // 2 ;  // 1 ;  // 2 ;  // 2 ;  // 1 ;  // 2 ;  // 2 ;  // 2 ;  // 1 ;  // 2 ;  // 2 ;  // 1 ;  // 2 ;  // 2 ;  // 1 ;  // 2 ;  // 2 ;  // 2 ;  // 1 ;  // 2 ;  // 2 ;  // 2 ;  // 1 ;  // 2 ;  // 2 ;  // 1 ;  // 2 ;  // 2 ;  // 2 ;  // 1 ;  // 2 ;  // 2 ;  // 2 ;  // 1 ;  // 2 ;  // 2 ;  // 2 ;  // 2 ;  // 1 ;  // 2 ;  // 2 ;  // 2 ;  // 2 ;  // 1 ;  // 2 ;  // 2 ;  // 2 ;  // 2 ;  // 1 ;  // 2 ;  // 2 ;  // 2 ;  // 2 ;  // 2 ;  // 1 ;  // 2 ; 

# END OF TRANSLATION




 


    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    //  // 


# END OF TRANSLATION



 

 
 
 1 , p = p ;
 
 1 , p = p ;
 1 , p = p ;
 1 , p = p ;
 1 , p = p ;
 1 , p = p ;
 2 = p ; p ; p = p ;
 1 , p = p ; p ; p = p ; p ; p = p ; p = p ; p ; p = p ; p ; p = p ; p ; p = p ; p ; p = p ; p = p ; p ; p = p ; p ; p = p ; p = p ; p ; p = p ; p ; p = p ; p = p ; p ; p = p ; p = p ; p ; p = p ; p = p ; p ; p = p ; p ; p = p ; p = p ; p ; p = p ; p = p ; p ; p = p ; p = p ; p ; p = p ; p = p ; p = p ; p ; p = p ; p = p ; p ; p = p ; p = p ; p = p ; p ; p = p ; p = p ; p = p ; p ; p = p ; p = p ; p = p ; p = p ; p = p ; p = p ; p = p ; p = p ; p = p ; p = p ; p = p ; p = p ; p = p ; p = p ; p = p ; p = p ; p = p ; p = p ; p = p ; p = p ; p = p ; p = p ; p = p ; p = p ; p = p ; p = p ; p = p ; p = p ; p = p ; p = p ; p = p ; p = p ; p = p ; p = p ; p = p ; p = p ; p = p ; p = p ; p = p ; p = p ; p = p ; p = p ; p = p ; p = p ; p = p ; p = p ; p = p ; p = p ; p = p ; p = p ; p = p ; p = p ; p = p ; p = p ; p = p ; p = p ; p = p ; p = p ; p = p ; p = p ; p = p ; p = p ; p = p ; p = p ; p = p ; p = p ; p = p ; p = p ; p = p ; p = p ; p = p ; p = p ; p = p ; p = p ; p = p ; p = p ; p = p ; p = p ; p = p ; p = p ; p = p ; p = p ; p = p ; p = p ; p = p ; p = p ; p = p ; p = p ; p = p ; p = p ; p = p ; p = p ; p = p ; p = p ; p = p ; p = p ; p = p ; p = p ; p = p ; p = p ; p = p ; p = p ; p = p ; p = p ; p = p ; p = p ; p = p ; p = p ; p = p ; p = p ; p = p ; p = p ; p = p ; p = p ; p = p ; p = p ; p = p ; p = p ; p = p ; p = p ; p = p ; p = p ; p = p ; p = p ; p = p ; p = p ; p = p ; p = p ; p = p ; p = p ; p = p ; p = p ; p = p ; p = p ; p = p ; p = p ; p = p ; p = p ; p = p ; p = p ; p = p ; p = p ; p = p ; p

# END OF TRANSLATION




 
 
 
 
 
 
 
 
 
 
 
 
 10 ; 
 
 1 ; 
 1 ; 
 1 ; 
 1 ; 
 1 ; 2 = k ; 2 ; 
 1 ; 2 = k ; 1 ; 2 = k ; 1 ; 2 = k ; 1 ; 2 = k ; 1 ; 2 = k ; 1 ; 2 = k ; 1 ; 2 = k ; 1 ; 2 = k ; 1 ; 2 = k ; 1 ; 2 = k ; 1 ; 2 = k ; 2 = k ; 1 ; 2 = k ; 1 ; 2 = k ; 1 ; 2 = k ; 2 = k ; 1 ; 2 = k ; 1 ; 2 = k ; 2 = k ; 1 ; 2 = k ; 2 = k ; 1 ; 2 = k ; 2 = k ; 1 ; 2 = k ; 2 = k ; 1 ; 2 = k ; 2 = k ; 1 ; 2 = k ; 2 = k ; 1 ; 2 = k ; 2 = k ; 1 ; 2 = k ; 2 = k ; 1 ; 2 = k ; 2 = k ; 1 ; 2 = k ; 2 = k ; 2 = k ; 1 ; 2 = k ; 2 = k ; 2 = k ; 1 ; 2 = k ; 2 = k ; 2 = k ; 1 ; 2 = k ; 2 = k ; 2 = k ; 2 = k ; 1 ; 2 = k ; 2 = k ; 2 = k ; 2 = k ; 1 ; 2 = k ; 2 = k ; 2 = k ; 2 = k ; 2 = k ; 2 = k ; 2 = k ; 2 = k ; 1 ; 2 = k ; 2 = k ; 2 = k ; 2 = k ; 2 = k ; 2 = k ; 2 = k ; 2 = k ; 2 = k ; 2 = k ; 2 = k ; 2 = k ; 2 = k ; 2 = k ; 2 = k ; 2 = k ; 2 = k ; 2 = k ; 2 = k ; 2 = k ; 2 = k ; 2 = k ; 2 = k ; 2 = k ; 2 = k ; 2 = k ; 2 = k ; 2 = k ; 2 = k ; 2 = k ; 2 = k ; 2 = k ; 2 = k ; 2 = k ; 2 = k ; 2 = k ; 2 = k ; 2 = k ; 2 = k ; 2 = k ; 2 = k ; 2 = k ; 2 = k ; 2 = k ; 2 = k ; 2 = k ; 2 = k ; 2 = k ; 2 = k ; 2 = k ; 2 = k ; 2 = k ; 2 = k ; 2 = k ; 2 = k ; 2 = k ; 2 = k ; 2 = k ; 2 = k ; 2 = k ; 2 = k ; 2 = k ; 2 = k ; 2 = k ; 2 = k ; 2 = k ; 2 = k ; 2 = k ; 2 = k ; 2 = k ; 2 = k ; 2 = k ; 2 = k ; 2 = k ; 2 = k ; 2 = k ; 2 = k ; 2 = k ; 

# END OF TRANSLATION



 

 
 

 
 
 
 1 ] ; }
 


 

 10 ] ; }
 

 

 
 
 1 ++ i ) { s = 'a' ) ; }
 
 
 1 ++ i ) ; }
 
 
 1 ++ i ) ; }
 
 
 1 ++ i ) ; }
 
 1 ++ i ) ; }
 
 1 ++ i ) ; }
 
 1 ++ i ) ; } ; }
 
 1 ++ i ) ; } ; }
 
 1 ++ i ) ; } ; }
 
 1 ++ i ) ; } ; } ; }
 
 1 ++ i ) ; } ; } ; }
 
 1 ++ i ) ; } ; } ; } ; }

 1 ++ i ) ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ;

# END OF TRANSLATION



 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 10 , 10 , 10 , 1 , 20 , 1 , 20 , 20 , 20 , 2 , 1 , 2 , 2 , 2 , 2 , 1 , 2 , 2 , 2 , 2 , 1 , 2 , 2 , 2 , 1 , 2 , 2 , 2 , 2 , 3 , 3 , 2 , 3 , 4 1 , 2 , 4 1 , 2 , 2 , 2 , 2 , 2 , 3 , 2 , 4 2 , 2 , 4 2 , 2 , 3 , 2 , 4 2 , 4 2 , 2 , 2 , 2 , 3 , 2 , 2 , 4 2 , 2 , 2 , 4 2 , 2 , 2 , 2 , 2 , 2 , 3 , 2 , 2 , 4 2 , 2 , 2 , 2 , 2 , 2 , 2 , 2 , 3 , 2 , 2 , 4 2 , 2 , 2 , 2 , 2 , 2 , 2 , 2 , 2 , 2 , 2 , 2 , 2 , 2 , 2 , 2 , 2 , 2 , 2 , 2 , 2 , 2 , 2 , 2 , 2 , 2 , 2 , 2 , 2 , 2 , 2 , 2 , 2 , 2 , 2 , 2 , 2 , 2 , 2 , 2 , 2 , 2 , 2 , 2 , 2 , 2 , 2 , 2 , 2 , 2 , 2 , 2 , 2 , 2 , 2 , 2 , 2 , 2 , 2 , 2 , 2 , 2 , 2 , 2 , 2 , 2 , 2 , 2 , 2 , 2 , 2 , 2 , 2 , 2 , 2 , 2 , 2 , 2 , 2 , 2 , 2 , 2 , 2 , 2 , 2 , 2 , 2 , 2 , 2 , 2 , 2 , 2 , 2 , 2 , 2 , 2 , 2 , 2 , 2 , 2 , 2 , 2 , 2 , 2 , 2 , 2 , 2 , 2 , 2 , 2 , 2 , 2 , 2 , 2 , 2 , 2 , 2 , 2 , 2 , 2 , 2 , 2 , 2 , 2 , 2 , 2 , 2 , 2 , 2 , 2 , 2 , 2 , 2 , 2 , 2 , 2 , 2 , 2 , 2 , 2 , 2 , 2 , 2 , 2 , 2 , 2 , 2 , 2 , 2 , 2 , 2 , 2 , 2 , 2 , 2 , 2 , 2 , 2 , 2 , 2 , 2 , 2 , 2 , 2 , 2 , 2 , 2 , 2 , 2

# END OF TRANSLATION


    if ( i ) {
    if ( i == j ) { return 1 ; }
    if ( i == j ) { return 1 ; }
    if ( i == j ) { return 1 ; }
    if ( i == j ) { return 1 ; }
    if ( i == j ) { return 1 ; }
    if ( i == j ) { return 1 ; }
    if ( i == j ) { return 1 ; }
    if ( i == j ) { return 1 ; }
    if ( i == j ) { return 1 ; }
    if ( i == j ) { return 1 ; }
    if ( i == j ) { return 1 ; }
    if ( i == j ) { return 1 ; }
    if ( i == j ) { return 1 ; }
    if ( i == j ) { return 1 ; }
    if ( i == j ) { return 1 ; }
    if ( i == j ) { return 1 ; }
    if ( i == j ) { return 1 ; }
    if ( i == j ) { return 1 ; }
    if ( i == j ) { return 1 ; }
    if ( i == j ) { return 1 ; }
    if ( i == j ) { return 1 ; }
    if ( i == j ) { return 1 ; }
    if ( i == j ) { return 1 ; }
    if ( i == j ) { return 1 ; }
    if ( i == j ) { return 1 ; }
    if ( i == j ) { return 1 ; }
    if ( i == j ) { return 1 ; }
    if ( i == j ) { return 1 ; }
    if ( i == j ) { return 1 ; }
    if ( i == j ) { return 1 ; }
    if ( i == j ) { return 1 ; }
    if ( i == j ) { return 1 ; }
    if ( i == j ) { return 1 ; }
    if ( i == j ) { return 1 ; }
    if ( i == j ) { return 1 ; }
    if ( i == j ) { return 1 ; }
    if ( i == j ) { return 1 ; }
    if ( i == j ) { return 1 ; }
    if ( i == j ) { return 1 ; }
    if ( i == j ) { return 1 ; }
    if ( i == j ) { return 1 ; }
    if ( i == j ) { return 1 ; }
    if ( i == j ) { return 1 ; }
    if ( i == j ) { return 1 ; }
    if ( i == j ) { return 1 ; }
    if ( i == j ) { return 1 ; }
    if ( i == j ) { return 1 ; }
    if ( i == j ) { return 1 ; }
    if ( i == j ) { return 1 ; }
    if ( i == j ) { return 1 ; }
    if ( i == j ) { return 1 ; }

# END OF TRANSLATION






    // 

    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 


# END OF TRANSLATION




 
 
 
 
 
 
 
 
 
 
 
 10 ) ; }
 
 
 10 ; }
 
 10 ; }
 
 10 ; }
 
 10 ; }
 
 10 ; }
 
 10 ; 
 10 ; }
 
 1 ; } 
 1 ; 
 1 ; 
 1 ; 2 ; 
 1 ; 2 ; 2 ; } 
 1 ; 2 ; 1 2 ; 0 ; 2 ; 1 2 ; 1 ; 2 ; 1 ; 2 ; 1 ; 2 ; 1 ; 2 ; 2 ; 1 ; 2 ; 1 ; 2 ; 1 ; 2 ; 2 ; 1 ; 2 ; 1 ; 2 ; 2 ; 1 ; 2 ; 1 ; 2 ; 2 ; 1 ; 2 ; 1 ; 2 ; 2 ; 1 ; 2 ; 1 ; 2 ; 2 ; 1 ; 2 ; 2 ; 1 ; 2 ; 2 ; 1 ; 2 ; 1 ; 2 ; 2 ; 1 ; 2 ; 2 ; 1 ; 2 ; 1 ; 2 ; 2 ; 1 ; 2 ; 2 ; 1 ; 2 ; 2 ; 1 ; 2 ; 2 ; 1 ; 2 ; 2 ; 1 ; 2 ; 2 ; 1 ; 2 ; 2 ; 1 ; 2 ; 2 ; 1 ; 2 ; 2 ; 1 ; 2 ; 2 ; 1 ; 2 ; 2 ; 1 ; 2 ; 2 ; 2 ; 1 ; 2 ; 2 ; 1 ; 2 ; 2 ; 2 ; 1 ; 2 ; 2 ; 1 ; 2 ; 2 ; 1 ; 2 ; 2 ; 2 ; 1 ; 2 ; 2 ; 2 ; 1 ; 2 ; 2 ; 2 ; 1 ; 2 ; 2 ; 2 ; 1 ; 2 ; 2 ; 2 ; 2 ; 1 ; 2 ; 2 ; 2 ; 1 ; 2 ; 2 ; 2 ; 1 ; 2 ; 2 ; 2 ; 1 ; 2 ; 2 ; 2 ; 2 ; 1 ; 2 ; 2 ; 2 ; 2 ; 1 ; 2 ; 2 ; 2 ; 2 ; 1 ; 2 ; 2 ; 2 ; 2 ; 1 ; 2 ; 2 ; 2 ; 2 ; 2 ; 1 ; 2 ; 2 ; 2 ; 2 ; 2 ; 1 ; 2 ; 2 ; 2 ; 2 ; 2 ; 2 ; 2 ; 1 ; 2 ; 2 ; 2 ; 2 ; 2 ; 2 ; 2 ; 2 ; 2 ; 2 ; 1 ; 2 ; 2 ; 2 ; 2 ; 2 ; 2 ; 2 ; 2 ; 2 ; 2 ; 2 ; 2 ; 2 ; 2 ; 2 ; 2 ; 2 ; 2 ; 2 ; 2 ; 2 ; 2 ; 2 ; 2 ; 2 ; 2 ; 2 ; 2 ; 2 ; 2 ; 2 ; 2 ; 2 ; 2 ; 2 ; 2 ; 2 ; 2 ; 2 ; 2 ; 2 ; 2 ; 2 ; 2 ; 2

# END OF TRANSLATION




 



 
 
 
 
 
 
 
 20 ) ; }
 
 
 
 20 ) {
 
 20 ; }
 
 
 2 ) ; }
 
 
 
 2 ) ; }
 
 
 2 ) ; }
 
 2 ) ; }
 
 
 2 ) ; }
 
 
 2 ) ; }
 
 2 ) ; }
 
 2 ) { 
 2 ) ; } 
 2 ) ; } 
 2 ) ; } 
 2 ) ; } 
 2 ) ; } 
 2 ) ; } 
 2 ) ; } 
 2 ) ; 2 ) ; } 2 2 ) ; } 2 2 ) ; 2 ) ; } 2 2 ) ; 2 ) ; 2 ) ; } 2 2 ) ; 2 ) ; 2 ) ; } 2 2 ) ; 2 2 ) ; 2 2 ) ; 2 2 ) ; 2 2 ) ; 2 2 ) ; 2 2 ) ; 2 2 ) ; 2 2 ) ; 2 2 ) ; 2 2 ) ; 2 2 ) ; 2 2 ) ; 2 2 ) ; 2 2 ) ; 2 2 ) ; 2 2 2 ) ; 2 2 ) ; 2 2 ) ; 2 2 ) ; 2 2 ) ; 2 2 ) ; 2 2 2 ) ; 2 2 ) ; 2 2 ) ; 2 2 ) ; 2 2 ) ; 2 2 ) ; 2 2 ) ; 2 2 ) ; 2 2 2 2 ) ; 2 2 2 2 2 ) ; 2 2 2 ) ; 2 2 2 2 ) ; 2 2 2 2 ) ; 2 2 2 2 2 ) ; 2 2 2 ) ; 2 2 2 ) ; 2 2 2 2 ) ; 2 2 2 2 ) ; 2 2 2 2 2 2 ) ; 2 2 2 2 2 2 2 2 ) ; 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2

# END OF TRANSLATION




 


   = 1 ;
 
 
   = 1 ;
 
   = 1 ;
    }
    // 10 ; 
    // 10 ; 
    // 10 ; 
    // 10 ; 
    // 1 ; 
    // 1 ; 
    // 1 ; 
    // 2 ;  // 2 ;  // 2 ;  // 2 ;  // 1 ;  // 2 ;  // 1 ;  // 2 ;  // 1 ;  // 2 ;  // 1 ;  // 2 ;  // 1 ;  // 2 ;  // 1 ;  // 2 ;  // 1 ;  // 2 ;  // 2 ;  // 1 ;  // 2 ;  // 2 ;  // 1 ;  // 2 ;  // 1 ;  // 2 ;  // 2 ;  // 1 ;  // 2 ;  // 1 ;  // 2 ;  // 2 ;  // 1 ;  // 2 ;  // 1 ;  // 2 ;  // 2 ;  // 1 ;  // 2 ;  // 2 ;  // 1 ;  // 2 ;  // 2 ;  // 1 ;  // 2 ;  // 2 ;  // 1 ;  // 2 ;  // 2 ;  // 1 ;  // 2 ;  // 2 ;  // 1 ;  // 2 ;  // 2 ;  // 1 ;  // 2 ;  // 2 ;  // 1 ;  // 2 ;  // 2 ;  // 2 ;  // 1 ;  // 2 ;  // 2 ;  // 1 ;  // 2 ;  // 2 ;  // 1 ;  // 2 ;  // 2 ;  // 2 ;  // 1 ;  // 2 ;  // 2 ;  // 2 ;  // 2 ;  // 1 ;  // 2 ;  // 2 ;  // 2 ;  // 1 ;  // 2 ;  // 2 ;  // 2 ;  // 1 ;  // 2 ;  // 2 ;  // 2 ;  // 1 ;  // 2 ;  // 2 ;  // 2 ;  // 2 ;  // 1 ;  // 2 ;  // 2 ;  // 2 ;  // 2 ;  // 2 ;  // 1 ;  // 2 ;  // 2 ;  // 2 ;  // 2 ;  // 2 ;  // 1 ;  // 2 ;  // 2 ;  // 2 ;  // 2 ;  // 2 ;  // 2 ;  // 2 ;  // 1 ;  // 2 ;  // 2 ;  // 2 ;  // 2 ;  // 2 ;  // 2 ;  // 2 ;  // 2 ;  // 2 ;  // 2 ;  // 2 ;  // 2 ;  // 2 ;  // 2 ;  // 2 ;  // 2 ;  // 2 ;  // 2 ;  // 2 ;  // 2 ;  // 2 ;  // 2 ;  // 2 ;  // 2 ;  // 2 ;  // 2 ;  // 2 ;  // 2 ;  // 2 ;  // 2 ;  // 2 ;  // 2 ;  // 2 ;

# END OF TRANSLATION




 

   = 0 ;
 
   = 0 ;
 
   = 0 ;
    // 0 ; 
    // 0 ; 
    // 0 ; 
    // 0 ; 
    // 0 ; 
    // 0 ; 
    // 0 ; 
    // 0 ; 
    // 0 ; 
    // 0 ; 


# END OF TRANSLATION




 


    int j = 0 ; }
 
    int j = 0 ; }
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    //  // 


# END OF TRANSLATION




 


    // 10 ; }

    // 10 ; }

    // 10 ; }
    // 10 ; }
    // 10 ; }
    // 10 ; }
    // 1 ; 
    // 1 ; 
    // 1 ; 
    // 1 ; 
    // 1 ; 
    // 2 ;  // 2 ;  // 2 ;  // 2 ;  // 2 ;  // 1 ;  // 2 ;  // 1 ;  // 2 ;  // 1 ;  // 2 ;  // 2 ;  // 1 ;  // 2 ;  // 1 ;  // 2 ;  // 2 ;  // 1 ;  // 2 ;  // 2 ;  // 1 ;  // 2 ;  // 2 ;  // 1 ;  // 2 ;  // 2 ;  // 1 ;  // 2 ;  // 2 ;  // 1 ;  // 2 ;  // 2 ;  // 1 ;  // 2 ;  // 2 ;  // 1 ;  // 2 ;  // 2 ;  // 2 ;  // 1 ;  // 2 ;  // 2 ;  // 1 ;  // 2 ;  // 2 ;  // 2 ;  // 1 ;  // 2 ;  // 2 ;  // 2 ;  // 1 ;  // 2 ;  // 2 ;  // 2 ;  // 1 ;  // 2 ;  // 2 ;  // 2 ;  // 1 ;  // 2 ;  // 2 ;  // 2 ;  // 2 ;  // 1 ;  // 2 ;  // 2 ;  // 2 ;  // 2 ;  // 2 ;  // 1 ;  // 2 ;  // 2 ;  // 2 ;  // 2 ;  // 2 ;  // 2 ;  // 2 ;  // 1 ;  // 2 ;  // 2 ;  // 2 ;  // 2 ;  // 2 ;  // 2 ;  // 2 ;  // 2 ;  // 1 ;  // 2 ;  // 2 ;  // 2 ;  // 2 ;  // 2 ;  // 2 ;  // 2 ;  // 2 ;  // 2 ;  // 2 ;  // 2 ;  // 2 ;  // 2 ;  // 2 ;  // 2 ;  // 2 ;  // 2 ;  // 2 ;  // 2 ;  // 2 ;  // 2 ;  // 2 ;  // 2 ;  // 2 ;  // 2 ;  // 2 ;  // 2 ;  // 2 ;  // 2 ;  // 2 ;  // 2 ;  // 2 ;  // 2 ;  // 2 ;  // 2 ;  // 2 ;  // 2 ;  // 2 ;  // 2 ;  // 2 ;  // 2 ;  // 2 ;  // 2 ;  // 2 ;  // 2 ;  // 2 ;  // 2 ;  // 2 ;  // 2 ;  // 2 ;  // 2 ;  // 2 ;  // 2 ;  // 2 ;  // 2 ;  //

# END OF TRANSLATION



 



 

   
 
    // if ( i == 0 ) {
    // if ( i == 0 ) {
    // if ( i == 0 ) {
    // if ( i == 0 ) { return true ; }
    // if ( i == 0 ) {
    // if ( i == 0 ) {
    // if ( i == 0 ) {
    // if ( i == 0 ) { return false ; }
    // if ( i == 0 ) {
    // if ( i == 0 ) {
    // if ( i == 0 ) {
    // if ( i == 0 ) {
    // if ( i == 0 ) {
    // if ( i == 0 ) {
    // if ( i == 0 ) {
    // if ( i == 0 ) {
    // if ( i == 0 ) {
    // if ( i == 0 ) {
    // if ( i == 0 ) {
    // if ( i == 0 ) {
    // if ( i == 0 ) {
    // if ( i == 0 ) {
    // if ( i == 0 ) {
    // if ( i == 0 ) {
    // if ( i == 0 ) {
    // if ( i == 0 ) {
    // if ( i == 0 ) {
    // if ( i == 0 ) {
    // if ( i == 0 ) {
    // if ( i == 0 ) {
    // if ( i == 0 ) {
    // if ( i == 0 ) {
    // if ( i == 0 ) {
    // if ( i == 0 ) {
    // if ( i == 0 ) {
    // if ( i == 0 ) {
    // if ( i == 0 ) {
    // if ( i == 0 ) {
    // if ( i == 0 ) {
    // if ( i == 0 ) {
    // if ( i == 0 ) {
    // if ( i == 0 ) {
    // if ( i == 0 ) {
    // if ( i == 0 ) {
    // if ( i == 0 ) {
    // if ( i == 0 ) {
    // if ( i == 0 ) {
    // if ( i == 0 ) {
    // if ( i == 0 ) {
    // if ( i == 0 ) {
    // if ( i == 0 ) {
    // if ( i == 0 ) {
    // if ( i == 0 ) {
    // if ( i == 0 ) {
    // if ( i == 0 ) {
    // if ( i == 0 ) {
    // if ( i == 0 ) {
    // if ( i == 0 ) {
    // if ( i == 0 ) {
    // if ( i == 0 ) {
    // if ( i == 0 ) {
    // if ( i == 0 ) {
    // if ( i == 0 ) {
    // if ( i == 0 ) {
    // if ( i == 0 ) {
    // if ( i == 0 ) {
    // if ( i == 0 ) {
    // if ( i == 0 ) {
    // if ( i == 0 ) {
    // if ( i == 0 ) {
    // if ( i == 0 ) {
    // if ( i == 0 ) {
    // if ( i == 0 ) {
    // if ( i == 0 ) {

# END OF TRANSLATION




 


 

 
 
 
 
 
 
 
 
 
 
 
 
 0 ; i++ ) ; } else { i += 1 ; }
 
 
 
 
 
 
 
 
 
 
 
 0 ; i++ ) ; } else { i += 1 ; } else { i += 1 ; } else { i += 1 ; } else { i += 1 ; } else { i += 1 ; i += 1 ; } else { i += 1 ; } else { i += 1 ; i += 1 ; } else { i += 1 ; i += 1 ; } else { i += 1 ; i += 1 ; } else { i += 1 ; i += 1 ; i += 1 ; } else { i += 1 ; i += 1 ; } else { i += 1 ; i += 1 ; i += 1 ; i += 1 ; i += 1 ; i += 1 ; i += 1 ; i += 1 ; i += 1 ; i += 1 ; i += 1 ; i += 1 ; i += 1 ; i += 1 ; i += 1 ; i += 1 ; i += 1 ; i += 1 ; i += 1 ; i += 1 ; i += 1 ; i += 1 ; i += 1 ; i += 1 ; i += 1 ; i += 1 ; i += 1 ; i += 1 ; i += 1 ; i += 1 ; i += 1 ; i += 1 ; i += 1 ; i += 1 ; i += 1 ; i += 1 ; i += 1 ; i += 1 ; i += 1 ; i += 1 ; i += 1 ; i += 1 ; i += 1 ; i += 1 ; i += 1 ; i += 1 ; i += 1 ; i += 1 ; i += 1 ; i += 1 ; i += 1 ; i += 1 ; i += 1 ; i += 1 ; i += 1 ; i += 1 ; i += 1 ; i += 1 ; i += 1 ; i += 1 ; i += 1 ; i += 1 ; i += 1 ; i += 1 ; i += 1 ; i += 1 ; i += 1 ; i += 1 ; i += 1 ; i += 1 ; i += 1 ; i += 1 ; i += 1 ; i += 1 ; i += 1 ; i += 1 ; i += 1 ; i += 1 ; i += 1 ; i += 1 ; i += 1 ; i += 1 ; i += 1 ; i += 1 ; i += 1 ; i += 1 ; i += 1 ; i += 1 ; i += 1 ; i += 1 ; i += 1 ; i += 1 ; i += 1 ; i += 1 ; i += 1 ; i += 1 ; i += 1 ; i += 1 ; i += 1 ; i += 1 ; i += 1 ; i += 1 ; i += 1 ; i += 1 ; i += 1 ; i += 1 ; i += 1 ; i += 1 ; i += 1 ; i += 1 ; i += 1 ; i += 1 ; i += 1 ; i += 1 ; i += 1 ; i += 1 ; i += 1 ; i += 1 ; i += 1 ; i += 1 ; i += 1 ; i += 1 ; i += 1 ; i += 1 ; i += 1 ; i += 1 ; i += 1 ; i += 1 ; i += 1 ; i += 1 ; i += 1 ; i += 1 ; i += 1 ; i += 1 ; i += 1 ; i += 1 ; i += 1 ; i += 1 ; i += 1 ; i += 1 ; i += 1 ; i += 1 ; i += 1 ; i += 1 ; i += 1 ; i += 1 ; i

# END OF TRANSLATION




 

 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 0 ) ; 
 
 
 
 
 
 
 
 0 ) ; 
 
 0 ) ; 
 
 0 ) ; 
 
 0 ; 
 0 ) ; 
 0 ) ; 
 
 0 ) ; 
 0 ) ; 
 0 ; 
 0 ; 
 0 ; 
 0 ) ; 
 0 ) ; 
 0 ; 
 0 ; 
 0 ; 
 0 ; 
 0 ; 
 0 ; 0 ; 0 ) ; 
 0 ; 0 ; 0 ; 0 ; 0 ; 0 ; 0 ; 0 ; 0 ; 0 ; 0 ; 0 ; 0 ; 0 ; 0 ; 0 ; 0 ; 0 ; 0 ; 0 ; 0 ; 0 ; 0 ; 0 ; 0 ; 0 ; 0 ; 0 ; 0 ; 0 ; 0 ; 0 ; 0 ; 0 ; 0 ; 0 ; 0 ; 0 ; 0 ; 0 ; 0 ; 0 ; 0 ; 0 ; 0 ; 0 ; 0 ; 0 ; 0 ; 0 ; 0 ; 0 ; 0 ; 0 ; 0 ; 0 ; 0 ; 0 ; 0 ; 0 ; 0 ; 0 ; 0 ; 0 ; 0 ; 0 ; 0 ; 0 ; 0 ; 0 ; 0 ; 0 ; 0 ; 0 ; 0 ; 0 ; 0 ; 0 ; 0 ; 0 ; 0 ; 0 ; 0 ; 0 ; 0 ; 0 ; 0 ; 0 ; 0 ; 0 ; 0 ; 0 ; 0 ; 0 ; 0 ; 0 ; 0 ; 0 ; 0 ; 0 ; 0 ; 0 ; 0 ; 0 ; 0 ; 0 ; 0 ; 0 ; 0 ; 0 ; 0 ; 0 ; 0 ; 0 ; 0 ; 0 ; 0 ; 0 ; 0 ; 0 ; 0 ; 0 ; 0 ; 0 ; 0 ; 0 ; 0 ; 0 ; 0 ; 0 ; 0 ; 0 ; 0 ; 0 ; 0 ; 0 ; 0 ; 0 ; 0 ; 0 ; 0 ; 0 ; 0 ; 0 ; 0 ; 0 ; 0 ; 0 ; 0 ; 0 ; 0 ; 0 ; 0 ; 0 ; 0 ; 0 ; 0 ; 0 ; 0 ; 0 ; 0 ; 0 ; 0 ; 0 ; 0 ; 0 ; 0 ; 0 ; 0 ; 0 ; 0 ; 0 ; 0 ; 0 ; 0 ; 0 ; 0 ; 0 ; 0 ; 0 ; 0 ; 0 ; 0 ; 0 ; 0 ; 0 ; 0 ; 0 ; 0 ; 0 ; 0 ; 0 ; 0 ; 0 ; 0 ; 0 ; 0 ; 0 ; 0 ; 0 ; 0 ; 0 ; 0 ; 0 ; 0 ; 0 ; 0 ; 0 ; 0 ; 0 ; 0 ; 

# END OF TRANSLATION




 


    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 


# END OF TRANSLATION




    int count = 0 ; }
    // count += 1 ; }
    // count += 1 ; }
    // count += 1 ; }
    // count += 1 ; }
    // count += 1 ; }
    // count += 1 ; }
    // count += 1 ; }
    // count += 1 ; }
    // count += 1 ; }
    // count += 1 ; }
    // count += 1 ; }
    // count += 1 ; }
    // count += 1 ; }
    // count += 1 ; }    // count += 1 ; }    // count += 1 ; }    // count += 1 ; }    // count += 1 ; }    // count += 1 ; }    // count += 1 ; }    // count += 1 ; }    // count += 1 ; }    // count += 1 ; }    // count += 1 ; }    // count += 1 ; }    // count += 1 ; }    // count += 1 ; }    // count += 1 ; }    // count += 1 ; }    // count += 1 ; }    // count += 1 ; }    // count += 1 ; }    // count += 1 ; }    // count += 1 ; }    // count += 1 ; }    // count += 1 ; }    // count += 1 ; }    // count += 1 ; }    // count += 1 ; }    // count += 1 ; }    // count += 1 ; }    // count += 1 ;    // count += 1 ; }    // count += 1 ; }    // count += 1 ;    // count += 1 ; }    // count += 1 ;    // count += 1 ; }    // count += 1 ;    // count += 1 ; }    // count += 1 ;    // count += 1 ; }    // count += 1 ;    // count += 1 ;    // count += 1 ; }    // count += 1 ;    // count += 1 ;    // count += 1 ;    // count += 1 ;    // count += 1 ;    // count += 1 ;    // count += 1 ;    // count += 1 ;    // count += 1 ;    // count += 1 ;    // count += 1 ;    // count += 1 ;    // count += 1 ;    // count += 1 ;    // count += 1 ;    // count += 1 ;    // count += 1 ;    // count += 1 ;    // count += 1 ;    // count += 1 ;    // count += 1 ;    // count += 1 ;    // count += 1 ;    // count += 1 ;    // count += 1 ;    // count += 1 ;    // count += 1 ;    // count += 1 ;    // count += 1 ;    // count += 1 ;    // count += 1 ;    // count += 1 ;    // count += 1 ;    // count += 1 ;    // count += 1 ;    // count += 1 ;    // count += 1 ;    // count += 1 ;    // count += 1 ;    // count += 1 ;    // count += 1 ;    // count += 1 ;    // count += 1 ;    // count += 1 ;    // count += 1 ;    // count += 1 ;    // count += 1 ;    // count += 1 ;    // count += 1 ;    // count += 1 ;    // count += 1 ;    // count += 1 ;    // count += 1 ;    // count += 1 ;    // count += 1 ;    // count += 1 ;    // count += 1 ;    // count += 1 ;    // count += 1 ;    // count += 1 ;    // count += 1 ;    // count += 1 ;    // count += 1 ;    // count += 1 ;    //

# END OF TRANSLATION




 


    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    //  // 
    //  // 


# END OF TRANSLATION



   
    // 2 . charAt ( i ) ; }
    // 2 . charAt ( i ) ; }
    // 2 . charAt ( i ) ; }
    // 2 . charAt ( i ) ; }
    // 2 . charAt ( i ) ; }
    // 2 . charAt ( i ) ; }
    // 2 . charAt ( i ) ; }
    // 2 . charAt ( i ) ; }
    // 2 . charAt ( i ) ; }
    // 2 . charAt ( i ) ; }
    // 2 . charAt ( i ) ; }    // 2 . charAt ( i ) ; }    // 2 . charAt ( i ) ; }    // 2 . charAt ( i ) ; }    // 2 . charAt ( i ) ; }    // 2 . charAt ( i ) ; }    // 2 . charAt ( i ) ; }    // 2 . char ( i ) ; }    // 2 . charAt ( i ) ; }    // 2 . char ( i ) ; }    // 2 . char ( i ) ; }    // 2 . char ( i ) ; }    // 2 . char ( i ) ; }    // 2 . char ( i ) ; }    // 2 . char ( i ) ; }    // 2 . char ( i ) ; }    // 2 . char ( i ) ; }    // 2 . char ( i ) ; }    // 2 . char ( i ) ; }    // 2 . char ( i ) ; }    // 2 . char ( i ) ; }    // 2 . char ( i ) ; }    // 2 . char ( i ) ; }    // 2 . char ( i ) ; }    // 2 . char ( i ) ; }    // 2 . char ( i ) ; }    // 2 . char ( i ) ; }    // 2 . char ( i ) ; }    // 2 . char ( i ) ; }    // 2 . char ( i ) ; }    // 2 . char ( i ) ; }    // 2 . char ( i ) ; }    // 2 . char ( i ) ; }    // 2 . char ( i ) ; }    // 2 . char ( i ) ; }    // 2 . char ( i ) ; }    // 2 . char ( i ) ; }    // 2 . char ( i ) ; }    // 2 . char ( i ) ; }    // 2 . char ( i ) ; }    // 2 . char ( i ) ; }    // 2 . char ( i ) ; }    // 2 . char ( i ) ; }    // 2 . char ( i ) ; }    // 2 . char ( i ) ; }    // 2 . char ( i ) ; }    // 2 . char ( i ) ; }    // 2 . char ( i ) ; }    // 2 . char ( i ) ; }    // 2 . char ( i ) ; }    // 2 . char ( i ) ; }    // 2 . char ( i ) ; }    // 2 . char ( i )

# END OF TRANSLATION



 

    // if ( i >= 0 ) {
    // if ( i >= 0 ) {
    // if ( i >= 0 ) {
    // if ( i >= 0 ) {
    // if ( i >= 0 ) { return false ; } else {
    // if ( i >= 0 ) {
    // if ( i >= 0 ) {
    // if ( i >= 0 ) {
    // if ( i >= 0 ) { return false ; } else {
    // if ( i >= 0 ) {
    // if ( i >= 0 ) {
    // if ( i >= 0 ) {
    // if ( i >= 0 ) {
    // if ( i >= 0 ) {
    // if ( i >= 0 ) {
    // if ( i >= 0 ) {
    // if ( i >= 0 ) {
    // if ( i >= 0 ) {
    // if ( i >= 0 ) {
    // if ( i >= 0 ) {
    // if ( i >= 0 ) {
    // if ( i >= 0 ) {
    // if ( i >= 0 ) {
    // if ( i >= 0 ) {
    // if ( i >= 0 ) {
    // if ( i >= 0 ) {
    // if ( i >= 0 ) {
    // if ( i >= 0 ) {
    // if ( i >= 0 ) {
    // if ( i >= 0 ) {
    // if ( i >= 0 ) {
    // if ( i >= 0 ) {
    // if ( i >= 0 ) {
    // if ( i >= 0 ) {
    // if ( i >= 0 ) {
    // if ( i >= 0 ) {
    // if ( i >= 0 ) {
    // if ( i >= 0 ) {
    // if ( i >= 0 ) {
    // if ( i >= 0 ) {
    // if ( i >= 0 ) {
    // if ( i >= 0 ) {
    // if ( i >= 0 ) {
    // if ( i >= 0 ) {
    // if ( i >= 0 ) {
    // if ( i >= 0 ) {
    // if ( i >= 0 ) {
    // if ( i >= 0 ) {
    // if ( i >= 0 ) {
    // if ( i >= 0 ) {
    // if ( i >= 0 ) {
    // if ( i >= 0 ) {
    // if ( i >= 0 ) {
    // if ( i >= 0 ) {
    // if ( i >= 0 ) {
    // if ( i >= 0 ) {
    // if ( i >= 0 ) {
    // if ( i >= 0 ) {
    // if ( i >= 0 ) {
    // if ( i >= 0 ) {
    // if ( i >= 0 ) {
    // if ( i >= 0 ) {
    // if ( i >= 0 ) {
    // if ( i >= 0 ) {
    // if ( i >= 0 ) {
    // if ( i >= 0 ) {
    // if ( i >= 0 ) {
    // if ( i >= 0 ) {
    // if ( i >= 0 ) {
    // if ( i >= 0 ) {
    // if ( i >= 0 ) {
    // if (

# END OF TRANSLATION



 

    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    //  // 


# END OF TRANSLATION





 


    int i = 0 ; int j = 0 ; }
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    //  // 


# END OF TRANSLATION




 



 



 0 ; }


 
 
 0 ; }

 
 
 0 ; }

 
 
 0 ; }

 
 0 ; }

 
 0 ; }

 
 
 0 ; }

 
 0 ; }
 
 0 ; }
 
 
 0 ; }
 
 0 ; }

 
 
 0 ; }
 
 0 ; }

 
 0 ; }

 
 
 0 ; }

 
 0 ; }

 
 0 ; }

 
 
 0 ; }

 
 0 ; }
 
 
 0 ; }
 
 
 0 ; }

 
 
 0 ; }

 
 0 ; }
 
 
 0 ; }
 
 0 ; }
 
 0 ; }

 0 ; }
 
 0 ; }
 
 0 ; }
 
 0 ; }
 
 0 ; }
 
 0 ; }
 
 0 ; }
 
 0 ; }
 
 0 ; } 
 0 ; } 
 0 ; } 
 0 ; } 
 0 ; } 
 0 ; } 
 0 ; } 
 0 ; } 
 0 ; } 
 0 ; } 
 0 ; } 
 0 ; } 
 0 ; 
 0 ; } 
 0 ; } 
 0 ; } 
 0 ; 
 0 ; } 
 0 ; 
 0 ; } 
 0 ; 
 0 ; 0 ; } 
 0 ; 
 0 ; } 
 0 ; 
 0 ; } 
 0 ; 
 0 ; 0 ; } 
 0 ; 0 ; 0 ; } 
 0 ; 0 ; 0 ; 0 ; 0 ; 0 ; 0 ; 0 ; } 
 0 ; 0 ; 0 ; 0 ; 0 ; 0 ; 0 ; 0 ; 0 ; 0 ; 0 ; 0 ; 0 ; 0 ; 0 ; 0 ; 0 ; 0 ; 0 ; 0 ; 0 ; 0 ; 0 ; 0 ; 0 ; 0 ; 0 ; 0 ; 0 ; 0 ; 0 ; 0 ; 0 ; 0 ; 0 ; 0 ; 0 ; 0 ; 0 ; 0 ; 0 ; 0 ; 0 ;

# END OF TRANSLATION




    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 


# END OF TRANSLATION





 

    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 


# END OF TRANSLATION





    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 


# END OF TRANSLATION

double ( ) ; }
double ( ) ; }
double ( ) ; }
double ( ) ; }
double ( ) ; }
double ( ) ; }
double ( ) ; }
double ( ) ; } ; }
double ( ) ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; }

# END OF TRANSLATION





    // 2 , int x , int y2 ) ;
 
    // 2 , int x , int y2 ) ; }
    // 2 , int x , int y2 ) ; }
    // 2 , int x , int y2 ) ; }
    // 2 , int x , int y2 ) ; }
    // 2 , int x , int y2 ) ; }
    // 2 , int x , int y2 ) ; }
    // 2 , int x , int y2 ) ; }
    // 2 , int x , int y2 ) ; }
    // 2 , int x , int y2 ) ; }
    // 2 , int x , int y2 ) ; }
    // 2 , int y2 ) ; }
    // 2 , int x , int y2 ) ; }
    // 2 , int x , int y2 ) ; }
    // 2 , int x , int y2 ) ; }
    // 2 , int x , int y2 ) ; }
    // 2 , int y2 ) ; }
    // 2 , int x , int y2 ) ; }
    // 2 , int x , int y2 ) ; }
    // 2 , int y2 ) ; }
    // 2 , int x , int y2 ) ; }
    // 2 , int x , int y2 ) ; }
    // 2 , int y2 , int y2 ) ; }    // 2 , int x , int y2 ) ; }    // 2 , int x , int y2 ) ; }    // 2 , int x , int y2 ) ; }    // 2 , int y2 ) ; }    // 2 , int x , int y2 ) ; }    // 2 , int y2 ) ; }    // 2 , int x , int y2 ) ; }    // 2 , int x , int y2 ) ; }    // 2 , int y2 , int y2 ) ; }    // 2 , int x , int y2 ) ; }    // 2 , int x , int y2 ) ; }    // 2 , int y2 , int y2 ) ; }    // 2 , int x , int y2 ) ; }    // 2 , int x , int y2 ) ; }    // 2 , int y2 , int y2 ) ; }    // 2 , int x , int y2 ) ; }    // 2 , int y2 , int y2 ) ; }    // 2 , int x , int y2 ) ; }    // 2 , int y2 , int y2 ) ; }    // 2 , int x , int y2 ) ; }    // 2 , int y2 , int y2 ) ; }    // 2 , int x , int y2 ) ; }    // 2 , int y2 , int y2 ) ; }    // 2 , int x , int y2 ) ; }    // 2 , int y2 , int y2 ) ; }    // 2 , int y2 , int y2 ) ; }    // 2 , int x , int y2 ) ; }    // 2 , int y2 , int y2 ) ; }    // 2 , int x , int y2 ) ; }    // 2 , int y2 , int y2 ) ; }    // 2 , int y2 , int y2 ) ; }    // 2 , int x , int y2 ) ; }    // 2 , int y2 , int y2 ) ; }    // 2 , int y2 , int y2 )

# END OF TRANSLATION


Area = a * a4 ;
Area = a4 ;
Area = a4 ;
Area = a4 ;
Area = a4 ;
Area = a4 ;
Area = a4 ;
Area = a4 ;
Area = a4 ;
Area = a4 ;
Area = a4 ;
Area = a4 ;
Area = a4 ;
Area = a4 ;
Area = a4 ;
Area = a4 ;
Area = a4 ;
Area = a4 ;
Area = a4 ;
Area = a4 ;
Area = a4 ;
Area = a4 ;
Area = a4 ;
Area = a4 ;
Area = a4 ;
Area = a4 ;
Area = a4 ;
Area = a4 ;
Area = a4 ;
Area = a4 ;
Area = a4 ;
Area = a4 ; Area = a4 ; Area = a4 ; Area = a4 ; Area = a4 ; Area = a4 ; Area = a4 ; Area = a4 ; Area = a4 ; Area = a4 ; Area = a4 ; Area = a4 ; Area = a4 ; Area = a4 ; Area = a4 ; Area = a4 ; Area = a4 ; Area = a4 ; Area = a4 ; Area = a4 ; Area = a4 ; Area = a4 ; Area = a4 ; Area = a4 ; Area = a4 ; Area = a4 ; Area = a4 ; Area = a4 ; Area = a4 ; Area = a4 ; Area = a4 ; Area = a4 ; Area = a4 ; Area = a4 ; Area = a4 ; Area = a4 ; Area = a4 ; Area = a4 ; Area = a4 ; Area = a4 ; Area = a4 ; Area = a4 ; Area = a4 ; Area = a4 ; Area = a4 ; Area = a4 ; Area = a4 ; Area = a4 ; Area = a4 ; Area = a4 ; Area = a4 ; Area = a4 ; Area = a4 ; Area = a4 ; Area = a4 ; Area = a4 ; Area = a4 ; Area = a4 ; Area = a4 ; Area = a4 ; Area = a4 ; Area = a4 ; Area = a4 ; Area = a4 ; Area = a4 ; Area = a4 ; Area = a4 ; Area = a4 ; Area = a4 ; Area = a4 ; Area = a4 ; Area = a4 ; Area = a4 ; Area = a4 ; Area = a4 ; Area = a4 ; Area = a4 ; Area = a4 ; Area = a4 ; Area = a4 ; Area = a4 ; Area = a4 ; Area = a4 ; Area = a4 ; Area = a4 ; Area = a4 ; Area = a4 ; Area = a4 ; Area = a4 ; Area = a4 ; Area = a4 ; Area = a4 ; Area = a4 ; Area = a4 ; Area = a4 ; Area = a4 ; Area = a4 ; Area = a4 ; Area = a4 ; Area = a4 ; Area = a4 ; Area = a4 ; Area = a4 ; Area = a4 ; Area = a4 ; Area = a4 ; Area = a4 ; Area = a4 ; Area = a4 ; Area = a4 ; Area = a4 ; Area = a4 ; Area = a4 ; Area = a4 ; Area = a4 ; Area = a4 ; Area = a4 ; Area = a4 ; Area = a4 ; Area = a4 ; Area = a4 ; Area = a4 ; Area = a4 ; Area = a4 ; Area = a4 ; Area = a4 ; Area = a4 ; Area = a4 ; Area = a4 ; Area = a4 ; Area = a4 ; Area = a4 ; Area = a4 ; Area = a4 ; Area

# END OF TRANSLATION



    // 10 ; i = 1 ; i <= a ; i ++ i ; }
 
    // 1 ; i = 1 ; i <= a ; i <= b ; i ++ i ; i <= a ; i <= b ; i <= a ; i <= b ; i <= a ; i <= b ; i <= a ; i <= b ; i <= a ; i <= b ; i <= a ; i <= b ; i <= a ; i <= b ; i <= a ; i <= b ; i <= a ; i <= b ; i <= a ; i <= b ; i <= a ; i <= b ; i <= a ; i <= b ; i <= a ; i <= b ; i <= a ; i <= b ; i <= a ; i <= b ; i <= a ; i <= b ; i <= a ; i <= b ; i <= a ; i <= b ; i <= a ; i <= b ; i <= a ; i <= b ; i <= a ; i <= b ; i <= a ; i <= b ; i <= a ; i <= b ; i <= a ; i <= b ; i <= a ; i <= b ; i <= a ; i <= b ; i <= a ; i <= b ; i <= a ; i <= b ; i <= a ; i <= b ; i <= a ; i <= b ; i <= a ; i <= b ; i <= a ; i <= b ; i <= a ; i <= b ; i <= a ; i <= b ; i <= a ; i <= b ; i <= a ; i <= b ; i <= a ; i <= b ; i <= a ; i <= b ; i <= a ; i <= b ; i <= a ; i <= b ; i <= a ; i <= b ; i <= a ; i <= b ; i <= a ; i <= b ; i <= a ; i <= b ; i <= a ; i <= b ; i <= a ; i <= b ; i <= a ; i <= b ; i <= a ; i <= b ; i <= a ; i <= b ; i <= a ; i <= b ; i <= a ; i <= b ; i <= a ; i <= b ; i <= a ; i <= b ; i <= a ; i <= b ; i <= a ; i <= b ; i <= a ; i <= b ; i <= a ; i <= b ; i <= a ; i <= b ; i <= a ; i <= b ; i <= a ; i <= b ; i <= a ; i <= b ; i <= a ; i <= b ; i <= a ; i <= b ; i <= a ; i <= b ; i <= a ; i <= b ; i <= a ; i <= b ; i <= a ; i <= b ; i <= a ; i <= b ; i <= a ; i <= b ; i <= a ; i <= b ; i <= a ; i <= b ; i <= a ; i <= b ; i <= a ; i <= b ; i <= a ; i <= b ; i <= a ; i <= b ; i <= a ; i <= b ; i <= a ; i <= b ; i <= a ; i <= b ; i <= a ; i <= b ; i <= a ; i <= b ; i <= a ; i <= b ; i <= a ; i <= b ; i <= a ; i <= b ; i <= a ; i <= b ; i <= a ; i <= b ; i <= a ; i <= b ; i <= a ; i <= b ; i <= a ; i <= b ; i <= a ; i <= b ; i <= a ; i <= b ; i <= a ; i <= b ; i <= a ; i <= b ; i <= a ; i <= b ; i <= a ; i <= b ; i <= a ; i <= b ; i <= a ; i <= b ; i <= a ; i <= b ; i <= a ; i <= b ; i <=

# END OF TRANSLATION





 

    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //

# END OF TRANSLATION







 






    // if ( n == 1 ) { return "Yes" ; } else {
    // if ( n == 1 ) { return "Yes" ; } else {
    // if ( n == 1 ) { return "No" ; } else {
    // if ( n == 1 ) { return "Yes" ; } else {
    // if ( n == 1 ) { return "No" ; } else {
    // if ( n == 1 ) { return "Yes" ; } else {
    // if ( n == 1 ) { return "No" ; } else {
    // if ( n == 1 ) { return "Yes" ; } else {
    // if ( n == 1 ) { return "No" ; } else {
    // if ( n == 1 ) { return "Yes" ; } else {
    // if ( n == 1 ) { return "No" ; } else {
    // if ( n == 1 ) { return "Yes" ; } else {
    // if ( n == 1 ) { return "No" ; } else {
    // if ( n == 1 ) { return "Yes" ; } else {
    // if ( n == 1 ) { return "No" ; } else {
    // if ( n == 1 ) { return "Yes" ; } else {
    // if ( n == 1 ) { return "No" ; } else {
    // if ( n == 1 ) { return "Yes" ; } else {
    // if ( n == 1 ) { return "No" ; } else {
    // if ( n == 1 ) { return "Yes" ; } else {
    // if ( n == 1 ) { return "No" ; } else {
    // if ( n == 1 ) { return "No" ; } else {
    // if ( n == 1 ) { return "Yes" ; } else {
    // if ( n == 1 ) { return "No" ; } else {
    // if ( n == 1 ) { return "No" ; } else {
    // if ( n == 1 ) { return "No" ; } else {
    // if ( n == 1 ) { return "Yes" ; } else {
    // if ( n == 1 ) { return "No" ; } else {
    // if ( n == 1 ) { return "No" ; } else {
    // if ( n == 1 ) { return "No" ; } else {
    // if ( n == 1 ) { return "Yes" ; } else {
    // if ( n == 1 ) { return "No" ; } else {
    // if ( n == 1 ) { return "No" ; } else {
    // if ( n == 1 ) {
    // if ( n == 1 ) { return "No" ; } else {
    // if ( n == 1 ) { return "No" ; } else {
    // if ( n == 1 ) { return "No" ; } else {
    // if ( n == 1 ) {
    // if ( n == 1 ) { return "No" ; } else {
    // if ( n == 1 ) {
    // if ( n == 1 ) { return "No" ; } else {
    // if ( n == 1 ) {
    // if ( n == 1 ) { return "No" ; } else {
    // if ( n == 1 ) {
    // if ( n == 1 ) {


# END OF TRANSLATION




 

 

    int i = 0 ;
 
 
    int i = 0 ;
 
    int i = 0 ;
 
    int i = 0 ;
 
    int i = 0 ;
    int i = 0 ;
    int i = 0 ;
    int i = 0 ;
    int i = 0 ;
    int i = 0 ;
    int i = 0 ;
    int i = 0 ;
    int i = 0 ;
    int i = 0 ;
    int i = 0 ;
    int i = 0 ;
    int i = 0 ;
    int i = 0 ;
    int i = 0 ;
    int i = 0 ;
    int i = 0 ;
    int i = 0 ;
    int i = 0 ;
    int i = 0 ;
    int i = 0 ;    int i = 0 ;    int i = 0 ;    int i = 0 ;    int i = 0 ;    int i = 0 ;    int i = 0 ;    int i = 0 ;    int i = 0 ;    int i = 0 ;    int i = 0 ;    int i = 0 ;    int i = 0 ;    int i = 0 ;    int i = 0 ;    int i = 0 ;    int i = 0 ;    int i = 0 ;    int i = 0 ;    int i = 0 ;    int i = 0 ;    int i = 0 ;    int i = 0 ;    int i = 0 ;    int i = 0 ;    int i = 0 ;    int i = 0 ;    int i = 0 ;    int i = 0 ;    int i = 0 ;    int i = 0 ;    int i = 0 ;    int i = 0 ;    int i = 0 ;    int i = 0 ;    int i = 0 ;    int i = 0 ;    int i = 0 ;    int i = 0 ;    int i = 0 ;    int i = 0 ;    int i = 0 ;    int i = 0 ;    int i = 0 ;    int i = 0 ;    int i = 0 ;    int i = 0 ;    int i = 0 ;    int i = 0 ;    int i = 0 ;    int i = 0 ;    int i = 0 ;    int i = 0 ;    int i = 0 ;    int i = 0 ;    int i = 0 ;    int i = 0 ;    int i = 0 ;    int i = 0 ;    int i = 0 ;    int i = 0 ;    int i = 0 ;    int i = 0 ;    int i = 0 ;    int i = 0 ;    int i = 0 ;    int i = 0 ;    int i = 0 ;    int i = 0 ;    int i = 0 ;    int i = 0 ;    int i = 0 ;    int i = 0 ;    int i = 0 ;    int i = 0 ;    int i = 0 ;    int i = 0 ;    int i = 0 ;    int i = 0 ;    int i = 0 ;    int i = 0 ;    int i = 0 ;    int i = 0 ;    int i = 0 ;    int i = 0 ;    int i = 0 ;    int i = 0 ;    int i = 0 ;    int i = 0 ;    int i = 0 ;    int i = 0 ;    int i = 0 ;    int i = 0 ;    int i = 0 ;    int i = 0 ;    int i = 0 ;    int i = 0 ;    int i = 0 ;    int i = 0 ;    int i = 0 ;    int i = 0 ;    int i = 0 ;    int i = 0 ;    int i = 0

# END OF TRANSLATION




    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 


# END OF TRANSLATION





 

    // 
 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    //  // 


# END OF TRANSLATION



 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 10 ; 
 10 ; 
 
 10 ; 
 
 10 ; 
 10 ; 
 10 ; 
 10 ; 
 1 ; 
 1 ; 
 1 ; 
 1 ; 
 1 ; 
 1 ; 
 1 ; 
 1 ; 
 1 ; 
 1 ; 2 0 ; 
 1 ; 2 0 ; 1 ; 2 0 ; 1 ; 2 0 ; 1 ; 2 1 ; 2 1 ; 2 0 ; 2  ; 2 1 ; 2 1 ; 2  ; 1 ; 2  ; 1 ; 2  ; 2  ; 1 ; 2  ; 1 ; 2  ; 2  ; 1 ; 2  ; 2  ; 1 ; 2  ; 1 ; 2 ;  ; 2  ; 1 ; 2 ;  ; 2 ; 1 ; 2 ;  ; 2 ;  ; 1 ; 2 ;  ; 2 ;  ; 1 ; 2 ;  ; 1 ; 2 ;  ; 2 ; 1 ; 2 ;  ; 2 ;  ; 1 ; 2 ;  ; 2 ;  ; 1 ; 2 ;  ; 2 ;  ; 1 ; 2 ;  ; 2 ;  ; 1 ; 2 ;  ; 2 ;  ; 1 ; 2 ;  ; 2 ;  ; 1 ; 2 ;  ; 2 ;  ; 1 ; 2 ;  ; 2 ;  ; 1 ; 2 ;  ; 2 ;  ; 2 ;  ; 1 ; 2 ;  ; 2 ;  ; 2 ;  ; 1 ; 2 ;  ; 2 ;  ; 1 ; 2 ;  ; 2 ;  ; 2 ;  ; 1 ; 2 ;  ; 2 ;  ; 2 ;  ; 1 ; 2 ;  ; 2 ;  ; 2 ;  ; 1 ; 2 ;  ; 2 ;  ; 2 ;  ; 2 ;  ; 1 ; 2 ;  ; 2 ;  ; 2 ;  ;  ; 2 ;  ; 1 ; 2 ;  ; 2 ;  ; 2 ;  ; 2 ;  ;  ; 2 ;  ; 1 ;  ; 2 ;  ; 2 ;  ; 2 ;  ; 2 ;  ; 2 ;  ; 2 ;  ;  ; 2 ;  ;  ; 2 ;  ;  ; 2 ;  ;  ; 2 ;  ;  ;  ; 2 ;  ;  ; 2 ;  ;  ; 2 ;  ;  ;  ; 2 ;  ;  ; 2 ;  ;  ; 2 ;  ;  ;  ; 2 ;  ;  ;  ; 2 ;  ;  ;  ; 2 ;  ;  ;  ;  ; 2 ;  ;  ;  ;  ;  ; 2 ;  ;  ;  ;  ;  ; 2 ;  ;  ;  ;  ;  ;  ;  ;  ; 2 ;  ;  ;  ;  ;  ;  ;  ;  ;  ; 

# END OF TRANSLATION




 

    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 


# END OF TRANSLATION




 


    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 


# END OF TRANSLATION





    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 


# END OF TRANSLATION




 


 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 10 ; }
 
 10 ; }
 
 
 10 ; }
 
 
 10 ; }
 
 
 10 ; }
 
 10 ; }
 
 10 ; }
 
 10 ; }
 
 10 ; }
 
 10 ; } 
 10 ; } 
 1 ; } 
 1 ; } 
 1 ; } 
 1 ; } 1 ; } 1 ; 
 1 ; } 1 ; } 1 ; } 1 ; 1 1 ; } 1 ; 1 ; 2 1 ; } 1 ; 2 1 ; } 1 ; 2 1 ; 2 1 ; 2 1 ; 2 1 ; 2 1 ; 2 1 ; 2 1 ; 2 1 ; 2 1 ; 2 1 ; 2 1 ; 2 1 ; 2 1 ; 2 1 ; 2 1 ; 2 1 ; 2 1 ; 2 1 ; 2 1 ; 2 1 ; 2 1 ; 2 ; 1 ; 2 1 ; 2 ; 2 ; 1 ; 2 ; 1 ; 2 ; 1 ; 2 ; 1 ; 2 ; 1 ; 2 ; 1 ; 2 ; 1 ; 2 ; 2 ; 1 ; 2 ; 1 ; 2 ; 1 ; 2 ; 1 ; 2 ; 1 ; 2 ; 1 ; 2 ; 1 ; 2 ; 2 ; 1 ; 2 ; 1 ; 2 ; 1 ; 2 ; 1 ; 2 ; 2 ; 1 ; 2 ; 1 ; 2 ; 2 ; 1 ; 2 ; 1 ; 2 ; 2 ; 1 ; 2 ; 1 ; 2 ; 2 ; 1 ; 2 ; 1 ; 2 ; 2 ; 1 ; 2 ; 1 ; 2 ; 1 ; 2 ; 2 ; 1 ; 2 ; 1 ; 2 ; 2 ; 1 ; 2 ; 1 ; 2 ; 2 ; 1 ; 2 ; 1 ; 2 ; 2 ; 1 ; 2 ; 1 ; 2 ; 2 ; 1 ; 2 ; 2 ; 1 ; 2 ; 1 ; 2 ; 2 ; 1 ; 2 ; 2 ; 1 ; 2 ; 1 ; 2 ; 2 ; 1 ; 2 ; 2 ; 1 ; 2 ; 2 ; 1 ; 2 ; 1 ; 2 ; 2 ; 1 ; 2 ; 2 ; 1 ; 2 ; 2 ; 1 ; 2 ; 2 ; 1 ; 2 ; 2 ; 1 ; 2 ; 2 ; 1 ; 2 ; 2 ; 1 ; 2 ; 2 ; 1 ; 2 ; 2 ; 1 ; 2 ; 2 ; 1 ; 2 ; 2 ; 1 ; 2 ; 2 ; 1 ; 2 ; 2 ; 1 ; 2 ; 2 ; 1 ; 2 ; 2 ; 1 ; 2 ; 2 ; 1 ; 2 ; 2 ; 1 ; 2 ; 2

# END OF TRANSLATION




 

    // if ( i == 0 ) {
    // if ( i == 0 ) {
    // if ( i == 0 ) {
    // if ( i == 0 ) {
    // if ( i == 0 ) {
    // if ( i == 0 ) {
    // if ( i == 0 ) {
    // if ( i == 0 ) {
    // if ( i == 0 ) {
    // if ( i == 0 ) {
    // if ( i == 0 ) {
    // if ( i == 0 ) {
    // if ( i == 0 ) {
    // if ( i == 0 ) {
    // if ( i == 0 ) {
    // if ( i == 0 ) {
    // if ( i == 0 ) {
    // if ( i == 0 ) {
    // if ( i == 0 ) {
    // if ( i == 0 ) {
    // if ( i == 0 ) {
    // if ( i == 0 ) {
    // if ( i == 0 ) {
    // if ( i == 0 ) {
    // if ( i == 0 ) {
    // if ( i == 0 ) {
    // if ( i == 0 ) {
    // if ( i == 0 ) {
    // if ( i == 0 ) {
    // if ( i == 0 ) {
    // if ( i == 0 ) {
    // if ( i == 0 ) {
    // if ( i == 0 ) {
    // if ( i == 0 ) {
    // if ( i == 0 ) {
    // if ( i == 0 ) {
    // if ( i == 0 ) {
    // if ( i == 0 ) {
    // if ( i == 0 ) {
    // if ( i == 0 ) {
    // if ( i == 0 ) {
    // if ( i == 0 ) {
    // if ( i == 0 ) {
    // if ( i == 0 ) {
    // if ( i == 0 ) {
    // if ( i == 0 ) {
    // if ( i == 0 ) {
    // if ( i == 0 ) {
    // if ( i == 0 ) {
    // if ( i == 0 ) {
    // if ( i == 0 ) {
    // if ( i == 0 ) {
    // if ( i == 0 ) {
    // if ( i == 0 ) {
    // if ( i == 0 ) {
    // if ( i == 0 ) {
    // if ( i == 0 ) {
    // if ( i == 0 ) {
    // if ( i == 0 ) {
    // if ( i == 0 ) {
    // if ( i == 0 ) {
    // if ( i == 0 ) {
    // if ( i == 0 ) {
    // if ( i == 0 ) {
    // if ( i == 0 ) {
    // if ( i == 0 ) {
    // if ( i == 0 ) {
    // if ( i == 0 ) {
    // if ( i == 0 ) {
    // if ( i == 0 ) {
    // if ( i == 0 ) {
    // if ( i == 0 ) {
    // if ( i == 0 ) {
    // if ( i == 0 ) {
    // if ( i == 0 ) {
    // if ( i == 0 ) {
    // if ( i == 0 ) {
    // if ( i == 0 ) {
    // if ( i == 0 ) {
    // if ( i == 0 ) {
    // if ( i == 0 ) {
    // if ( i == 0 ) {


# END OF TRANSLATION




 
 
 
 
 
 
 
 
 
 
 10 , b ) 10 , 1 , 2 , 2 , 1 , 2 , 1 , 2 , 2 , 1 , 2 , 1 , 2 , 1 , 2 , 1 , 2 , 1 , 2 , 1 , 2 , 1 , 2 , 1 , 2 , 1 , 2 , 1 , 2 , 1 , 2 , 1 , 2 , 1 , 2 , 1 , 2 , 1 , 2 , 1 , 2 , 1 , 2 , 1 , 2 , 1 , 2 , 1 , 2 , 1 , 2 , 1 , 2 , 1 , 2 , 1 , 2 , 1 , 2 , 1 , 2 , 1 , 2 , 1 , 2 , 1 , 2 , 1 , 2 , 1 , 2 , 1 , 2 , 1 , 2 , 1 , 2 , 1 , 2 , 1 , 2 , 1 , 2 , 1 , 2 , 1 , 2 , 1 , 2 , 1 , 2 , 1 , 2 , 1 , 2 , 1 , 2 , 1 , 2 , 1 , 2 , 1 , 2 , 1 , 2 , 1 , 2 , 1 , 2 , 1 , 2 , 1 , 2 , 1 , 2 , 1 , 2 , 1 , 2 , 1 , 2 , 1 , 2 , 1 , 2 , 1 , 2 , 1 , 2 , 1 , 2 , 1 , 2 , 1 , 2 , 1 , 2 , 1 , 2 , 1 , 2 , 1 , 2 , 1 , 2 , 1 , 2 , 1 , 2 , 1 , 2 , 1 , 2 , 1 , 2 , 1 , 2 , 1 , 2 , 1 , 2 , 1 , 2 , 1 , 2 , 1 , 2 , 1 , 2 , 1 , 2 , 1 , 2 , 1 , 2 , 1 , 2 , 1 , 2 , 1 , 2 , 1 , 2 , 1 , 2 , 1 , 2 , 1 , 2 , 1 , 2 , 1 , 2 , 1 , 2 , 1 , 2 , 1 , 2 , 1 , 2 , 1 , 2 , 1 , 2 , 1 , 2 , 1 , 2 , 1 , 2 , 1 , 2 , 1 , 2 , 1 , 2 , 1 , 2 , 1 , 2 , 1 , 2 , 1 , 2 , 1 , 2 , 1 , 2 , 1 , 2 , 1 , 2 , 1 , 2 , 1 , 2 , 1 , 2 , 1 , 2 , 1 , 2 , 1 , 2 , 1 , 2 , 1 , 2 , 1 , 2 , 1 , 2 , 1 , 2 , 1 , 2 , 1 , 2 , 1 , 2 , 1 , 2 , 1 , 2 , 1 , 2 , 1 , 2 , 1 , 2 , 1 , 2 , 1 , 2 , 1 , 2 , 1 , 2 , 1 , 2 , 1 , 

# END OF TRANSLATION




end ) ; }


    // 20 , int total = n ;
 int total = n ;
 int total = n ;
 int total = n ;
 int total = n ;
 int total = n ;
 int total ; }
    // 20 ) ; }
    // 20 , int total = n ;
    // 2 , int total = n ;
    // 2 , int total = n ;
    // 2 , int total = n ;
    // 2 , int total = n ;
    // 2 , int total = n ; 
    // 2 , int total = n ; 
    // 2 , int total = n ; 
    // 2 , int total = n ; 
    // 2 , int total = n ; 
    // 2 , int total = n ;  // 2 , int total = n ;  // 2 , int total = n ;  // 2 , int total = n ;  // 2 , int total = n ;  // 2 , int total = n ;  // 2 , int total = n ;  // 2 , int total = n ;  // 2 , int total = n ;  // 2 , int total = n ;  // 2 , int total = n ;  // 2 , int total = n ;  // 2 , int total = n ;  // 2 , int total = n ;  // 2 , int total = n ;  // 2 , int total = n ;  // 2 , int total = n ;  // 2 , int total = n ;  // 2 , int total = n ;  // 2 , int total = n ;  // 2 , int total = n ;  // 2 , int total = n ;  // 2 , int total = n ;  // 2 , int total = n ;  // 2 , int total = n ;  // 2 , int total = n ;  // 2 , int total = n ;  // 2 , int total = n ;  // 2 , int total = n ;  // 2 , int total = n ;  // 2 , int total = n ;  // 2 , int total = n ;  // 2 , int total = n ;  // 2 , int total = n ;  // 2 , int total = n ;  // 2 , int total = n ;  // 2 , int total = n ;  // 2 , int total = n ;  // 2 , int total = n ;  // 2 , int total = n ;  // 2 , int total = n ;  // 2 , int total = n ;  // 2 , int total = n ;  // 2 , int total = n ;  // 2 , int total = n ;  // 2 , int total = n ;  // 2 , int total = n ;  // 2 , int total = n ;  // 2 , int total = n ;  // 2 , int total = n ;  // 2 , int total = n ;  // 2 , int total = n ;  // 2 , int total = n ;  // 2 , int total = n ;  // 2 , int total = n ;  // 2 , int total = n ;  // 2 , int total = n ;  // 2 , int total = n ;  // 2 , int total = n ;  // 2 , int total = n ;  // 2 , int total = n ;  // 2 , int total = n ; 

# END OF TRANSLATION






 




    // 10 ) ; }

    // 10 ] ; }
    // 10 ) ; }
    // 10 ; }
    // 10 ) ; }
    // 10 ; }
    // 10 ; }
    // 10 ; }
    // 10 ; }
    // 10 ; }
    // 10 ; }
    // 10 ; }
    // 1 ; 
    // 1 ; 
    // 1 ; 
    // 1 ; 
    // 1 ; 
    // 1 ; 
    // 2 ;  // 2 ;  // 2 ;  // 2 ;  // 2 ;  // 1 ;  // 2 ;  // 1 ;  // 2 ;  // 1 ;  // 2 ;  // 1 ;  // 2 ;  // 1 ;  // 2 ;  // 1 ;  // 2 ;  // 1 ;  // 2 ;  // 1 ;  // 2 ;  // 1 ;  // 2 ;  // 2 ;  // 1 ;  // 2 ;  // 1 ;  // 2 ;  // 2 ;  // 1 ;  // 2 ;  // 2 ;  // 1 ;  // 2 ;  // 1 ;  // 2 ;  // 2 ;  // 1 ;  // 2 ;  // 2 ;  // 1 ;  // 2 ;  // 1 ;  // 2 ;  // 2 ;  // 1 ;  // 2 ;  // 2 ;  // 1 ;  // 2 ;  // 2 ;  // 1 ;  // 2 ;  // 2 ;  // 2 ;  // 1 ;  // 2 ;  // 2 ;  // 1 ;  // 2 ;  // 2 ;  // 1 ;  // 2 ;  // 2 ;  // 2 ;  // 1 ;  // 2 ;  // 2 ;  // 1 ;  // 2 ;  // 2 ;  // 2 ;  // 1 ;  // 2 ;  // 2 ;  // 2 ;  // 1 ;  // 2 ;  // 2 ;  // 2 ;  // 1 ;  // 2 ;  // 2 ;  // 2 ;  // 2 ;  // 1 ;  // 2 ;  // 2 ;  // 2 ;  // 1 ;  // 2 ;  // 2 ;  // 2 ;  // 2 ;  // 2 ;  // 1 ;  // 2 ;  // 2 ;  // 2 ;  // 2 ;  // 2 ;  // 1 ;  // 2 ;  // 2 ;  // 2 ;  // 2 ;  // 2 ;  // 2 ;  // 2 ;  // 1 ;  // 2 ;  // 2 ;  // 2 ;  // 2 ;  // 2 ;  // 2 ;  // 2 ;  // 1 ;  // 2 ;  // 2 ;  // 2 ;  // 2 ;  // 2 ;  // 2 ;  // 2 ;  // 2 ;  // 2 ;  // 2 ;  // 2 ;  // 2

# END OF TRANSLATION




    // 

    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 


# END OF TRANSLATION




 



    // 


 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    //  // 


# END OF TRANSLATION

 int sum += arr [ i ] ; int sum += arr [ i ] ; int sum += arr [ i ] ; int sum += arr [ i ] ; int sum += arr [ i ] ; int sum += arr [ i ] ; int sum += arr [ i ] ; int sum += arr [ i ] ; int sum += arr [ i ] ; int sum += arr [ i ] ; int sum += arr [ i ] ; int sum += arr [ i ] ; int sum += arr [ i ] ; int sum += arr [ i ] ; int sum += arr [ i ] ; int sum += arr [ i ] ; int sum += arr [ i ] ; int sum += arr [ i ] ; int sum += arr [ i ] ; int sum += arr [ i ] ; int sum += arr [ i ] ; int sum += arr [ i ] ; int sum += arr [ i ] ; int sum += arr [ i ] ; int sum += arr [ i ] ; int sum += arr [ i ] ; int sum += arr [ i ] ; int sum += arr [ i ] ; int sum += arr [ i ] ; int sum += arr [ i ] ; int sum += arr [ i ] ; int sum += arr [ i ] ; int sum += arr [ i ] ; int sum += arr [ i ] ; int sum += arr [ i ] ; int sum += arr [ i ] ; int sum += arr [ i ] ; int sum += arr [ i ] ; int sum += arr [ i ] ; int sum += arr [ i ] ; int sum += arr [ i ] ; int sum += arr [ i ] ; int sum += arr [ i ] ; int sum += arr [ i ] ; int sum += arr [ i ] ; int sum += arr [ i ] ; int sum += arr [ i ] ; int sum += arr [ i ] ; int sum += arr [ i ] ; int sum += arr [ i ] ; int sum += arr [ i ] ; int sum += arr [ i ] ; int sum += arr [ i ] ; int sum += arr [ i ] ; int sum += arr [ i ] ; int sum += arr [ i ] ; int sum += arr [ i ] ; int sum += arr [ i ] ; int sum += arr [ i ] ; int sum += arr [ i ] ; int sum += arr [ i ] ; int sum += arr [ i ] ; int sum += arr [ i ] ; int sum += arr [ i ] ; int sum += arr [ i ] ; int sum += arr [ i ] ; int sum += arr [ i ] ; int sum += arr [ i ] ; int sum += arr [ i ] ; int sum += arr [ i ] ; int sum += arr [ i ] ; int sum += arr [ i ] ; int sum += arr [ i ] ; int sum += arr [ i ] ; int sum += arr [ i ] ; int sum += arr [ i ] ; int sum += arr [ i ] ; int sum += arr [ i ] ; int sum += arr [ i ] ; int sum += arr [ i ] ; int sum += arr [ i ] ; int sum += arr [ i ] ; int sum += arr [ i ] ; int sum += arr [ i ] ; int sum += arr [ i ] ; int sum += arr [ i ] ; int sum += arr [ i ] ; int sum += arr [ i ] ; int sum += arr [ i ] ; int sum += arr [ i ] ; int sum += arr [ i ] ; int sum += arr [ i ] ; int sum += arr [ i ] ; int sum += arr [ i ] ; int sum += arr [ i ] ; int sum += arr [ i ] ; int sum += arr [ i ] ; int sum += arr [ i ] ; int sum += arr [ i

# END OF TRANSLATION



   
    int totalItems = totalItems ;
 int totalItems = totalItems ;
int totalItems = totalItems ;
int totalItems = totalItems ;
int totalItems = totalItems ;
int totalItems = totalItems ;
int totalItems = totalItems ;
int totalItems = totalItems ;
int totalItems = totalItems ;
totalItems = totalItems ;
totalItems = totalItems ;
totalItems = totalItems ;
totalItems = totalItems ;
totalItems = totalItems ;
totalItems = totalItems ;
totalItems = totalItems ;
totalItems = totalItems ;
totalItems = totalItems ; totalItems = totalItems ; totalItems = totalItems ; totalItems = totalItems ; totalItems = totalItems ; totalItems = totalItems ; totalItems = totalItems ; totalItems = totalItems ; totalItems = totalItems ; totalItems = totalItems ; totalItems = totalItems ; totalItems = totalItems ; totalItems = totalItems ; totalItems = totalItems ; totalItems = totalItems ; totalItems = totalItems ; totalItems = totalItems ; totalItems = totalItems ; totalItems = totalItems ; totalItems = totalItems ; totalItems = totalItems ; totalItems = totalItems ; totalItems = totalItems ; totalItems = totalItems ; totalItems = totalItems ; totalItems = totalItems ; totalItems = totalItems ; totalItems = totalItems ; totalItems = totalItems ; totalItems = totalItems ; totalItems = totalItems ; totalItems = totalItems ; totalItems = totalItems ; totalItems = totalItems ; totalItems = totalItems ; totalItems = totalItems ; totalItems = totalItems ; totalItems = totalItems ; totalItems = totalItems ; totalItems = totalItems ; totalItems = totalItems ; totalItems = totalItems ; totalItems = totalItems ; totalItems = totalItems ; totalItems = totalItems ; totalItems = totalItems ; totalItems = totalItems ; totalItems = totalItems ; totalItems = totalItems ; totalItems = totalItems ; totalItems = totalItems ; totalItems = totalItems ; totalItems = totalItems ; totalItems = totalItems ; totalItems = totalItems ; totalItems = totalItems ; totalItems = totalItems ; totalItems = totalItems ; totalItems = totalItems ; totalItems = totalItems ; totalItems = totalItems ; totalItems = totalItems ; totalItems = totalItems ; totalItems = totalItems ; totalItems = totalItems ; totalItems = totalItems ; totalItems = totalItems ; totalItems = totalItems ; totalItems = totalItems ; totalItems = totalItems ; totalItems = totalItems ; totalItems = totalItems ; totalItems = totalItems ; totalItems = totalItems ; totalItems = totalItems ; totalItems = totalItems ; totalItems = totalItems ; totalItems = totalItems ; totalItems = totalItems ; totalItems = totalItems ; totalItems = totalItems ; totalItems = totalItems ; totalItems = totalItems ; totalItems = totalItems ; totalItems = totalItems ; totalItems = totalItems ; totalItems = totalItems ; totalItems = totalItems ; totalItems = totalItems ; totalItems = totalItems ; totalItems = totalItems ; totalItems = totalItems ; totalItems = totalItems ; totalItems = totalItems ; totalItems = totalItems ; totalItems = totalItems ; totalItems = totalItems ; totalItems = totalItems ; totalItems = totalItems ; totalItems = totalItems ; totalItems = totalItems ; totalItems = totalItems ; totalItems = totalItems ; totalItems = totalItems ; totalItems = totalItems ; totalItems = totalItems ; totalItems = totalItems ; totalItems = totalItems ; totalItems = totalItems ; totalItems = totalItems ; totalItems = totalItems ; totalItems = totalItems ; totalItems = totalItems ; totalItems = totalItems ; totalItems = totalItems ; totalItems = totalItems ; totalItems = totalItems ; totalItems = totalItems ; totalItems = totalItems ; totalItems = totalItems ; total

# END OF TRANSLATION




 
    int x = 0 ; }
    int x = 0 ; }
    int x = 0 ; }
    int x = 0 ; }
    int x = 0 ; }
    int x = 0 ; }
    int x = 0 ; }
    int x = 0 ; }
    int x = 0 ; }
    int x = 0 ; }
    int x = 0 ; }
    int x = 0 ; }
    int x = 0 ; }
    int x = 0 ; }
    int x = 0 ; }
    int x = 0 ; }    int x = 0 ; }    int x = 0 ; }    int x = 0 ; }    int x = 0 ; }    int x = 0 ; }    int x = 0 ; }    int x = 0 ; }    int x = 0 ; }    int x = 0 ;    int x = 0 ; }    int x = 0 ;    int x = 0 ;    int x = 0 ;    int x = 0 ;    int x = 0 ;    int x = 0 ;    int x = 0 ;    int x = 0 ;    int x = 0 ;    int x = 0 ;    int x = 0 ;    int x = 0 ;    int x = 0 ;    int x = 0 ;    int x = 0 ;    int = 0 ;    int x = 0 ;    int x = 0 ;    int x = 0 ;    int x = 0 ;    int x = 0 ;    int x = 0 ;    int x = 0 ;    int x = 0 ;    int x = 0 ;    int x = 0 ;    int x = 0 ;    int x = 0 ;    int x = 0 ;    int x = 0 ;    int x = 0 ;    int x = 0 ;    int x = 0 ;    int x = 0 ;    int x = 0 ;    int x = 0 ;    int x = 0 ;    int x = 0 ;    int x = 0 ;    int x = 0 ;    int x = 0 ;    int x = 0 ;    int x = 0 ;    int x = 0 ;    int x = 0 ;    int x = 0 ;    int x = 0 ;    int x = 0 ;    int x = 0 ;    int x = 0 ;    int x = 0 ;    int x = 0 ;    int x = 0 ;    int x = 0 ;    int x = 0 ;    int x = 0 ;    int x = 0 ;    int x = 0 ;    int x = 0 ;    int x = 0 ;    int x = 0 ;    int x = 0 ;    int x = 0 ;    int x = 0 ;    int x = 0 ;    int x = 0 ;    int x = 0 ;    int x = 0 ;    int x = 0 ;    int x = 0 ;    int x = 0 ;    int x = 0 ;    int x = 0 ;    int x = 0 ;    int x = 0 ;    int x = 0 ;    int x = 0 ;    int x = 0 ;    int x = 0 ;    int x = 0 ;    int x = 0 ;    int x = 0 ;    int x = 0 ;    int x = 0 ;    int x = 0 ;    int x = 0 ;    int x = 0 ;    int x = 0 ;    int x = 0 ;    int x = 0 ;    int x = 0 ;    int x = 0 ;    int x = 0 ;    int x = 0 ;    int x = 0 ;    int x = 0 ;    int x = 0 ;    int x = 0 ;    int x = 0 ;    int x = 0 ;    int x = 0 ;    int x = 

# END OF TRANSLATION




 

 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
  
 
 
 
 
 
   
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 


# END OF TRANSLATION



 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 10 10 ) 
 10 10 ) 
 10 1 10 1 1 1 1 1 2 0 1 2 0 1 2 0 1 2 0 1 2 0 1 2 0 1 2 0 1 2 0 1 2 0 1 2 0 1 2 0 1 2 0 1 2 0 1 2 0 1 2 0 1 2 0 1 2 0 1 2 0 1 2 0 1 2 0 1 2 0 1 2 0 1 2 0 1 2 0 1 2 0 1 0 1 2 0 1 2 0 1 2 0 1 2 0 1 2 0 1 2 0 1 2 0 1 2 0 1 0 2 0 1 2 0 1 2 0 1 2 0 1 2 0 1 2 0 1 2 0 1 2 0 1 0 1 2 0 1 2 0 1 2 0 1 2 0 1 0 2 0 1 2 0 1 2 0 1 2 0 1 2 0 1 2 0 1 2 0 1 2 0 1 2 0 1 2 0 1 2 0 1 2 0 1 2 0 1 2 0 1 2 0 1 2 0 1 2 0 1 2 0 1 2 0 1 2 0 1 2 0 1 2 0 1 2 0 1 2 0 1 2 0 1 2 0 1 2 0 1 2 0 1 2 0 1 2 0 1 2 0 1 2 0 1 2 0 1 2 0 1 2 0 1 2 0 1 2 0 1 2 0 1 2 0 1 2 0 1 2 0 1 2 0 1 2 0 1 2 0 1 2 0 1 2 0 1 2 0 1 2 0 1 2 0 1 2 0 1 2 0 1 2 0 1 2 0 1 2 0 1 2 0 1 2 0 1 2 0 1 2 0 1 2 0 1 2 0 1 2 0 1 2 0 1 2 0 1 2 0 1 2 0 1 2 0 1 2 0 1 2 0 1 2 0 1 2 0 1 2 0 1 2 0 2 0 1 2 0 1 2 0 1 2 0 1 2 0 1 2 0 2 0 1 2 0 1 2 0 1 2 0 1 2 0 1 2 0 2 0 1 2 0 1

# END OF TRANSLATION




 

    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 


# END OF TRANSLATION




 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //

# END OF TRANSLATION


```



   
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 


# END OF TRANSLATION


```



    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 


# END OF TRANSLATION






 



    // 


    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    //  // 


# END OF TRANSLATION




 


    // if ( n ) {
    // if ( n ) {
    // if ( n ) {
    // if ( n ) {
    // if ( n ) {
    // if ( n ) { return false ; }
    // if ( n ) {
    // if ( n ) {
    // if ( n ) { return false ; }
    // if ( n ) {
    // if ( n ) {
    // if ( n ) {
    // if ( n ) {
    // if ( n ) {
    // if ( n ) {
    // if ( n ) {
    // if ( n ) {
    // if ( n ) {
    // if ( n ) {
    // if ( n ) {
    // if ( n ) {
    // if ( n ) {
    // if ( n ) {
    // if ( n ) {
    // if ( n ) {
    // if ( n ) {
    // if ( n ) {
    // if ( n ) {
    // if ( n ) {
    // if ( n ) {
    // if ( n ) {
    // if ( n ) {
    // if ( n ) {
    // if ( n ) {
    // if ( n ) {
    // if ( n ) {
    // if ( n ) {
    // if ( n ) {
    // if ( n ) {
    // if ( n ) {
    // if ( n ) {
    // if ( n ) {
    // if ( n ) {
    // if ( n ) {
    // if ( n ) {
    // if ( n ) {
    // if ( n ) {
    // if ( n ) {
    // if ( n ) {
    // if ( n ) {
    // if ( n ) {
    // if ( n ) {
    // if ( n ) {
    // if ( n ) {
    // if ( n ) {
    // if ( n ) {
    // if ( n ) {
    // if ( n ) {
    // if ( n ) {
    // if ( n ) {
    // if ( n ) {
    // if ( n ) {
    // if ( n ) {
    // if ( n ) {
    // if ( n ) {
    // if ( n ) {
    // if ( n ) {
    // if ( n ) {
    // if ( n ) {
    // if ( n ) {
    // if ( n ) {
    // if ( n ) {
    // if ( n ) {
    // if ( n ) {
    // if ( n ) {
    // if ( n ) {
    // if ( n ) {
    // if ( n ) {
    // if ( n ) {
    // if ( n ) {
    // if ( n ) {
    // if ( n ) {
    // if ( n ) {
    // if ( n ) {
    // if ( n ) {
    // if ( n ) {
    // if ( n ) {
    // if ( n ) {
    // if ( n ) {
    // if ( n ) {
    // if ( n ) {
    // if ( n ) {
    // if ( n ) {
    // if ( n ) {
    // if ( n ) {
    // if ( n ) {
    // if ( n ) {
    // if ( n ) {
    // if ( n ) {
    // if ( n ) {
    // if ( n ) {
    // if ( n ) {
    // if ( n ) {
    // if (

# END OF TRANSLATION


```



   
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 


# END OF TRANSLATION




 

    // 10 ) {
    // 10 }
    // 10 ) {
    // 10 }
    // 10 }
    // 10 }
    // 10 }
    // 10 }
    // 1 }
    // 1 }
    // 1 }
    // 1 }
    // 1 }
    // 1 }
    // 1 }
    // 1 }
    // 1 }
    // 1 }
    // 1 }
    // 1 }
    // 1 }
    // 1 }
    // 1 }
    // 1 }
    // 1 }    // 1 }
    // 1 }    // 1 }
    // 1 }    // 1 }    // 1 }    // 1 }    // 1 }    // 1 }    // 1 }    // 1 }    // 1 }    // 1 }    // 1 }    // 1 }    // 1 }    // 1 }    // 1 }    // 1 }    // 1 }    // 1 }    // 1 }    // 1 }    // 1 }    // 1 }    // 1 }    // 1 }    // 1 }    // 1 }    // 1 }    // 1 }    // 1 }    // 1 }    // 1 }    // 1 }    // 1 }    // 1 }    // 1 }    // 1 }    // 1 }    // 1 }    // 1 }    // 1 }    // 1 }    // 1 }    // 1 }    // 1 }    // 1 }    // 1 }    // 1 }    // 1 }    // 1 }    // 1 }    // 1 }    // 1 }    // 1 }    // 1 }    // 1 }    // 1 }    // 1 }    // 1 }    // 1 }    // 1 }    // 1 }    // 1    // 1 }    // 1 }    // 1 }    // 1    // 1 }    // 1 }    // 1 }    // 1    // 1 }    // 1 }    // 1 }    // 1    // 1 }    // 1 }    // 1 }    // 1    // 1 }    // 1 }    // 1    // 1 }    // 1    // 1 }    // 1 }    // 1    // 1 }    // 1    // 1 }    // 1    // 1 }    // 1    // 1 }    // 1    // 1 }    // 1    // 1 }    // 1    // 1 }    // 1    // 1 }    // 1    // 1 }    // 1    // 1 }    // 1    // 1 }    // 1    // 1 }    // 1    // 1 }    // 1    // 1 }    // 1    // 1 }    // 1    // 1 }    // 1    // 1 }    // 1    // 1 }    // 1    // 1 }    // 1    // 1 }    // 1    // 1 }    // 1    // 1    // 1 }    // 1    // 1    // 1 }    // 1    // 1    // 1 }    // 1    // 1    // 1 }    // 1    // 1    // 1 }    // 1    // 1    // 1 }    // 1    // 1    // 1    // 

# END OF TRANSLATION



 


    // 
 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 


# END OF TRANSLATION




 
    int x = m ; int x = x ; int x1 = x ; int x1 = x ; int x1 = x ; int = x ; }
    int x1 = x ; int x1 = x ; int x1 = x ; int x1 = x ; int x1 = x ; int x1 = x ; int x1 = x ; int x1 = x ; int x1 = x ; int x1 = x ; int x1 = x ; int x1 = x ; int x1 = x ; int x1 = x ; int x1 = x ; int x1 = x ; int x1 = x ; int x1 = x ; int x1 = x ; int x1 = x ; int x1 = x ; int x1 = x ; int x1 = x ; int x1 = x ; int x1 = x ; int x1 = x ; int x1 = x ; int x1 = x ; int x1 = x ; int x1 = x ; int x1 = x ; int x1 = x ; int x1 = x ; int x1 = x ; int x1 = x ; int x1 = x ; int x1 = x ; int x1 = x ; int x1 = x ; int x1 = x ; int x1 = x ; int x1 = x ; int x1 = x ; int x1 = x ; int x1 = x ; int x1 = x ; int x1 = x ; int x1 = x ; int x1 = x ; int x1 = x ; int x1 = x ; int x1 = x ; int x1 = x ; int x1 = x ; int x1 = x ; int x1 = x ; int x1 = x ; int x1 = x ; int x1 = x ; int x1 = x ; int x1 = x ; int x1 = x ; int x1 = x ; int x1 = x ; int x1 = x ; int x1 = x ; int x1 = x ; int x1 = x ; int x1 = x ; int x1 = x ; int x1 = x ; int x1 = x ; int x1 = x ; int x1 = x ; int x1 = x ; int x1 = x ; int x1 = x ; int x1 = x ; int x1 = x ; int x1 = x ; int x1 = x ; int x1 = x ; int x1 = x ; int x1 = x ; int x1 = x ; int x1 = x ; int x1 = x ; int x1 = x ; int x1 = x ; int x1 = x ; int x1 = x ; int x1 = x ; int x1 = x ; int x1 = x ; int x1 = x ; int x1 = x ; int x1 = x ; int x1 = x ; int x1 = x ; int x1 = x ; int x1 = x ; int x1 = x ; int x1 = x ; int x1 = x ; int x1 = x ; int x1 = x ; int x1 = x ; int x1 = x ; int x1 = x ; int x1 = x ; int x1 = x ; int x1 = x ; int x1 = x ; int x1 = x ; int x1 = x ; int x1 = x ; int x1 = x ; int x1 = x ; int x1 = x ; int x1 = x ; int x1 = x ; int x1 = x ; int x1 = x ; int x1 = x ; int x1 = x ; int x1 = x ; int x1 = x ; int x1 = x ;

# END OF TRANSLATION




 


    if ( n == 1 ) { return ( n == 1 ) { return ( n == 1 ) ; }
 
    if ( n == 1 ) { return ( n == 1 ) ; }
    if ( n == 1 ) { return ( n == 1 ) ; }
    if ( n == 1 ) { return ( n == 1 ) ; }
    if ( n == 1 ) { return ( n == 1 ) ; }
    if ( n == 1 ) { return ( n == 1 ) ; }
    if ( n == 1 ) { return ( n == 1 ) ; }
    if ( n == 1 ) { return ( n == 1 ) ; }
    if ( n == 1 ) { return ( n == 1 ) ; }
    if ( n == 1 ) { return ( n == 1 ) ; }
    if ( n == 1 ) { return ( n == 1 ) ; }
    if ( n == 1 ) { return ( n == 1 ) ; }
    if ( n == 1 ) { return ( n == 1 ) ; }
    if ( n == 1 ) { return ( n == 1 ) ; }
    if ( n == 1 ) { return ( n == 1 ) ; }
    if ( n == 1 ) { return ( n == 1 ) ; }
    if ( n == 1 ) { return ( n == 1 ) ; }
    if ( n == 1 ) { return ( n == 1 ) ; }
    if ( n == 1 ) { return ( n == 1 ) ; }
    if ( n == 1 ) { return ( n == 1 ) { return ( n == 1 ) ; }
    if ( n == 1 ) { return ( n == 1 ) ; }
    if ( n == 1 ) { return ( n == 1 ) ; }
    if ( n == 1 ) { return ( n == 1 ) { return ( n == 1 ) ; }
    if ( n == 1 ) { return ( n == 1 ) ; }
    if ( n == 1 ) { return ( n == 1 ) ; }
    if ( n == 1 ) { return ( n == 1 ) { return ( n == 1 ) ; }
    if ( n == 1 ) { return ( n == 1 ) ; }
    if ( n == 1 ) { return ( n == 1 ) { return ( n == 1 ) ; }
    if ( n == 1 ) { return ( n == 1 ) ; }
    if ( n == 1 ) { return ( n == 1 ) { return ( n == 1 ) ; }
    if ( n == 1 ) { return ( n == 1 ) ; }
    if ( n == 1 ) { return ( n == 1 ) { return ( n == 1 ) ; }
    if ( n == 1 ) { return ( n == 1 ) { return ( n == 1 ) ; }    if ( n == 1 ) { return ( n == 1 ) ; }
    if ( n == 1 ) { return ( n == 1 ) { return ( n == 1 ) ; }
    if ( n == 1 ) { return ( n == 1 ) { return ( n == 1 ) ; }
    if ( n == 1 ) { return ( n == 1 ) { return ( n == 1 ) ; }
    if ( n == 1 ) { return ( n == 1 ) { return ( n == 1 ) ; }
    if ( n == 1 ) { return ( n == 1 ) { return ( n == 1 ) ; }
    if ( n == 1 ) { return ( n == 1 ) { return ( n == 1 ) ; }
    if ( n == 1 ) { return ( n == 1 ) { return ( n == 1 ) ; }
    if ( n == 1 ) { return ( n == 1 ) { return ( n == 1 ) ; }
    if ( n == 1 ) { return ( n == 1 ) { return ( n == 1 ) ; }
    if ( n == 1 )

# END OF TRANSLATION




 
end ( ) ; }
 
 
end ) ; }
 
 
 
 10 ; }
 
 10 ; }
 
 10 ; } ; }
 
 10 ; } ; }
 
 10 ; } ; } ; } ; }
 
 1 ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ;

# END OF TRANSLATION





 

    // 20 ) { return 'd' ) ; }
 
 
 
 
 
 
    // 20 ) ; }
 
 
 
    // 20 
 
 
    // 20 
 
 
 
    // 20 
 
 
    // 2 
    // 2 
    // 2 
    // 2 
    // 2 
    // 2 
    // 2 
    // 2 


# END OF TRANSLATION





    // 

    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    //  //  // 


# END OF TRANSLATION

```



   
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    //  // 


# END OF TRANSLATION





 

    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    //  // 


# END OF TRANSLATION


```



    // sum += numbers . sum ( var sum += numbers ) ; }

    // sum += numbers .abs ( var sum += numbers ) ; }
    // sum += numbers .abs ( var sum += numbers ) ; }
    // sum += numbers .abs ( var sum += numbers ) ; }
    // sum += numbers .abs ( var sum += numbers ) ; }
    // sum += numbers .abs ( var sum += numbers ) ; }
    // sum += numbers ; }
    // sum += numbers ; }
    // sum += numbers ; }
    // sum += numbers ; }    // sum += numbers ; }    // sum += numbers ;    // sum += numbers ; }    // sum += numbers ;    // sum += numbers ; }    // sum += numbers ;    // sum += numbers ;    // sum += numbers ; }    // sum += numbers ;    // sum += numbers ;    // sum += numbers ;    // sum += numbers ;    // sum += numbers ;    // sum += numbers ;    // sum += numbers ;    // sum += numbers ;    // sum += numbers ;    // sum += numbers ;    // sum += numbers ;    // sum += numbers ;    // sum += numbers ;    // sum += numbers ;    // sum += numbers ;    // sum += numbers ;    // sum += numbers ;    // sum += numbers ;    // sum += numbers ;    // sum += numbers ;    // sum += numbers ;    // sum += numbers ;    // sum += numbers ;    // sum += numbers ;    // sum += numbers ;    // sum += numbers ;    // sum += numbers ;    // sum += numbers ;    // sum += numbers ;    // sum += numbers ;    // sum += numbers ;    // sum += numbers ;    // sum += numbers ;    // sum += numbers ;    // sum += numbers ;    // sum += numbers ;    // sum += numbers ;    // sum += numbers ;    // sum += numbers ;    // sum += numbers ;    // sum += numbers ;    // sum += numbers ;    // sum += numbers ;    // sum += numbers ;    // sum += numbers ;    // sum += numbers ;    // sum += numbers ;    // sum += numbers ;    // sum += numbers ;    // sum += numbers ;    // sum += numbers ;    // sum += numbers ;    // sum += numbers ;    // sum += numbers ;    // sum += numbers ;    // sum += numbers ;    // sum += numbers ;    // sum += numbers ;    // sum += numbers ;    // sum += numbers ;    // sum += numbers ;    // sum += numbers ;    // sum += numbers ;    // sum += numbers ;    // sum += numbers ;    // sum += numbers ;    // sum += numbers ;    // sum += numbers ;    // sum += numbers ;    // sum += numbers ;    // sum += numbers ;    // sum += numbers ;    // sum += numbers ;    // sum += numbers ;    // sum += numbers ;    // sum += numbers ;    // sum += numbers ;    // sum += numbers ;    // sum += numbers ;    // sum += numbers ;    // sum += numbers ;    // sum += numbers ;    // sum += numbers ;    // sum += numbers ;    // sum += numbers ;    // sum += numbers ;    // sum += numbers ;    // sum += numbers ;    // sum += numbers ;    // sum += numbers ;    // sum += numbers ;    // sum += numbers ;    // sum += numbers ;    // sum += numbers ;    // sum += numbers ;    // sum += numbers ;    // sum += numbers ;    // sum += numbers ;    // sum += numbers ;    // sum += numbers ;    // sum += numbers ;    // sum += numbers ;    // sum += numbers ;    // sum += numbers ;    // sum += numbers ;    // sum += numbers ;    // sum += numbers ;    // sum +=

# END OF TRANSLATION




   
    // 10 ; }
    // 10 ; }
    // 10 ; }
    // 10 ; 
    // 10 ; 
    // 1 ; 2 ) ;  // 2 ) ;  // 2 ;  // 2 ;  // 2 ;  // 2 ;  // 2 ;  // 1 ;  // 2 ;  // 2 ;  // 3 ;  // 2 ;  // 3 ;  // 1 ;  // 2 ;  // 2 ;  // 1 ;  // 2 ;  // 2 ;  // 3 ;  // 4 ;  // 2 ;  // 4 ;  // 1 ;  // 2 ;  // 2 ;  // 2 ;  // 1 ;  // 2 ;  // 2 ;  // 3 ;  // 2 ;  // 4 ;  // 2 ;  // 2 ;  // 1 ;  // 2 ;  // 2 ;  // 3 ;  // 2 ;  // 4 ;  // 2 ;  // 2 ;  // 2 ;  // 2 ;  // 3 ;  // 4 ;  // 2 ;  // 2 ;  // 2 ;  // 2 ;  // 2 ;  // 2 ;  // 3 ;  // 2 ;  // 4 ;  // 2 ;  // 2 ;  // 2 ;  // 2 ;  // 2 ;  // 3 ;  // 2 ;  // 4 ;  // 2 ;  // 2 ;  // 2 ;  // 2 ;  // 2 ;  // 2 ;  // 2 ;  // 2 ;  // 3 ;  // 2 ;  // 2 ;  // 2 ;  // 2 ;  // 2 ;  // 2 ;  // 2 ;  // 2 ;  // 2 ;  // 2 ;  // 3 ;  // 2 ;  // 2 ;  // 2 ;  // 2 ;  // 2 ;  // 2 ;  // 2 ;  // 2 ;  // 2 ;  // 2 ;  // 2 ;  // 2 ;  // 3 ;  // 2 ;  // 2 ;  // 2 ;  // 2 ;  // 2 ;  // 2 ;  // 2 ;  // 2 ;  // 2 ;  // 2 ;  // 2 ;  // 2 ;  // 2 ;  // 2 ;  // 2 ;  // 2 ;  // 2 ;  // 2 ;  // 2 ;  // 2 ;  // 2 ;  // 2 ;  // 2 ;  // 2 ;  // 2 ;  // 2 ;  // 2 ;  // 2 ;  // 2 ;  // 2 ;  // 2 ;  // 2 ;  // 2 ;  // 2 ;  // 2 ;  // 2 ;  // 2 ;  // 2 ;  // 2 ;  // 2 ;  // 2 ;  // 2 ;  // 2 ;  // 2 ;  // 2 ;  // 2 ;  // 2 ;  // 2 ;  // 2 ;  // 2 ;  // 2 ;  // 2 ;  // 2 ;  // 2

# END OF TRANSLATION




 


    // sum += n ;
 
    // sum += n ;
 
    // sum += n ;
    // sum += n ;
    // sum += n ;
    // sum += n ;
    // sum += n ;
    // sum += n ;
    // sum += n ;
    // sum += n ;    // sum += n ;    // sum += n ;    // sum += n ;    // sum += n ;    // sum += n ;    // sum += n ;    // sum += n ;    // sum += n ;    // sum += n ;    // sum += n ;    // sum += n ;    // sum += n ;    // sum += n ;    // sum += n ;    // sum += n ;    // sum += n ;    // sum += n ;    // sum += n ;    // sum += n ;    // sum += n ;    // sum += n ;    // sum += n ;    // sum += n ;    // sum += n ;    // sum += n ;    // sum += n ;    // sum += n ;    // sum += n ;    // sum += n ;    // sum += n ;    // sum += n ;    // sum += n ;    // sum += n ;    // sum += n ;    // sum += n ;    // sum += n ;    // sum += n ;    // sum += n ;    // sum += n ;    // sum += n ;    // sum += n ;    // sum += n ;    // sum += n ;    // sum += n ;    // sum += n ;    // sum += n ;    // sum += n ;    // sum += n ;    // sum += n ;    // sum += n ;    // sum += n ;    // sum += n ;    // sum += n ;    // sum += n ;    // sum += n ;    // sum += n ;    // sum += n ;    // sum += n ;    // sum += n ;    // sum += n ;    // sum += n ;    // sum += n ;    // sum += n ;    // sum += n ;    // sum += n ;    // sum += n ;    // sum += n ;    // sum += n ;    // sum += n ;    // sum += n ;    // sum += n ;    // sum += n ;    // sum += n ;    // sum += n ;    // sum += n ;    // sum += n ;    // sum += n ;    // sum += n ;    // sum += n ;    // sum += n ;    // sum += n ;    // sum += n ;    // sum += n ;    // sum += n ;    // sum += n ;    // sum += n ;    // sum += n ;    // sum += n ;    // sum += n ;    // sum += n ;    // sum += n ;    // sum += n ;    // sum += n ;    // sum += n ;    // sum += n ;    // sum += n ;    // sum += n ;    // sum += n ;    // sum += n ;    // sum += n ;    // sum += n ;    // sum += n ;    // sum += n ;    // sum += n ;    // sum += n ;    // sum += n ;    // sum += n ;    // sum += n ;    // sum += n ;    // sum += n ;    // sum += n ;    // sum += n ;    // sum += n ;    // sum += n ;    // sum += n ;    // sum += n ;    // sum += n ;    // sum += n ;    // sum += n ;    // sum += n ;    // sum += n ;    // sum += n ;    // sum += n ;    // sum += n ;    // sum += n ;    // sum += n ;    // sum += n ;    // sum += n ;    // sum += n ;    // sum +=

# END OF TRANSLATION





   
    {
    String > ( ) ;
    }
    {
    String > ( ) ;
    }
    {
    String > ( ) ;
    {
    String > ( ) ;    }
    {
    String > ( ) ;    }
    {
    String > ( ) ;    }
    {
    String > ( ) ;    }
    {
    String >    }
    {
    String >    String >    }    {
    String >    }    {
    String >    String >    {
    String >    }    {
    String >    }    {
    String >    }    {
    String >    }    {
    String >    }    {
    String >    }    {
    String >    }    {
    String >    }    {
    String >    }    {
    String >    }    {
    String >    }    {
    String >    }    {    String >    }    {    String >    }    {    String >    }    {    String >    }    {    String >    }    {    String >    }    {    String >    }    {    String >    }    {    String >    }    {    String >    }    {    String >    }    {    String >    }    {    String >    }    {    String >    }    {    String >    }    {    String >    }    {    String >    }    {    String >    }    {    String >    }    {    String >    }    {    String >    }    {    String >    }    {    String >    }    {    String >    }    {    String >    }    {    String >    }    {    String >    }    {    String >    }    {    String >    }    {    String >    }    {    String >    }    {    String >    }    {    String >    }    {    String >    }    {    String >    }    {    String >    }    {    String >    }    {    String >    }    {    String >    }    {    String >    }    {    String >    }    {    String >    }    {    String >    }    {    String >    }    {    String >    }    {    String >    }    {    String >    }    {    String >    }    {    String >    }    {    String >    }    {    String >    }    {    String >    }    {    String >    }    {    String >    }    {    String >    }    {    String >    }    {    String >    }    {    String >    }    {    String >    }    {    String >    }    {    String >    }    {    String >    }    {    String >    }    {    String >    }    {    String >    }    {    String >    }    {    String >    }    {    String >    }    {    String >    }    {    String >    }    {    String >    }    {    String >    }    {    String >    }    {    String >    }    {    String >    }    {    String >    }    {    String >    }    {    String >    }    {    String >    }    {    String >    }    {    String >    }    {    String >    }    {    String >    }    {    String >    }    {    String >    }    {    String >    }    {    String >    }    {    String >    }    {    String >    }    {    String >    }   

# END OF TRANSLATION





   
    .equals ( ) {
    .equals ( ) ; }
    if ( current .equals ( i ) {
    .equals ( ) {
    .equals ( ) ; }
    }
    if ( current .equals ( i ) {
    .equals ( ) {
    .equals ( ) ; }
    if ( current .equals ( i ) {
    .equals ( ) {
    .equals ( ) ; }
    if ( current .equals ( i ) {
    .equals ( ) {
    .equals ( ) ; }
    if ( i ) {
    .equals ( ) {
    .equals ( ) ; }    if ( current .equals ( i ) {
    .equals ( ) {
    .equals ( ) ; }    if ( i ) {
    .equals ( ) {    .equals ( ) {    .equals ( ) ; }    if ( i ) {    .equals ( ) {    .equals ( ) {    .equals ( ) ; }    if ( current .equals ( ) {    .equals ( ) {    .equals ( ) ; }    if ( current .equals ( ) {    .equals ( ) {    .equals ( ) {    .equals ( ) ; }    if ( current .equals ( ) {    .equals ( ) {    .equals ( ) {    .equals ( ) ; }    if ( current .equals ( ) {    .equals ( ) {    .equals ( ) {    .equals ( ) ; }    if ( current .equals ( ) {    .equals ( ) {    .equals ( ) {    .equals ( ) ; }    if ( current .equals ( ) {    .equals ( ) {    .equals ( ) {    .equals ( ) ; }    if ( current .equals ( ) {    .equals ( ) {    .equals ( ) {    .equals ( ) {    .equals ( ) ; }    if ( current .equals ( ) {    .equals ( ) {    .equals ( ) {    .equals ( ) {    .equals ( ) ; }    if ( current .equals ( ) {    .equals ( ) {    .equals ( ) {    .equals ( ) {    .equals ( ) {    .equals ( ) ; }    if ( current .equals ( ) {    .equals ( ) {    .equals ( ) {    .equals ( ) {    .equals ( ) {    .equals ( ) ; }    if ( current .equals ( ) {    .equals ( ) {    .equals ( ) {    .equals ( ) {    .equals ( ) {    .equals ( ) {    .equals ( ) ;    .equals ( ) {    .equals ( ) {    .equals ( ) {    .equals ( ) ;    .equals ( ) {    .equals ( ) {    .equals ( ) ;    .equals ( ) {    .equals ( ) {    .equals ( ) ;    .equals ( ) {    .equals ( ) {    .equals ( ) ;    .equals ( ) {    .equals ( ) {    .equals ( ) ;    .equals ( ) {    .equals ( ) ;    .equals ( ) {    .equals ( ) {    .equals ( ) ;    .equals ( ) {    .equals ( ) {    .equals ( ) ;    .equals ( )

# END OF TRANSLATION

```python

   
   
   
   
    }
   
    }
   
    }
    }
    }
    }
    }
    }
    }
    }
    }
    }
    }
    }
    }
    }
    }
    }
    }
    }
    }
    }
    }
    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }

# END OF TRANSLATION





 

    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 


# END OF TRANSLATION






   

    StringBuilder ( var builder ) {
    StringBuilder ( var builder ) {
    StringBuilder ( var builder ) ; }
    StringBuilder ( var builder ) {
    StringBuilder ( var builder ) ; }
    StringBuilder ( var builder ) {
    StringBuilder ( var builder ) ; }
    StringBuilder ( var builder ) {
    StringBuilder ( var builder ) {
    StringBuilder ( var builder ) ; }
    StringBuilder ( var builder ) {
    StringBuilder ( var builder ) {
    StringBuilder ( var builder ) {
    StringBuilder ( var builder ) ; }
    StringBuilder ( var builder ) {
    StringBuilder ( var builder ) {
    StringBuilder ( var builder ) {
    StringBuilder ( var builder ) {
    StringBuilder ( var builder ) ; }
    StringBuilder ( var builder ) {
    StringBuilder ( var builder ) {
    StringBuilder ( var builder ) {
    StringBuilder ( var builder ) {
    StringBuilder ( var builder ) {
    StringBuilder ( var builder ) {
    StringBuilder ( var builder ) {
    StringBuilder ( var builder ) {    StringBuilder ) {    StringBuilder ( var builder ) {    StringBuilder ( var builder ) {    StringBuilder ) {    StringBuilder ( var builder ) {    StringBuilder ( var builder ) {    StringBuilder ) {    StringBuilder ( var builder ) {    StringBuilder ( var builder ) {    StringBuilder ( var builder ) {    StringBuilder ) {    StringBuilder ( var builder ) {    StringBuilder ( var builder ) {    StringBuilder ( var builder ) {    StringBuilder ) {    StringBuilder ( var builder ) {    StringBuilder ) {    StringBuilder ( var builder ) {    StringBuilder ( var builder ) {    StringBuilder ) {    StringBuilder ( var builder ) {    StringBuilder ( var builder ) {    StringBuilder ) {    StringBuilder ( var builder ) {    StringBuilder ( var builder ) {    StringBuilder ) {    StringBuilder ( var builder ) {    StringBuilder ) {    StringBuilder ( var builder ) {    StringBuilder ) {    StringBuilder ( var builder ) {    StringBuilder ) {    StringBuilder ( var builder ) {    StringBuilder ) {    StringBuilder ( var builder ) {    StringBuilder ) {    StringBuilder ( var builder ) {    StringBuilder ) {    StringBuilder ( var builder ) {    StringBuilder ) {    StringBuilder ( var builder ) {    StringBuilder ) {    StringBuilder ( var builder ) {    StringBuilder ) {    StringBuilder ( var builder ) {    StringBuilder ) {    StringBuilder ( var builder ) {    StringBuilder ) {    StringBuilder ( var builder ) {    StringBuilder ) {    StringBuilder ( var builder ) {    StringBuilder ) {    StringBuilder ( var builder ) {    StringBuilder ) {    StringBuilder ( var builder ) {    StringBuilder ) {    StringBuilder ( var builder ) {    StringBuilder ) {    StringBuilder ( var builder ) {    StringBuilder ) {    StringBuilder ( var builder ) {    StringBuilder ) {    StringBuilder ( var builder ) {    StringBuilder ) {    StringBuilder ( var builder ) {    StringBuilder ) {    StringBuilder ( var builder ) {    StringBuilder ) {    StringBuilder ( var builder ) {    StringBuilder ) {    StringBuilder ( var builder ) {    StringBuilder ) {    StringBuilder ( var builder ) {    StringBuilder ) {    StringBuilder ( var builder ) {    StringBuilder ) {    StringBuilder ( var builder ) {    StringBuilder ) {    StringBuilder ( var builder ) {    StringBuilder ) {    StringBuilder ( var builder ) {    StringBuilder ) {    StringBuilder ( var builder ) {    StringBuilder ) {    StringBuilder ( var builder ) {    StringBuilder ) {    StringBuilder ( var builder ) {    StringBuilder ) {    StringBuilder ( var builder ) {    StringBuilder ) {    StringBuilder ( var builder ) {    StringBuilder ) {    StringBuilder ( var builder )

# END OF TRANSLATION





 


    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 


# END OF TRANSLATION




 




 

    // 2 ) ; }
 
    // 2 ) ; }
    // 2 ) ; }
    // 2 ) ; }
    // 2 ) ; }
    // 2 ) ; }
    // 2 ) ; }
    // 2 ) ; }
    // 2 ) ; }
    // 2 ) ; }
    // 2 ) ; }
    // 2 ) ; }
    // 2 ) ; }
    // 2 ) ; }
    // 2 ) ; }
    // 2 ) ; }
    // 2 ) ; }
    // 2 ) ; }
    // 2 ) ; }
    // 2 ) ; }
    // 2 ) ; }
    // 2 ) ; }
    // 2 ) ; }
    // 2 ) ; }
    // 2 ) ; }
    // 2 ) ; }
    // 2 ) ; }
    // 2 ) ; }
    // 2 ) ; }
    // 2 ) ; }
    // 2 ) ; }
    // 2 ) ; }
    // 2 ) ; }
    // 2 ) ; }
    // 2 ) ; }
    // 2 ) ; }
    // 2 ) ; }
    // 2 ) ; }
    // 2 ) ; }
    // 2 ) ; }
    // 2 ) ; }
    // 2 ) ; }
    // 2 ) ; } ;    // 2 ) ; }
    // 2 ) ; }
    // 2 ) ; }
    // 2 ) ; }
    // 2 ) ; }
    // 2 ) ; }
    // 2 ) ; }
    // 2 ) ;    // 2 ) ; }
    // 2 ) ; }
    // 2 ) ; }
    // 2 ) ;    // 2 ) ; }
    // 2 ) ;    // 2 ) ; }
    // 2 ) ;    // 2 ) ; }
    // 2 ) ;    // 2 ) ; }
    // 2 ) ;    // 2 ) ;    // 2 ) ; }
    // 2 ) ;    // 2 ) ; }
    // 2 ) ;    // 2 ) ;    // 2 ) ;    // 2 ) ; }
    // 2 ) ;    // 2 ) ;    // 2 ) ;    // 2 ) ;    // 2 ) ; }
    // 2 ) ;    // 2 ) ;    // 2 ) ;    // 2 ) ;    // 2 ) ;    // 2 ) ;    // 2 ) ;    // 2 ) ;    // 2 ) ;    // 2 ) ;    // 2 ) ;    // 2 ) ;    // 2 ) ;    // 2 ) ;    // 2 ) ;    // 2 ) ;    // 2 ) ;    // 2 ) ;    // 2 ) ;    // 2 ) ;    // 2 ) ;    // 2 ) ;    // 2 ) ;    // 2 ) ;    // 2 ) ;    // 2 ) ;    // 2 ) ;    // 2 ) ;   

# END OF TRANSLATION







    // 

    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    //  // 
    //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //

# END OF TRANSLATION



 

   
 
    ( int ) {
    return ( int ) ;
    }
    ( int ) ;
    }
    ( int ) ;
    }
    ( int ) ;
    ( int ) ;
    }
    ( int ) ;    }
    ( int ) ;    }
    ( int ) ;    }
    ( int ) ;    }
    ( int ) ;    }
    ( int ) ;    }
    ( int ) ;    }
    ( int ) ;    }    ( int ) ;    }    ( int ) ;    }    ( int ) ;    }    ( int ) ;    }    ( int ) ;    }    ( int ) ;    }    ( int ) ;    }    ( int ) ;    }    ( int ) ;    }    ( int ) ;    }    ( int ) ;    }    ( int ) ;    }    ( int ) ;    }    ( int ) ;    }    ( int ) ;    }    ( int ) ;    }    ( int ) ;    }    ( int ) ;    }    ( int ) ;    }    ( int ) ;    }    ( int ) ;    }    ( int ) ;    }    ( int ) ;    }    ( int ) ;    }    ( int ) ;    }    ( int ) ;    }    ( int ) ;    }    ( int ) ;    }    ( int ) ;    }    ( int ) ;    }    ( int ) ;    }    ( int ) ;    }    ( int ) ;    }    ( int ) ;    }    ( int ) ;    }    ( int ) ;    }    ( int ) ;    }    ( int ) ;    }    ( int ) ;    }    ( int ) ;    }    ( int ) ;    }    ( int ) ;    }    ( int ) ;    }    ( int ) ;    }    ( int ) ;    }    ( int ) ;    }    ( int ) ;    }    ( int ) ;    }    ( int ) ;    }    ( int ) ;    }    ( int ) ;    }    ( int ) ;    }    ( int ) ;    }    ( int ) ;    }    ( int ) ;    }    ( int ) ;    }    ( int ) ;    }    ( int ) ;    }    ( int ) ;    }    ( int ) ;    }    ( int ) ;    }    ( int ) ;    }    ( int ) ;    }    ( int ) ;    }    ( int ) ;    }    ( int ) ;    }    ( int ) ;    }    ( int ) ;    }    ( int ) ;    }    ( int ) ;    }    ( int ) ;    }    ( int ) ;    }    ( int ) ;    }    ( int ) ;    }    ( int ) ;    }    ( int ) ;    }    ( int ) ;    }    ( int ) ;    }    ( int ) ;    }    ( int ) ;    }    ( int ) ;    }    ( int ) ;    }    ( int ) ;    }    ( int ) ;    }    ( int ) ;    }    ( int ) ;    }    ( int ) ;    }    ( int ) ;    }    ( int ) ;    }    ( int ) ;    }    ( int ) ;    }    ( int ) ;    }    ( int ) ;    }    int ) ;    }    ( int ) ;    }    ( int ) ;    }    ( int ) ;    }    int ) ;    }    ( int ) ;    }    ( int ) ;    }    ( int ) ;    }    ( int ) ;    }    ( int ) ;    }    ( int ) ;    }    ( int ) ;    }    ( int ) ;    }    ( int ) ;    }    ( int ) ;    }    ( int ) ;    }    ( int ) ;    }    ( int )

# END OF TRANSLATION





 

    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //

# END OF TRANSLATION




 

    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    //  // 


# END OF TRANSLATION





 




   
    StringBuilder ( ) ;
    }
   
    StringBuilder ( ) ;
    }
    StringBuilder ( ) ;
    }
    StringBuilder ( ) ;
    }
    StringBuilder ( ) ;
    }
    StringBuilder ( ) ;
    }
    StringBuilder ( ) ;
    }
    StringBuilder ( ) ;    }
    StringBuilder ( ) ;    }
    StringBuilder ( ) ;    }
    StringBuilder ( ) ;    }
    StringBuilder ( ) ;    }
    StringBuilder ( ) ;    }
    StringBuilder ( ) ;    }
    StringBuilder ( ) ;    }
    StringBuilder ( ) ;    }
    StringBuilder ( ) ;    }
    StringBuilder ( ) ;    }
    StringBuilder ( ) ;    }    StringBuilder ( ) ;    }    StringBuilder ( ) ;    }
    StringBuilder ( ) ;    }    StringBuilder ( ) ;    }    StringBuilder ( ) ;    }    StringBuilder ( ) ;    }    StringBuilder ( ) ;    }    StringBuilder ( ) ;    }    }    StringBuilder ( ) ;    }    StringBuilder ( ) ;    }    StringBuilder ( ) ;    }    }    StringBuilder ( ) ;    }    }    StringBuilder ( ) ;    }    StringBuilder ( ) ;    }    }    StringBuilder ( ) ;    }    StringBuilder ( ) ;    }    }    StringBuilder ( ) ;    }    }    StringBuilder ( ) ;    }    }    StringBuilder ( ) ;    }    StringBuilder ( ) ;    }    }    StringBuilder ( ) ;    }    }    StringBuilder ( ) ;    }    }    StringBuilder ( )    {
    StringBuilder ( ) ;    }    }    StringBuilder ( )    {
    StringBuilder ( ) ;    }    }    StringBuilder ( )    {
    StringBuilder ( ) ;    }    }    StringBuilder ( )    {
    }    StringBuilder ( )    {
    }    StringBuilder ( )    }    StringBuilder ( )    {
    }    StringBuilder ( )    }    StringBuilder ( )    {
    }    StringBuilder ( )    }    StringBuilder ( )    {
    }    StringBuilder ( )    }    StringBuilder ( )    {
    }    StringBuilder ( )    }    StringBuilder ( )    {
    }    StringBuilder ( )    }    StringBuilder ( )    {
    }    StringBuilder ( )    }    StringBuilder ( )    {
    }    StringBuilder ( )    }    StringBuilder ( )    {
    }    StringBuilder ( )    }    StringBuilder ( )    {
    }    StringBuilder ( )    }    StringBuilder ( )    }    StringBuilder ( )    {
    }    StringBuilder ( )    }    StringBuilder ( )    {
    }    StringBuilder ( )    }    StringBuilder ( )    {
    }    StringBuilder ( )    }    StringBuilder ( )    {
    }    StringBuilder ( )    }    StringBuilder ( )    {
    }    StringBuilder ( )    }    StringBuilder ( )    {
    }    StringBuilder ( )    }    StringBuilder ( )    {
    }    StringBuilder ( )    {
    }    StringBuilder ( )    }    StringBuilder ( )    {
    }    StringBuilder ( )    }    StringBuilder ( )    {
    }    StringBuilder ( )    }    StringBuilder ( )    {
    }    StringBuilder ( )    {
    }    StringBuilder ( )    }    StringBuilder ( )    {
    }    StringBuilder ( )    {
    }    StringBuilder ( )    }    StringBuilder ( )    {
    }    StringBuilder ( )    {


# END OF TRANSLATION





 

    . get ( lambda ( lambda ) { lambda ( lambda ) ; }
    .get ( lambda ) ; }
    .get ( lambda ) ; }
    .get ( lambda ) ; }
    .get ( lambda ) ; }
    .get ( lambda ) ; }
    .get ( lambda ) ; }
    .get ( lambda ) ; }
    .get ( lambda ) ; }
    .get ( lambda ) ; }
    .get ( lambda ) ; }
    .get ( lambda ) ; }
    .get ( lambda ) ; }
    .get ( lambda ) ; }    .get ( lambda ) ; }    .get ( lambda ) ; }    .get ( lambda ) ; }    .get ( lambda ) ; }    .get ( lambda ) ; }    .get ( lambda ) ; }    .get ( lambda ) ; }    .get ( lambda ) ; }    .get ( lambda ) ; }    .get ( lambda ) ; }    .get ( lambda ) ; }    .get ( lambda ) ; }    .get ( lambda ) ; }    .get ( lambda ) ; }    .get ( lambda ) ; }    .get ( lambda ) ; }    .get ( lambda ) ; }    .get ( lambda ) ; }    .get ( lambda ) ; }    .get ( lambda ) ; }    .get ( lambda ) ; }    .get ( lambda ) ; }    .get ( lambda ) ; }    .get ( lambda ) ; }    .get ( lambda ) ; }    .get ( lambda ) ; }    .get ( lambda ) ; }    .get ( lambda ) ; }    .get ( lambda ) ; }    .get ( lambda ) ; }    .get ( lambda ) ; }    .get ( lambda ) ; }    .get ( lambda ) ; }    .get ( lambda ) ; }    .get ( lambda ) ; }    .get ( lambda ) ; }    .get ( lambda ) ; }    .get ( lambda ) ; }    .get ( lambda ) ; }    .get ( lambda ) ; }    .get ( lambda ) ; }    .get ( lambda ) ; }    .get ( lambda ) ; }    .get ( lambda ) ; }    .get ( lambda ) ; }    .get ( lambda ) ; }    .get ( lambda ) ; }    .get ( lambda ) ; }    .get ( lambda ) ; }    .get ( lambda ) ; }    .get ( lambda ) ; }    .get ( lambda ) ; }    .get ( lambda ) ; }    .get ( lambda ) ; }    .get ( lambda ) ; }    .get ( lambda ) ; }    .get ( lambda ) ; }    .get ( lambda ) ; }    .get ( lambda ) ; }    .get ( lambda ) ; }    .get ( lambda ) ; }    .get ( lambda ) ; }    .get ( lambda ) ; }    .get ( lambda ) ; }    .get ( lambda ) ; }    .get ( lambda ) ; }    .get ( lambda ) ; }    .get ( lambda ) ; }    .get ( lambda ) ; }    .get ( lambda ) ; }    .get ( lambda ) ; }    .get ( lambda ) ; }    .get ( lambda ) ; }    .get ( lambda ) ;    .get ( lambda ) ; }   

# END OF TRANSLATION






 





    StringBuilder ( char ) ;
    }

   
    StringBuilder ( char ) ;
    }
    StringBuilder ( char ) ;
    }
    StringBuilder ( char ) ;
    }
    StringBuilder ( char ) ;
    }
    StringBuilder ( char ) ;
    }
    StringBuilder ( char ) {
    StringBuilder ( char ) ;    }
    StringBuilder ( char ) ;    }
    StringBuilder ( char ) ;    }
    StringBuilder ( char ) ;    }
    StringBuilder ( char ) ;    }
    StringBuilder ( char ) ;    }
    StringBuilder ( char ) ;    }
    StringBuilder ( char ) ;    }
    StringBuilder ( char ) ;    }
    StringBuilder ( char ) ;    }
    StringBuilder ( char ) ;    }
    StringBuilder ( char ) ;    }
    StringBuilder ( char ) ;    }
    StringBuilder ( char ) ;    }
    StringBuilder ( char ) ;    }
    StringBuilder ( char ) ;    }
    StringBuilder ( char ) ;    }
    StringBuilder ( char ) ;    }
    StringBuilder ( char ) ;    }
    StringBuilder ( char ) ;    }
    StringBuilder ( char ) ;    }
    StringBuilder ( char ) ;    }    }
    StringBuilder ( char ) ;    }    StringBuilder ( char ) ;    }    StringBuilder ( char ) ;    }    StringBuilder ( char ) ;    }    }    StringBuilder ( char ) ;    }    StringBuilder ( char ) ;    }    StringBuilder ( char ) ;    }    StringBuilder ( char ) ;    }    }    StringBuilder ( char ) ;    }    StringBuilder ( char ) ;    }    StringBuilder ( char ) ;    }    }    StringBuilder ( char ) ;    }    StringBuilder ( char ) ;    }    }    StringBuilder ( char ) ;    }    }    StringBuilder ( char ) ;    }    StringBuilder ( char ) ;    }    }    StringBuilder ( char ) ;    }    }    StringBuilder ( char ) ;    }    StringBuilder ( char ) ;    }    }    StringBuilder ( char )    {
    StringBuilder ( char ) ;    }    }    StringBuilder ( char ) ;    }    }    StringBuilder ( char ) ;    }    }    StringBuilder ( char )    {
    StringBuilder ( char ) ;    }    }    StringBuilder ( char ) ;    }    }    StringBuilder ( char )    {
    StringBuilder ( char ) ;    }    }    StringBuilder ( char )    {
    StringBuilder ( char ) ;    }    }    StringBuilder ( char )    {
    StringBuilder ( char ) ;    }    }    StringBuilder ( char )    {
    StringBuilder ( char ) ;    }    }    StringBuilder ( char )    {
    }    StringBuilder ( char )    }    StringBuilder ( char )    {
    StringBuilder ( char )    }    StringBuilder ( char )    }    StringBuilder ( char )    {
    StringBuilder ( char )    }    StringBuilder ( char )    }    StringBuilder ( char )    {
    StringBuilder ( char )    }    StringBuilder ( char )    }    StringBuilder ( char )    {
    StringBuilder )    }    StringBuilder ( char )    }    StringBuilder ( char )    }    StringBuilder ( char )    {
    StringBuilder ( char )    }    StringBuilder ( char )    }    StringBuilder ( char )    {
    StringBuilder ( char )    }    StringBuilder ( char )    {
    }    StringBuilder ( char )    }    StringBuilder ( char

# END OF TRANSLATION




   
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 


# END OF TRANSLATION





 


    // if ( b == ' ) {
    // if ( b == ' ) {
    // if ( b == ' ) {
    // if ( b == ' ) {
    // if ( b == ' ) {
    // if ( b == ' ) {
    // if ( b == ' ) {
    // if ( b == ' ) {
    // if ( b == ' ) {
    // if ( b == ' ) {
    // if ( b == ' ) {
    // if ( b == ' ) {
    // if ( b == ' ) {
    // if ( b == ' ) {
    // if ( b == ' ) {
    // if ( b == ' ) {
    // if ( b == ' ) {
    // if ( b == ' ) {
    // if ( b == ' ) {
    // if ( b == ' ) {
    // if ( b == ' ) {
    // if ( b == ' ) {
    // if ( b == ' ) {
    // if ( b == ' ) {
    // if ( b == ' ) {
    // if ( b == ' ) {
    // if ( b == ' ) {
    // if ( b == ' ) {
    // if ( b == ' ) {
    // if ( b == ' ) {
    // if ( b == ' ) {
    // if ( b == ' ) {
    // if ( b == ' ) {
    // if ( b == ' ) {
    // if ( b == ' ) {
    // if ( b == ' ) {
    // if ( b == ' ) {
    // if ( b == ' ) {
    // if ( b == ' ) {
    // if ( b == ' ) {
    // if ( b == ' ) {
    // if ( b == ' ) {
    // if ( b == ' ) {
    // if ( b == ' ) {
    // if ( b == ' ) {
    // if ( b == ' ) {
    // if ( b == ' ) {
    // if ( b == ' ) {
    // if ( b == ' ) {
    // if ( b == ' ) {
    // if ( b == ' ) {
    // if ( b == ' ) {
    // if ( b == ' ) {
    // if ( b == ' ) {
    // if ( b == ' ) {
    // if ( b == ' ) {
    // if ( b == ' ) {
    // if ( b == ' ) {
    // if ( b == ' ) {
    // if ( b == ' ) {
    // if ( b == ' ) {
    // if ( b == ' ) {
    // if ( b == ' ) {
    // if ( b == ' ) {
    // if ( b == ' ) {
    // if ( b == ' ) {
    // if ( b == ' ) {
    // if ( b == ' ) {
    // if ( b == ' ) {
    // if ( b == ' ) {
    // if ( b == ' ) {
    // if ( b == ' ) {
    // if ( b == ' ) {
    // if ( b == ' ) {
    // if ( b == ' ) {
    // if ( b == ' ) {
    // if ( b == ' ) {
    // if ( b == ' ) {
    // if ( b == ' ) {
    // if ( b == ' ) {
    // if ( b == ' ) {
    // if ( b == ' ) {
    // if ( b == ' ) {
    // if

# END OF TRANSLATION



 



 

   = 0 ; }
    // 10 ; }
    // 10 ; }
    // 10 ; }
    // 10 ; }
    // 1 ; }
    // 1 ; }
    // 1 ; }
    // 1 ; 
    // 2 ; 
    // 2 ; 
    // 2 ; 
    // 2 ;  // 2 ; 
    // 2 ;  // 1 ;  // 2 ;  // 2 ;  // 1 ;  // 2 ;  // 2 ;  // 1 ;  // 2 ;  // 2 ;  // 2 ;  // 1 ;  // 2 ;  // 2 ;  // 3 ;  // 2 ;  // 3 ;  // 2 ;  // 1 ;  // 2 ;  // 2 ;  // 2 ;  // 1 ;  // 2 ;  // 2 ;  // 3 ;  // 2 ;  // 2 ;  // 1 ;  // 2 ;  // 2 ;  // 2 ;  // 3 ;  // 2 ;  // 2 ;  // 2 ;  // 3 ;  // 2 ;  // 4 ;  // 2 ;  // 2 ;  // 2 ;  // 2 ;  // 2 ;  // 2 ;  // 2 ;  // 3 ;  // 2 ;  // 2 ;  // 2 ;  // 2 ;  // 2 ;  // 2 ;  // 3 ;  // 2 ;  // 2 ;  // 2 ;  // 2 ;  // 2 ;  // 2 ;  // 2 ;  // 2 ;  // 2 ;  // 2 ;  // 2 ;  // 2 ;  // 3 ;  // 2 ;  // 2 ;  // 2 ;  // 2 ;  // 2 ;  // 2 ;  // 2 ;  // 2 ;  // 2 ;  // 2 ;  // 2 ;  // 2 ;  // 2 ;  // 2 ;  // 2 ;  // 2 ;  // 2 ;  // 2 ;  // 2 ;  // 2 ;  // 2 ;  // 2 ;  // 2 ;  // 2 ;  // 2 ;  // 2 ;  // 2 ;  // 2 ;  // 2 ;  // 2 ;  // 2 ;  // 2 ;  // 2 ;  // 2 ;  // 2 ;  // 2 ;  // 2 ;  // 2 ;  // 2 ;  // 2 ;  // 2 ;  // 2 ;  // 2 ;  // 2 ;  // 2 ;  // 2 ;  // 2 ;  // 2 ;  // 2 ;  // 2 ;  // 2 ;  // 2 ;  // 2 ;  // 2 ;  // 2 ;  // 2 ;  // 2 ;  // 2 ;  // 2 ;  // 2 ;  // 2 ;  // 2 ;  // 2 ;  // 2 ;  // 2 ;  // 2 ;  // 2 ;  // 2 ;  // 2 ;  // 2 ;  // 2 ;  // 2 ;  // 2 ;  // 2

# END OF TRANSLATION





 


    // 
 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 


# END OF TRANSLATION




 


    // 10 ; }

    // 10 ; }
    // 10 ; }
    // 10 ; }
    // 10 ; }
    // 10 ; }
    // 1 ; 
    // 1 ; 
    // 1 ; 
    // 1 ; 
    // 1 ; 
    // 2 ;  // 2 ;  // 2 ;  // 2 ;  // 1 ;  // 2 ;  // 1 ;  // 2 ;  // 1 ;  // 2 ;  // 1 ;  // 2 ;  // 1 ;  // 2 ;  // 1 ;  // 2 ;  // 1 ;  // 2 ;  // 1 ;  // 2 ;  // 2 ;  // 1 ;  // 2 ;  // 1 ;  // 2 ;  // 1 ;  // 2 ;  // 2 ;  // 1 ;  // 2 ;  // 1 ;  // 2 ;  // 2 ;  // 1 ;  // 2 ;  // 1 ;  // 2 ;  // 2 ;  // 1 ;  // 2 ;  // 1 ;  // 2 ;  // 2 ;  // 1 ;  // 2 ;  // 2 ;  // 1 ;  // 2 ;  // 2 ;  // 1 ;  // 2 ;  // 2 ;  // 1 ;  // 2 ;  // 2 ;  // 1 ;  // 2 ;  // 2 ;  // 1 ;  // 2 ;  // 2 ;  // 1 ;  // 2 ;  // 2 ;  // 1 ;  // 2 ;  // 2 ;  // 1 ;  // 2 ;  // 2 ;  // 2 ;  // 1 ;  // 2 ;  // 2 ;  // 2 ;  // 1 ;  // 2 ;  // 2 ;  // 2 ;  // 1 ;  // 2 ;  // 2 ;  // 1 ;  // 2 ;  // 2 ;  // 2 ;  // 1 ;  // 2 ;  // 2 ;  // 2 ;  // 1 ;  // 2 ;  // 2 ;  // 2 ;  // 1 ;  // 2 ;  // 2 ;  // 2 ;  // 2 ;  // 1 ;  // 2 ;  // 2 ;  // 2 ;  // 2 ;  // 1 ;  // 2 ;  // 2 ;  // 2 ;  // 2 ;  // 2 ;  // 1 ;  // 2 ;  // 2 ;  // 2 ;  // 2 ;  // 2 ;  // 1 ;  // 2 ;  // 2 ;  // 2 ;  // 2 ;  // 2 ;  // 2 ;  // 2 ;  // 2 ;  // 1 ;  // 2 ;  // 2 ;  // 2 ;  // 2 ;  // 2 ;  // 2 ;  // 2 ;  // 2 ;  // 2 ;  // 2 ;  // 2 ;  // 2 ;  // 2 ;  // 2 ;  // 2 ;  // 2 ;  // 2

# END OF TRANSLATION




 


    // sum += ( int ) {
    // sum += sum += ( int ) {
    // sum += ( int ) {
    // sum += ( int ) {
    // sum += ( int ) {
    // sum += ( int ) {
    // sum += ( int ) {
    // sum += ( int ) {
    // sum += ( int ) {
    // sum += ( int ) {
    // sum += ( int ) {
    // sum += ( int ) {
    // sum += ( int ) {
    // sum += ( int ) {
    // sum += ( int ) {
    // sum += ( int ) {
    // sum += ( int ) {
    // sum += ( int ) {
    // sum += ( int ) {    // sum += ( int ) {    // sum += ( int ) {    // sum += ( int ) {    // sum += ( int ) {    // sum += ( int ) {    // sum += ( int ) {    // sum += ( int ) {    // sum += ( int ) {    // sum += ( int ) {    // sum += ( int ) {    // sum += ( int ) {    // sum += ( int ) {    // sum += ( int ) {    // sum += ( int ) {    // sum += ( int ) {    // sum += ( int ) {    // sum += ( int ) {    // sum += ( int ) {    // sum += ( int ) {    // sum += ( int ) {    // sum += ( int ) {    // sum += ( int ) {    // sum += ( int ) {    // sum += ( int ) {    // sum += ( int ) {    // sum += ( int ) {    // sum += ( int ) {    // sum += ( int ) {    // sum += ( int ) {    // sum += ( int ) {    // sum += ( int ) {    // sum += ( int ) {    // sum += ( int ) {    // sum += ( int ) {    // sum += ( int ) {    // sum += ( int ) {    // sum += ( int ) {    // sum += ( int ) {    // sum += ( int ) {    // sum += ( int ) {    // sum += ( int ) {    // sum += ( int ) {    // sum += ( int ) {    // sum += ( int ) {    // sum += ( int ) {    // sum += ( int ) {    // sum += ( int ) {    // sum += ( int ) {    // sum += ( int ) {    // sum += ( int ) {    // sum += ( int ) {    // sum += ( int ) {    // sum += ( int ) {    // sum += ( int ) {    // sum += ( int ) {    // sum += ( int ) {    // sum += ( int ) {    // sum += ( int ) {    // sum += ( int ) {    // sum += ( int ) {    // sum += ( int ) {    // sum += ( int ) {    // sum += ( int ) {    // sum += ( int ) {    // sum += ( int ) {    // sum += ( int ) {    // sum += ( int ) {    // sum += ( int ) {    // sum += ( int ) {    // sum += ( int ) {    // sum += ( int ) {    // sum += ( int ) {    // sum += ( int ) {    // sum += ( int ) {    // sum += ( int ) {    // sum += ( int ) {    // sum += ( int ) {    // sum += ( int ) {    // sum += ( int ) {    // sum += ( int ) {    // sum += ( int ) {    // sum += ( int ) {    // sum += ( int ) {    // sum += ( int ) {    // sum += ( int ) {    // sum += ( int ) {    //

# END OF TRANSLATION




   
    }
    if ( i ) {
    }
    if ( i ) {
    } else {
    } else {
    }
    if ( i ) {
    }
    }
    if ( i ) {
    } else {
    } else {
    } else {
    } else {
    } else {
    } else {
    } else {
    } else {
    } else {
    }
    }
    }
    }
    } else {
    } else {
    } else {
    } else {
    } else {
    } else {
    } else {
    } else {
    } else {
    } else {
    } else {
    } else {
    } else {
    } else {
    } else {
    } else {
    } else {
    } else {
    } else {
    } else {
    } else {
    } else {
    } else {
    } else {
    } else {
    } else {
    } else {
    } else {
    } else {
    } else {
    } else {
    } else {
    } else {
    } else {
    } else {
    } else {
    } else {
    } else {
    } else {
    } else {
    } else {
    } else {
    } else {
    } else {
    } else {
    } else {
    } else {
    } else {
    } else {
    } else {
    } else {
    } else {
    } else {
    } else {
    } else {
    } else {
    } else {
    } else {
    } else {
    } else {
    } else {
    } else {
    } else {
    } else {
    } else {
    } else {
    } else {
    } else {
    } else {
    } else {
    } else {
    } else {
    } else {
    } else {
    } else {
    } else {
    } else {
    } else {
    } else {
    } else {
    } else {
    } else {
    } else {
    } else {
    } else {
    } else {
    } else {
    } else {
    } else {
    } else {
    } else {
    } else {
    } else {
    } else {
    } else {
    } else {
    } else {
    } else {
    } else {
    } else {
    } else {
    } else {
    } else {
    } else {
    } else {
    } else {
    } else {
    } else {
    } else {
    } else {
    } else {
    } else {
    } else {
    } else {
    } else {
    } else {
    } else {
    } else {
    } else {
    } else {
    } else {
    } else {
    } else {
    } else {
    } else {
    } else {
    }

# END OF TRANSLATION





 




 


    // if ( i ) {
    // if ( i ) {
    // if ( i ) {
    // if ( i ) {
    // if ( i ) {
    // if ( i ) {
    // if ( i ) {
    // if ( i ) {
    // if ( i ) {
    // if ( i ) {
    // if ( i ) {
    // if ( i ) {
    // if ( i ) {
    // if ( i ) {
    // if ( i ) {
    // if ( i ) {
    // if ( i ) {
    // if ( i ) {
    // if ( i ) {
    // if ( i ) {
    // if ( i ) {
    // if ( i ) {
    // if ( i ) {
    // if ( i ) {
    // if ( i ) {
    // if ( i ) {
    // if ( i ) {
    // if ( i ) {
    // if ( i ) {
    // if ( i ) {
    // if ( i ) {
    // if ( i ) {
    // if ( i ) {
    // if ( i ) {
    // if ( i ) {
    // if ( i ) {
    // if ( i ) {
    // if ( i ) {
    // if ( i ) {
    // if ( i ) {
    // if ( i ) {
    // if ( i ) {
    // if ( i ) {
    // if ( i ) {
    // if ( i ) {
    // if ( i ) {
    // if ( i ) {
    // if ( i ) {
    // if ( i ) {
    // if ( i ) {
    // if ( i ) {
    // if ( i ) {
    // if ( i ) {
    // if ( i ) {
    // if ( i ) {
    // if ( i ) {
    // if ( i ) {
    // if ( i ) {
    // if ( i ) {
    // if ( i ) {
    // if ( i ) {
    // if ( i ) {
    // if ( i ) {
    // if ( i ) {
    // if ( i ) {
    // if ( i ) {
    // if ( i ) {
    // if ( i ) {
    // if ( i ) {
    // if ( i ) {
    // if ( i ) {
    // if ( i ) {
    // if ( i ) {
    // if ( i ) {
    // if ( i ) {
    // if ( i ) {
    // if ( i ) {
    // if ( i ) {
    // if ( i ) {
    // if ( i ) {
    // if ( i ) {
    // if ( i ) {
    // if ( i ) {
    // if ( i ) {
    // if ( i ) {
    // if ( i ) {
    // if ( i ) {
    // if ( i ) {
    // if ( i ) {
    // if ( i ) {
    // if ( i ) {
    // if ( i ) {
    // if ( i ) {
    // if ( i ) {
    // if ( i ) {
    // if

# END OF TRANSLATION





   
    // 10 ;
    // 1 ;
    // 1 ;
    // 1 ; 2 ) ; } ;
    // 2 ; 
    // 2 ; 
    // 2 ; 
    // 2 ; 


# END OF TRANSLATION




 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    //  // 


# END OF TRANSLATION



    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 


# END OF TRANSLATION




 

    ( int ) ;
 
 
    ( int ) ;
 
    ( int ) ;
    ( int ) ;
    ( int ) ;
    ( int ) ;
    ( int ) ;
    ( int ) ;
    ( int ) ;
    ( int ) ;
    ( int ) ;
    ( int ) ;    ( int ) ;    ( int ) ;    ( int ) ;    ( int ) ;    ( int ) ;    ( int ) ;    ( int ) ;    ( int ) ;    ( int ) ;    ( int ) ;    ( int ) ;    ( int ) ;    ( int ) ;    ( int ) ;    ( int ) ;    ( int ) ;    ( int ) ;    ( int ) ;    ( int ) ;    ( int ) ;    ( int ) ;    ( int ) ;    ( int ) ;    ( int ) ;    ( int ) ;    ( int ) ;    ( int ) ;    ( int ) ;    ( int ) ;    ( int ) ;    ( int ) ;    ( int ) ;    ( int ) ;    ( int ) ;    ( int ) ;    ( int ) ;    ( int ) ;    ( int ) ;    ( int ) ;    ( int ) ;    ( int ) ;    ( int ) ;    ( int ) ;    ( int ) ;    ( int ) ;    ( int ) ;    ( int ) ;    ( int ) ;    ( int ) ;    ( int ) ;    ( int ) ;    ( int ) ;    ( int ) ;    ( int ) ;    ( int ) ;    ( int ) ;    ( int ) ;    ( int ) ;    ( int ) ;    ( int ) ;    ( int ) ;    ( int ) ;    ( int ) ;    ( int ) ;    ( int ) ;    ( int ) ;    ( int ) ;    ( int ) ;    ( int ) ;    ( int ) ;    ( int ) ;    ( int ) ;    ( int ) ;    ( int ) ;    ( int ) ;    ( int ) ;    ( int ) ;    ( int ) ;    ( int ) ;    ( int ) ;    ( int ) ;    ( int ) ;    ( int ) ;    ( int ) ;    ( int ) ;    ( int ) ;    ( int ) ;    ( int ) ;    ( int ) ;    ( int ) ;    ( int ) ;    ( int ) ;    ( int ) ;    ( int ) ;    ( int ) ;    ( int ) ;    ( int ) ;    ( int ) ;    ( int ) ;    ( int ) ;    ( int ) ;    ( int ) ;    ( int ) ;    ( int ) ;    ( int ) ;    ( int ) ;    ( int ) ;    ( int ) ;    ( int ) ;    ( int ) ;    ( int ) ;    ( int ) ;    ( int ) ;    ( int ) ;    ( int ) ;    ( int ) ;    ( int ) ;    ( int ) ;    ( int ) ;    ( int ) ;    ( int ) ;    ( int ) ;    ( int ) ;    ( int ) ;    ( int ) ;    ( int ) ;    ( int ) ;    ( int ) ;    ( int ) ;    ( int ) ;    ( int ) ;    ( int ) ;    ( int ) ;    ( int ) ;    ( int ) ;    ( int ) ;    ( int ) ;    ( int ) ;    ( int ) ;    ( int ) ;    ( int ) ;    ( int ) ;    ( int ) ;    ( int ) ;    ( int ) ;    ( int ) ;    ( int ) ;    ( int ) ;    ( int ) ;    ( int ) ;    ( int ) ;    ( int ) ;    ( int ) ;    ( int ) ;    ( int ) ;

# END OF TRANSLATION




 


    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //

# END OF TRANSLATION






    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 


# END OF TRANSLATION





 


    // if ( l < 2 ) {
    // if ( l < 2 ) { return false ; }
    // if ( l < 2 ) { return false ; }
    // if ( l < 2 ) { return false ; }
    // if ( l < 2 ) { return false ; }
    // if ( l < 2 ) { return false ; }
    // if ( l < 2 ) { return false ; }
    // if ( l < 2 ) { return false ; }
    // if ( l < 2 ) { return false ; }
    // if ( l < 2 ) { return false ; }
    // if ( l < 2 ) { return false ; }
    // if ( l < 2 ) { return false ; }
    // if ( l < 2 ) { return false ; }
    // if ( l < 2 ) { return false ; }    // if ( l < 2 ) { return false ; }    // if ( l < 2 ) { return false ; }    // if ( l < 2 ) { return false ; }    // if ( l < 2 ) { return false ; }    // if ( l < 2 ) { return false ; }    // if ( l < 2 ) { return false ; }    // if ( l < 2 ) { return false ; }    // if ( l < 2 ) { return false ; }    // if ( l < 2 ) { return false ; }    // if ( l < 2 ) { return false ; }    // if ( l < 2 ) { return false ; }    // if ( l < 2 ) { return false ; }    // if ( l < 2 ) { return false ; }    // if ( l < 2 ) { return false ; }    // if ( l < 2 ) { return false ; }    // if ( l < 2 ) { return false ; }    // if ( l < 2 ) { return false ; }    // if ( l < 2 ) { return false ; }    // if ( l < 2 ) { return false ; }    // if ( l < 2 ) { return false ; }    // if ( l < 2 ) { return false ; }    // if ( l < 2 ) { return false ; }    // if ( l < 2 ) { return false ; }    // if ( l < 2 ) { return false ; }    // if ( l < 2 ) { return false ; }    // if ( l < 2 ) { return false ; }    // if ( l < 2 ) { return false ; }    // if ( l < 2 ) { return false ; }    // if ( l < 2 ) { return false ; }    // if ( l < 2 ) { return false ; }    // if ( l < 2 ) { return false ; }    // if ( l < 2 ) { return false ; }    // if ( l < 2 ) { return false ; }    // if ( l < 2 ) { return false ; }    // if ( l < 2 ) { return false ; }    // if ( l < 2 ) { return false ; }    // if ( l < 2 ) { return false ; }    // if ( l < 2 ) { return false ; }    // if ( l < 2 ) { return false ; }    // if ( l < 2 ) { return false ; }    // if ( l < 2 ) { return false ; }    // if ( l < 2 ) { return false ; }    // if ( l < 2 ) { return false ; }    // if ( l < 2 ) { return false ; }    // if ( l < 2 ) { return false ; }    // if ( l < 2 ) { return false ; }    // if ( l < 2 ) { return false ; }    // if ( l < 2 ) { return false ; }    // if ( l < 2 ) { return false ; }    // if ( l < 2 ) { return false ; }    // if ( l < 2 ) {

# END OF TRANSLATION




 


 
 
 
 
 
 
 
 10 ) ; }
 
 
 10 ) ; }
 
 
 10 ) ; }
 
 10 ) ; }
 
 10 ; }
 
 10 ) ; }
 
 10 ) ; }
 
 10 ; }
 
 10 ; } 
 10 ; } 
 1 ) ; } 
 1 ; } 
 1 ; } 
 1 ; } 1 ; } 
 1 ; } 1 ; } 1 ; } 1 ; } 1 ; } 1 ; } 1 ; 1 ; } 1 ; } 1 ; 1 ; } 1 ; } 1 ; } 1 ; 1 ; } 1 ; 1 ; } 1 ; 1 ; } 1 ; } 1 ; 1 ; } 1 ; 1 ; } 1 ; 1 ; } 1 ; 1 ; 1 ; } 1 ; 1 ; 1 ; 1 ; } 1 ; 1 ; 1 ; 1 ; 1 ; 1 ; 1 ; 1 ; 1 ; 1 ; 1 ; 1 ; 1 ; 1 ; 1 ; 1 ; 1 ; 1 ; 1 ; 1 ; 1 ; 1 ; 1 ; 1 ; 1 ; 1 ; 1 ; 1 ; 1 ; 1 ; 1 ; 1 ; 1 ; 1 ; 1 ; 1 ; 1 ; 1 ; 1 ; 1 ; 1 ; 1 ; 1 ; 1 ; 1 ; 1 ; 1 ; 1 ; 1 ; 1 ; 1 ; 1 ; 1 ; 1 ; 1 ; 1 ; 1 ; 1 ; 1 ; 1 ; 1 ; 1 ; 1 ; 1 ; 1 ; 1 ; 1 ; 1 ; 1 ; 1 ; 1 ; 1 ; 1 ; 1 ; 1 ; 1 ; 1 ; 1 ; 1 ; 1 ; 1 ; 1 ; 1 ; 1 ; 1 ; 1 ; 1 ; 1 ; 1 ; 1 ; 1 ; 1 ; 1 ; 1 ; 1 ; 1 ; 1 ; 1 ; 1 ; 1 ; 1 ; 1 ; 1 ; 1 ; 1 ; 1 ; 1 ; 1 ; 1 ; 1 ; 1 ; 1 ; 1 ; 1 ; 1 ; 1 ; 1 ; 1 ; 1 ; 1 ; 1 ; 1 ; 1 ; 1 ; 1 ; 1 ; 1 ; 1 ; 1 ; 1 ; 1 ; 1 ; 1 ; 1 ; 1 ; 1 ; 1 ; 1 ; 1 ; 1 ; 1 ; 1 ; 1 ; 1 ; 1 ; 1 ; 1 ; 1 ; 1 ; 1 ; 1 ; 1 ; 1 ; 1 ; 1 ; 1 ; 1 ; 1 ; 1 ; 1 ; 1 ; 1 ; 1 ; 1 ; 1 ; 1 ; 1 ; 1 ; 1 ; 1 ; 1 ; 1 ; 1 ; 1 ; 1 ; 1 ; 1 ; 1 ; 1 ; 1 ; 1 ; 1 ; 1 ; 1 ; 1 ; 1 ; 1 ; 1 ; 1 ; 1 ; 1 ; 1 ; 1 ; 1 ; 1 ; 1 ; 1 ; 1 ; 1 ; 1 ; 1 ;

# END OF TRANSLATION




 

    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //

# END OF TRANSLATION






 









    List < List < Integer > ( i ) ;
 
    List < Integer > ( i ) ;
 
    List < Integer > ( i ) ;
 
    List < Integer > ( i ) ;
    }
    List < Integer > ( i ) ;
    }
    List < Integer > ( i ) ;
    }
    List < Integer > ( i ) ;
    }
    List < Integer > ( i ) ;
    }
    List < Integer > ( i ) ;
    }
    List < Integer > ( i ) ;
    }
    List < Integer > ( i ) ;
    }
    List < Integer > ( i ) ;
    }
    List < Integer > ( i ) ;    }
    List < Integer > ( i ) ;    }
    List < Integer > ( i ) ;    }
    List < Integer > ( i ) ;    }
    List < Integer > ( i ) ;    }
    List < Integer > ( i ) ;    }
    List < Integer > ( i ) ;    }
    List < Integer > ( i ) ;    }
    List < Integer > ( i ) ;    }
    List < Integer > ( i ) ;    }
    List < Integer > ( i ) ;    }
    List < Integer > ( i ) ;    }    List < Integer > ( i ) ;    }    List < Integer > ( i ) ;    }    List < Integer > ( i ) ;    }    List < Integer > ( i ) ;    }    List < Integer > ( i ) ;    }    List < Integer > ( i ) ;    }    List < Integer > ( i ) ;    }    }    List < Integer > ( i ) ;    }    List < Integer > ( i ) ;    }    List < Integer > ( i ) ;    }    List < Integer > ( i ) ;    }    List < Integer > ( i ) ;    }    List < Integer > ( i ) ;    }    List < Integer > ( i ) ;    }    List < Integer > ( i ) ;    }    List < Integer > ( i ) ;    }    }    List < Integer > ( i ) ;    }    List < Integer > ( i ) ;    }    List < Integer > ( i ) ;    }    List < Integer > ( i ) ;    }    List < Integer > ( i ) ;    }    List < Integer > ( i ) ;    }    }    List < Integer > ( i ) ;    }    List < Integer > ( i ) ;    }    List < Integer > ( i ) ;    }    }    List < Integer > ( i ) ;    }    List < Integer > ( i ) ;    }    List < Integer > ( i ) ;    }    }    List < Integer > ( i ) ;    }    }    List < Integer > ( i ) ;    }    List < Integer > ( i ) ;    }    List < Integer > ( i ) ;    }    }    List < Integer > ( i ) ;    }    }    List < Integer > ( i ) ;    }    }    List < Integer > ( i ) ;    }    List < Integer > ( i ) ;    }    }    List < Integer > ( i ) ;    }    }    List < Integer > ( i ) ;    }    List < Integer > ( i ) ;    }    }    List < Integer > ( i ) ;    }    }    List < Integer > ( i ) ;   

# END OF TRANSLATION




 

    ( i ) ; }
    // 10 ) ; }
    // 10 ) ; }
    // 1 ) ; }
    // 1 ) ; }
    // 1 ) ; }
    // 1 ) ; }
    // 1 ) ; }
    // 1 ) ; }
    // 1 ) ; }
    // 1 ; }
    // 1 ) ; }
    // 1 ; }
    // 1 ) ; }
    // 1 ; }
    // 1 ; }
    // 1 ; }
    // 1 ; }
    // 1 ; }
    // 1 ; }
    // 1 ; }
    // 1 ; }
    // 1 ; }
    // 1 ; }
    // 1 ; }
    // 1 ; }
    // 1 ; }
    // 1 ; }
    // 1 ; }
    // 1 ; }
    // 1 ; }
    // 1 ; }
    // 1 ; }
    // 1 ; }
    // 1 ; }
    // 1 ; }
    // 1 ; }
    // 1 ;    // 1 ; }    // 1 ; }    // 1 ;    // 2 ;    // 2 ; }    // 1 ;    // 2 ; }    // 1 ;    // 1 ; }    // 1 ;    // 2 ;    // 2 ;    // 1 ; }

# END OF TRANSLATION




 


    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 


# END OF TRANSLATION






 



   
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 


# END OF TRANSLATION


```




   
   
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 


# END OF TRANSLATION




 


    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    //  // 


# END OF TRANSLATION






 






 









    StringBuilder ( ) ;
 
    StringBuilder ( ) ;
    }
    StringBuilder ( ) ;
    }
    StringBuilder ( ) ;
    }
    StringBuilder ( i ) ;
    }
    StringBuilder ( ) ;
    }
    StringBuilder ( ) ;
    }
    StringBuilder ( ) {
    StringBuilder .append ( i ) ; }
    StringBuilder ( i ) ; }
    StringBuilder ( i ) ; }
    StringBuilder ( i ) {
    StringBuilder .append ( i ) ; }
    StringBuilder ( i ) ; }
    StringBuilder ( ) ; }
    StringBuilder ( ) {
    StringBuilder .append ( i ) ; }
    StringBuilder ( i ) ; }
    StringBuilder ( i ) {
    StringBuilder .append ( i ) ; }
    StringBuilder ( ) ; }
    StringBuilder ( ) ; }
    StringBuilder ( ) {
    StringBuilder .append ( i ) ; }
    StringBuilder ( i ) {
    StringBuilder .append ( i ) ; }
    StringBuilder ( i ) {
    StringBuilder .append ( i ) ; }
    StringBuilder ( ) {
    StringBuilder .append ( i ) ; }
    StringBuilder ( ) ; }
    StringBuilder ( ) {
    StringBuilder .append ( i ) ; }
    StringBuilder ( ) {
    StringBuilder .append ( i ) ; }
    StringBuilder ( ) {
    StringBuilder .append ( i ) ; }
    StringBuilder .append ( i ) {
    StringBuilder .append ( i ) {
    StringBuilder .append ( i ) ; }
    StringBuilder .append ( i ) {
    StringBuilder .append ( i ) {
    StringBuilder .append ( i ) {
    StringBuilder .append ( i ) {
    StringBuilder .append ( i ) {
    StringBuilder .append ( i ) ; }    StringBuilder .append ( i ) {
    StringBuilder .append ( i ) {
    StringBuilder .append ( i ) {
    StringBuilder .append ( i ) {
    StringBuilder .append ( i ) {
    StringBuilder .append ( i ) {
    StringBuilder .append ( i ) {
    StringBuilder .append ( i ) {
    StringBuilder .append ( i ) {
    StringBuilder .append ( i ) {
    StringBuilder .append ( i ) {
    StringBuilder .append ( i ) {
    StringBuilder .append ( i ) {
    StringBuilder .append ( i ) {
    StringBuilder .append ( i ) {
    StringBuilder .append ( i ) {
    StringBuilder .append ( i ) {
    StringBuilder .append ( i ) {
    StringBuilder .append ( i ) {
    StringBuilder .append ( i ) {
    StringBuilder .append ( i ) {
    StringBuilder .append ( i ) {
    StringBuilder .append ( i ) {
    StringBuilder .append ( i ) {
    StringBuilder .append ( i ) {
    StringBuilder .append ( i ) {
    StringBuilder .append ( i ) {
    StringBuilder .append ( i ) {
    StringBuilder .append ( i ) {
    StringBuilder .append ( i ) {
    StringBuilder .append ( i ) {
    StringBuilder .append ( i ) {
    String

# END OF TRANSLATION




 

    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 


# END OF TRANSLATION











    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 


# END OF TRANSLATION




    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 


# END OF TRANSLATION







 10 ; }

 



    // if ( arr .get ( arr .get ( arr .get ( ) { return ( arr .get ( ) { return ( arr .get ( ) ; }
 1 ) ; }
 
 1 ; }
 
    // if ( arr .get ( arr .get ( arr .get ( ) { return ( arr .get ( ) { return ( arr .get ( ) ; }
 1 ) ; }
 1 ; }
 1 ) ; }
 1 ; }
 1 ; }
 1 ; }
 1 ; }
 1 ; } 1 ; } 1 ; } 1 ; } 1 ; } 1 ; } 1 ; } 1 ; } 1 ; } 1 ; } 1 ; } 1 ; } 1 ; } 1 ; } 1 ; } 1 ; } 1 ; } 1 ; } 1 ; } 1 ; } 1 ; } 1 ; } 1 ; } 1 ; } 1 ; } 1 ; } 1 ; } 1 ; } 1 ; } 1 ; } 1 ; } 1 ; } 1 ; } 1 ; } 1 ; } 1 ; } 1 ; } 1 ; } 1 ; } 1 ; } 1 ; } 1 ; } 1 ; } 1 ; } 1 ; } 1 ; } 1 ; } 1 ; } 1 ; } 1 ; } 1 ; } 1 ; } 1 ; } 1 ; } 1 ; } 1 ; } 1 ; } 1 ; } 1 ; } 1 ; } 1 ; } 1 ; } 1 ; } 1 ; } 1 ; } 1 ; } 1 ; } 1 ; } 1 ; } 1 ; } 1 ; } 1 ; } 1 ; } 1 ; } 1 ; } 1 ; } 1 ; } 1 ; } 1 ; } 1 ; } 1 ; } 1 ; } 1 ; } 1 ; } 1 ; } 1 ; } 1 ; } 1 ; } 1 ; } 1 ; } 1 ; } 1 ; } 1 ; } 1 ; } 1 ; } 1 ; } 1 ; } 1 ; } 1 ; } 1 ; } 1 ; } 1 ; } 1 ; } 1 ; } 1 ; } 1 ; } 1 ; } 1 ; } 1 ; } 1 ; } 1 ; } 1 ; } 1 ; } 1 ; } 1 ; } 1 ; } 1 ; } 1 ; } 1 ; } 1 ; } 1 ; } 1 ; } 1 ; } 1 ; } 1 ; } 1 ; } 1 ; } 1 ; } 1 ; } 1 ; } 1 ; } 1 ; } 1 ; } 1 ; } 1 ; } 1 ; } 1 ; } 1 ; } 1 ; } 1 ; } 1 ; } 1 ; } 1 ; } 1 ; } 1 ; } 1 ; } 1 ; } 1 ; } 1 ; } 1 ; } 1 ; } 1 ; } 1 ; } 1 ; } 1 ; } 1 ; } 1 ; } 1 ; } 1 ; } 1 ; } 1 ; } 1 ; } 1 ; } 1 ;

# END OF TRANSLATION




 

    }
    // 20 ; }
    // 20 ; }
    // 20 ; }
    // 20 ; }
    // 20 ; }
    // 20 ; }
    // 20 ; }
    // 20 ; }
    // 20 ; }
    // 2 ; }
    // 2 ; }
    // 2 ; }
    // 2 ; }
    // 2 ; }
    // 2 ; 
    // 2 ; }
    // 2 ; }
    // 2 ;  // 2 ; }
    // 2 ;  // 2 ;  // 2 ;  // 2 ;  // 2 ;  // 2 ;  // 2 ;  // 2 ;  // 2 ;  // 2 ;  // 2 ;  // 2 ;  // 2 ;  // 2 ;  // 2 ;  // 2 ;  // 2 ;  // 2 ;  // 2 ;  // 2 ;  // 2 ;  // 2 ;  // 2 ;  // 2 ;  // 2 ;  // 2 ;  // 2 ;  // 2 ;  // 2 ;  // 2 ;  // 2 ;  // 2 ;  // 2 ;  // 2 ;  // 2 ;  // 2 ;  // 2 ;  // 2 ;  // 2 ;  // 2 ;  // 2 ;  // 2 ;  // 2 ;  // 2 ;  // 2 ;  // 2 ;  // 2 ;  // 2 ;  // 2 ;  // 2 ;  // 2 ;  // 2 ;  // 2 ;  // 2 ;  // 2 ;  // 2 ;  // 2 ;  // 2 ;  // 2 ;  // 2 ;  // 2 ;  // 2 ;  // 2 ;  // 2 ;  // 2 ;  // 2 ;  // 2 ;  // 2 ;  // 2 ;  // 2 ;  // 2 ;  // 2 ;  // 2 ;  // 2 ;  // 2 ;  // 2 ;  // 2 ;  // 2 ;  // 2 ;  // 2 ;  // 2 ;  // 2 ;  // 2 ;  // 2 ;  // 2 ;  // 2 ;  // 2 ;  // 2 ;  // 2 ;  // 2 ;  // 2 ;  // 2 ;  // 2 ;  // 2 ;  // 2 ;  // 2 ;  // 2 ;  // 2 ;  // 2 ;  // 2 ;  // 2 ;  // 2 ;  // 2 ;  // 2 ;  // 2 ;  // 2 ;  // 2 ;  // 2 ;  // 2 ;  // 2 ;  // 2 ;  // 2 ;  // 2 ;  // 2 ;  // 2 ;  // 2 ;  // 2 ;  // 2 ;  // 2 ;  // 2 ;  // 2 ;  // 2 ;  // 2 ;  // 2 ;  // 2 ;  // 2 ;  // 2 ;  // 2 ;  // 2 ;  // 2 ;  // 2 ;  // 2 ;  // 2 ;  // 

# END OF TRANSLATION


```




   

    StringBuilder ( ) {
    StringBuilder ( ) {
    StringBuilder ( ) ; }
    }
    StringBuilder ( ) {
    StringBuilder .append ( char [] ) {
    StringBuilder .append ( char [] ) {
    }
    StringBuilder .append ( char [] ) {
    StringBuilder .append ( char [] ) {
    }
    StringBuilder .append ( char [] ) {
    StringBuilder .append ( char [] ) {
    }
    StringBuilder .append ( char [] ) {
    }
    StringBuilder .append ( char [] ) {
    }
    StringBuilder .append ( char [] ) {    }
    StringBuilder .append ( char [] ) {    }
    StringBuilder .append ( char [] ) {    }
    StringBuilder .append ( char [] ) {    }
    StringBuilder .append ( char [] ) {    }
    StringBuilder .append ( char [] ) {    }
    StringBuilder .append ( char [] ) {    }    StringBuilder .append ( char [] ) {    }    StringBuilder .append ( char [] ) {    }    StringBuilder .append ( char [] ) {    }    StringBuilder .append ( char [] ) {    }    StringBuilder .append ( char [] ) {    }    StringBuilder .append ( char [] ) {    }    StringBuilder .append ( char [] ) {    }    StringBuilder .append ( char [] ) {    }    StringBuilder .append ( char [] ) {    }    StringBuilder .append ( char [] ) {    }    }    StringBuilder .append ( char [] ) {    }    StringBuilder .append ( char [] ) {    }    }    StringBuilder .append ( char [] ) {    }    StringBuilder .append ( char [] ) {    }    StringBuilder .append ( char [] ) {    }    }    StringBuilder .append ( char [] ) {    }    StringBuilder .append ( char [] ) {    }    }    StringBuilder .append ( char [] ) {    }    StringBuilder .append ( char [] ) {    }    }    StringBuilder .append ( char [] ) {    }    StringBuilder .append ( char [] ) {    }    }    StringBuilder .append ( char [] ) {    }    }    StringBuilder .append ( char [] ) {    }    }    StringBuilder .append ( char [] ) {    }    }    StringBuilder .append ( char [] ) {    }    }    StringBuilder .append ( char [] ) {    }    }    StringBuilder .append ( char [] ) {    }    }    StringBuilder .append ( char [] ) {    }    StringBuilder .append ( char [] ) {    }    }    StringBuilder .append ( char [] ) {    }    }    StringBuilder .append ( char [] ) {    }    }    StringBuilder .append ( char [] ) {    }    }    StringBuilder .append ( char [] ) {    }    }    StringBuilder .append ( char [] ) {    }    }    StringBuilder .append ( char [] ) {    }    }    StringBuilder .append ( char [] ) {    }    }    }    StringBuilder .append ( char [] ) {    }    }    StringBuilder .append ( char [] ) {    }    }    }    StringBuilder .append ( char [] ) {

# END OF TRANSLATION




    // sum += nums += sum ;
    // sum += num ;
    // sum += num ;
    // sum += num ;
    // sum += num ;
    // sum += num ; }
    // sum += num ;
    // sum += num ;    // sum += num ;    // sum += num ;    // sum += num ;    // sum += num ;    // sum += num ;    // sum += num ;    // sum += num ;    // sum += num ;    // sum += num ;    // sum += num ;    // sum += num ;    // sum += num ;    // sum += num ;    // sum += num ;    // sum += num ;    // sum += num ;    // sum += num ;    // sum += num ;    // sum += num ;    // sum += num ;    // sum += num ;    // sum += num ;    // sum += num ;    // sum += num ;    // sum += num ;    // sum += num ;    // sum += num ;    // sum += num ;    // sum += num ;    // sum += num ;    // sum += num ;    // sum += num ;    // sum += num ;    // sum += num ;    // sum += num ;    // sum += num ;    // sum += num ;    // sum += num ;    // sum += num ;    // sum += num ;    // sum += num ;    // sum += num ;    // sum += num ;    // sum += num ;    // sum += num ;    // sum += num ;    // sum += num ;    // sum += num ;    // sum += num ;    // sum += num ;    // sum += num ;    // sum += num ;    // sum += num ;    // sum += num ;    // sum += num ;    // sum += num ;    // sum += num ;    // sum += num ;    // sum += num ;    // sum += num ;    // sum += num ;    // sum += num ;    // sum += num ;    // sum += num ;    // sum += num ;    // sum += num ;    // sum += num ;    // sum += num ;    // sum += num ;    // sum += num ;    // sum += num ;    // sum += num ;    // sum += num ;    // sum += num ;    // sum += num ;    // sum += num ;    // sum += num ;    // sum += num ;    // sum += num ;    // sum += num ;    // sum += num ;    // sum += num ;    // sum += num ;    // sum += num ;    // sum += num ;    // sum += num ;    // sum += num ;    // sum += num ;    // sum += num ;    // sum += num ;    // sum += num ;    // sum += num ;    // sum += num ;    // sum += num ;    // sum += num ;    // sum += num ;    // sum += num ;    // sum += num ;    // sum += num ;    // sum += num ;    // sum += num ;    // sum += num ;    // sum += num ;    // sum += num ;    // sum += num ;    // sum += num ;    // sum += num ;    // sum += num ;    // sum += num ;    // sum += num ;    // sum += num ;    // sum += num ;    // sum += num ;    // sum += num ;    // sum += num ;    // sum += num ;    // sum += num ;    // sum += num ;    // sum += num ;    // sum += num ;    // sum += num ;    // sum += num ;    // sum += num ;    // sum += num ;    // sum += num ;    // sum += num ;    // sum += num ;    // sum += num ;    // sum += num ;    // sum += num ;    // sum

# END OF TRANSLATION





    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 


# END OF TRANSLATION



   
    StringBuilder ( ) ;
    }
    StringBuilder ( ) ;
    }
    StringBuilder ( ) ;
    }
    StringBuilder ( ) ;
    }
    StringBuilder ( ) ;
    }
    StringBuilder ( ) ;    }
    StringBuilder ( ) ;    }
    }
    StringBuilder ( ) ;    }
    }
    StringBuilder ( ) ;    }
    StringBuilder ( ) ;    }
    }
    StringBuilder ( ) ;    }
    }
    StringBuilder ( ) ;    }
    }
    StringBuilder ( ) ;    }
    }
    StringBuilder ( ) ;    }    }
    }
    StringBuilder ( ) ;    }
    }
    StringBuilder ( ) ;    }
    }
    StringBuilder ( ) ;    }    }    }
    }    StringBuilder ( ) ;    }    }    }
    StringBuilder ( ) ;    }    }    }    StringBuilder ( ) ;    }    }    }    }    StringBuilder ( ) ;    }    }    }    }    }    StringBuilder ( ) ;    }    }    }    }    }    StringBuilder ( )    {
    }    }    }    StringBuilder ( )    {
    }    }    }    }    }    }    StringBuilder ( )    {
    }    }    }    }    StringBuilder ( )    {
    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }

# END OF TRANSLATION




 

    // 
 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 


# END OF TRANSLATION




 

    // 
 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 


# END OF TRANSLATION




 

 
 1 ) { n = new ArrayList < n ) ; }
 
 
 1 ) ; }
 
 
 1 ) ; }
 
 
 1 ) ; }
 
 1 ; }
 
 1 ; }
 
 1 ; } 
 1 ; } 
 1 ; } 
 1 ; } 
 1 ; } 
 1 ; } 
 1 ; } 
 1 ; } 
 1 ; } 1 ; } 1 ; } 1 ; } 1 ; } 1 ; } 1 ; } 1 ; } 1 ; } 1 ; } 1 ; } 1 ; } 1 ; } 1 ; } 1 ; } 1 ; } 1 ; } 1 ; } 1 ; } 1 ; } 1 ; } 1 ; } 1 ; } 1 ; } 1 ; } 1 ; } 1 ; } 1 ; } 1 ; } 1 ; } 1 ; } 1 ; } 1 ; } 1 ; } 1 ; } 1 ; } 1 ; } 1 ; } 1 ; } 1 ; } 1 ; } 1 ; } 1 ; } 1 ; } 1 ; } 1 ; } 1 ; } 1 ; } 1 ; } 1 ; } 1 ; } 1 ; } 1 ; } 1 ; } 1 ; } 1 ; } 1 ; } 1 ; } 1 ; } 1 ; } 1 ; } 1 ; } 1 ; } 1 ; } 1 ; } 1 ; } 1 ; } 1 ; } 1 ; } 1 ; } 1 ; } 1 ; } 1 ; } 1 ; } 1 ; } 1 ; } 1 ; } 1 ; } 1 ; } 1 ; } 1 ; } 1 ; } 1 ; } 1 ; } 1 ; } 1 ; } 1 ; } 1 ; } 1 ; } 1 ; } 1 ; } 1 ; } 1 ; } 1 ; } 1 ; } 1 ; } 1 ; } 1 ; } 1 ; } 1 ; } 1 ; } 1 ; } 1 ; } 1 ; } 1 ; } 1 ; } 1 ; } 1 ; } 1 ; } 1 ; } 1 ; } 1 ; } 1 ; } 1 ; } 1 ; 1 ; } 1 ; } 1 ; } 1 ; } 1 ; 1 ; } 1 ; } 1 ; } 1 ; } 1 ; } 1 ; } 1 ; 1 ; } 1 ; } 1 ; } 1 ; } 1 ; 1 ; } 1 ; } 1 ; 1 ; } 1 ; } 1 ; 1 ; } 1 ; } 1 ; 1 ; } 1 ; } 1 ; 1 ; } 1 ; 1 ; } 1 ; } 1 ; 1 ; } 1 ; 1 ; } 1 ; 1 ; } 1 ; 1 ; } 1 ; 1 ; } 1 ; 1 ; } 1 ; 1 ; } 1 ; 1 ; 1 ; } 1 ; 1 ; 1 ; } 1 ; 1 ; 1 ; } 1 ; 1 ; 1 ; 1 ; } 1 ; 1 ; 1 ; 1 ; } 1 ; 1 ; 1

# END OF TRANSLATION





 


    // if ( i >= 1 ) {
    // if ( i >= 1 ) {
    // if ( i >= 1 ) {
    // if ( i >= 1 ) { return ( i ) { return false ; }
    // if ( i >= 1 ) {
    // if ( i >= 1 ) { return ( i ) { return false ; }
    // if ( i >= 1 ) {
    // if ( i >= 1 ) { return ( i ) { return ( i ) ; }
    // if ( i >= 1 ) { return ( i ) { return ( i ) ; }
    // if ( i >= 1 ) { return ( i ) { return ( i ) ; }
    // if ( i >= 1 ) { return ( i ) { return ( i ) ; }
    // if ( i >= 1 ) { return ( i ) { return ( i ) ; }
    // if ( i >= 1 ) { return ( i ) { return ( i ) ; }
    // if ( i >= 1 ) { return ( i ) { return ( i ) ; }
    // if ( i >= 1 ) { return ( i ) { return ( i ) ; }
    // if ( i >= 1 ) { return ( i ) { return ( i ) ; }
    // if ( i >= 1 ) { return ( i ) { return ( i ) ; }
    // if ( i >= 1 ) { return ( i ) { return ( i ) ; }
    // if ( i >= 1 ) { return ( i ) { return ( i ) ; }
    // if ( i >= 1 ) { return ( i ) { return ( i ) ; }
    // if ( i >= 1 ) { return ( i ) { return ( i ) { return ( i ) ; }
    // if ( i >= 1 ) { return ( i ) { return ( i ) ; }    // if ( i >= 1 ) { return ( i ) { return ( i ) { return ( i ) ; }    // if ( i >= 1 ) { return ( i ) { return ( i ) ; }    // if ( i >= 1 ) { return ( i ) { return ( i ) { return ( i ) ; }    // if ( i >= 1 ) { return ( i ) { return ( i ) ; }    // if ( i >= 1 ) { return ( i ) { return ( i ) { return ( i ) ; }    // if ( i >= 1 ) { return ( i ) { return ( i ) ; }    // if ( i >= 1 ) { return ( i ) { return ( i ) { return ( i ) ; }    // if ( i >= 1 ) { return ( i ) { return ( i ) { return ( i ) ; }    // if ( i >= 1 ) { return ( i ) { return ( i ) ; }    // if ( i >= 1 ) { return ( i ) { return ( i ) { return ( i ) ; }    // if ( i >= 1 ) { return ( i ) { return ( i ) ; }    // if ( i >= 1 ) { return ( i ) { return ( i ) { return ( i ) ; }    // if ( i >= 1 ) { return ( i ) { return ( i ) { return ( i ) ; }    // if ( i >= 1 ) { return ( i ) { return ( i ) { return ( i ) ; }    // if ( i >= 1 ) { return ( i ) { return ( i ) ; }    // if ( i >= 1 ) { return ( i ) { return ( i ) { return ( i ) ; }    // if ( i >= 1 ) { return ( i ) { return ( i ) { return (

# END OF TRANSLATION





    // 20 ) ; }

    // 20 ) ; }
    // 20 ) ; }
    // 20 ) ; }
    // 2 ) ; }
    // 2 ) ; }
    // 2 ) ; }
    // 2 ) ; }
    // 2 ) ; }
    // 2 ) ; }
    // 2 ) ; }
    // 2 ) ; }
    // 2 ) ; }
    // 2 ) ; }
    // 2 ) ; }
    // 2 ) ; }
    // 2 ) ; }
    // 2 ) ; }
    // 2 ) ; }
    // 2 ) ; }
    // 2 ) ; }
    // 2 ) ; }
    // 2 ) ; }
    // 2 ) ; }
    // 2 ) ; }
    // 2 ) ; }
    // 2 ) ; }
    // 2 ) ;    // 2 ) ; }
    // 2 ) ; }
    // 2 ) ;    // 2 ) ; }
    // 2 ) ;    // 2 ) ; }
    // 2 ) ;    // 2 ) ; }    // 2 ) ;    // 2 ) ; }
    // 2 ) ;    // 2 ) ;    // 2 ) ; }

# END OF TRANSLATION





 



 

 
 
 
 
 
 
 
 
 
 20 ; }
 
 
 
 
 
 20 ; }
 
 
 
 
 
 20 ; }
 
 
 
 
 20 ; }
 
 
 
 
 
 20 ; }
 
 
 
 
 20 ; 
 
 20 ; 
 
 20 ; }
 
 20 ; 
 20 ; 
 20 ; 
 20 ; 
 2 ; } 
 2 
 2 2 ; 
 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2

# END OF TRANSLATION



 

 
 1 ) ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; }

# END OF TRANSLATION




 


 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 10 ; 
 
 10 ; }
 
 
 10 ; }
 
 
 10 ; 
 10 ; 
 10 ; }
 
 10 ; }
 
 10 ; }
 
 1 ; 
 1 ; }
 
 1 ; 
 1 ; 
 1 ; 2 1 ; 2 1 ; 2 1 ; 2 1 ; 2 1 ; 2 2 1 ; 2 1 ; 2 2 1 ; 2 2 1 ; 2 2 1 ; 2 2 1 ; 2 1 ; 2 1 ; 2 1 ; 2 2 1 ; 2 1 ; 2 2 1 ; 2 1 ; 2 2  ; 2 1 ; 2 1 ; 2 2 ; 2 1 ; 2  ; 2 1 ; 2  ; 2 1 ; 2  ; 2  ; 2  ; 2  ; 2  ; 1 2 ; 1 ; 2  ; 2  ; 2  ; 2  ; 2  ; 1 ; 2  ; 2 ; 1 ; 2 ; 2 ; 2 ; 1 ; 2 ; 2 ; 2 ; 1 ; 2 ; 2 ; 2 ; 1 ; 2 ; 2 ; 2 ; 1 ; 2 ; 2 ; 2 ; 2 ; 1 ; 2 ; 2 ; 2 ; 2 ; 1 ; 2 ; 2 ; 2 ; 1 ; 2 ; 2 ; 2 ; 2 ; 2 ; 2 ; 1 ; 2 ; 2 ; 2 ; 2 ; 1 ; 2 ; 2 ; 2 ; 2 ; 2 ; 2 ; 1 ; 2 ; 2 ; 2 ; 2 ; 2 ; 2 ; 1 ; 2 ; 2 ; 2 ; 2 ; 2 ; 2 ; 2 ; 2 ; 2 ; 2 ; 2 ; 1 ; 2 ; 2 ; 2 ; 2 ; 2 ; 2 ; 2 ; 2 ; 2 ; 2 ; 2 ; 2 ; 2 ; 2 ; 2 ; 2 ; 2 ; 2 ; 2 ; 2 ; 2 ; 2 ; 2 ; 2 ; 2 ; 2 ; 2 ; 2 ; 2 ; 2 ; 2 ; 2 ; 2 ; 2 ; 2 ; 2 ; 2 ; 2 ; 2 ; 2 ; 2 ; 2 ; 2 ; 2 ; 2 ; 2 ; 2 ; 2 ; 2 ; 2 ; 2 ; 2 ; 2 ; 2 ; 2 ; 2 ; 2 ; 2 ; 2 ; 2 ; 2 ; 2 ; 2 ; 2 ; 2 ; 2 ; 2 ; 2 ; 2 ; 2 ; 2 ; 2 ; 2 ; 2 ; 2 ; 2 ; 2 ; 2 ; 2 ; 2 ; 2 ; 2 ; 2 ; 2 ; 2 ; 2 ; 2 ; 2 ; 2 ; 2 ; 2

# END OF TRANSLATION





 


    // if ( count < 0 ) { count = 0 ; }
    // if ( count < 0 ) { count = 0 ; }
    // if ( count < 0 ) { count = 0 ; }
    // if ( count < 0 ) { count = 0 ; }
    // if ( count < 0 ) { count = 0 ; }
    // if ( count < 0 ) { count = 0 ; }
    // if ( count < 0 ) { count = 0 ; }
    // if ( count < 0 ) { count = 0 ; }
    // if ( count < 0 ) { count = 0 ; }
    // if ( count < 0 ) { count = 0 ; }    // if ( count < 0 ) { count = 0 ; }    // if ( count < 0 ) { count = 0 ; }    // if ( count < 0 ) { count = 0 ; }    // if ( count < 0 ) { count = 0 ; }    // if ( count < 0 ) { count = 0 ; }    // if ( count < 0 ) { count = 0 ; }    // if ( count < 0 ) { count = 0 ; }    // if ( count < 0 ) { count = 0 ; }    // if ( count < 0 ) { count < 0 ; }    // if ( count < 0 ) { count = 0 ; }    // if ( count < 0 ) { count = 0 ; }    // if ( count < 0 ) { count < 0 ; }    // if ( count < 0 ) { count < 0 ; }    // if ( count < 0 ) { count < 0 ; }    // if ( count < 0 ) { count < 0 ; }    // if ( count < 0 ) { count < 0 ; }    // if ( count < 0 ) { count < 0 ; }    // if ( count < 0 ) { count < 0 ; }    // if ( count < 0 ) { count < 0 ; }    // if ( count < 0 ) { count < 0 ; }    // if ( count < 0 ) { count < 0 ; }    // if ( count < 0 ) { count < 0 ; }    // if ( count < 0 ) { count < 0 ; }    // if ( count < 0 ) { count < 0 ; }    // if ( count < 0 ) { count < 0 ; }    // if ( count < 0 ) { count < 0 ; }    // if ( count < 0 ) { count < 0 ; }    // if ( count < 0 ) { count < 0 ; }    // if ( count < 0 ) { count < 0 ; }    // if ( count < 0 ) { count < 0 ; }    // if ( count < 0 ) { count < 0 ; }    // if ( count < 0 ) { count < 0 ; }    // if ( count < 0 ) { count < 0 ; }    // if ( count < 0 ) { count < 0 ; }    // if ( count < 0 ) { count < 0 ; }    // if ( count < 0 ) { count < 0 ; }    // if ( count < 0 ) { count < 0 ; }    // if ( count < 0 ) { count < 0 ; }    // if ( count < 0 ) { count < 0 ; }    // if ( count < 0 ) { count < 0 ; }    // if ( count < 0 ) { count < 0 ; }    // if ( count < 0 ) { count < 0 ; }    // if ( count < 0 ) { count < 0 ; }    // if ( count < 0 ) { count < 0 ; }    // if ( count < 0 ) { count < 0 ; }    // if ( count < 0 ) { count < 0 ; }    // if ( count < 0 ) { count

# END OF TRANSLATION





 

    // sum += sum += ( i ) ;
 
    // sum += ( i ) ; }
    // sum += ( i ) ; }
    // sum += ( i ) ; }
    // sum += ( i ) ; }
    // sum += ( i ) ; }
    // sum += ( i ) ; }
    // sum += ( i ) ; }
    // sum += ( i ) ; }
    // sum += ( i ) ; }
    // sum += ( i ) ; }    // sum += ( i ) ; }    // sum += ( i ) ; }    // sum += ( i ) ; }    // sum += ( i ) ; }    // sum += ( i ) ; }    // sum += ( i ) ; }    // sum += ( i ) ; }    // sum += ( i ) ; }    // sum += ( i ) ; }    // sum += ( i ) ; }    // sum += ( i ) ; }    // sum += ( i ) ; }    // sum += ( i ) ; }    // sum += ( i ) ; }    // sum += ( i ) ; }    // sum += ( i ) ; }    // sum += ( i ) ; }    // sum += ( i ) ; }    // sum += ( i ) ; }    // sum += ( i ) ; }    // sum += ( i ) ; }    // sum += ( i ) ; }    // sum += ( i ) ; }    // sum += ( i ) ; }    // sum += ( i ) ; }    // sum += ( i ) ; }    // sum += ( i ) ; }    // sum += ( i ) ; }    // sum += ( i ) ; }    // sum += ( i ) ; }    // sum += ( i ) ; }    // sum += ( i ) ; }    // sum += ( i ) ; }    // sum += ( i ) ; }    // sum += ( i ) ; }    // sum += ( i ) ; }    // sum += ( i ) ; }    // sum += ( i ) ; }    // sum += ( i ) ; }    // sum += ( i ) ; }    // sum += ( i ) ; }    // sum += ( i ) ; }    // sum += ( i ) ; }    // sum += ( i ) ; }    // sum += ( i ) ; }    // sum += ( i ) ; }    // sum += ( i ) ; }    // sum += ( i ) ; }    // sum += ( i ) ; }    // sum += ( i ) ; }    // sum += ( i ) ; }    // sum += ( i ) ; }    // sum += ( i ) ; }    // sum += ( i ) ; }    // sum += ( i ) ; }    // sum += ( i ) ; }    // sum += ( i ) ; }    // sum += ( i ) ; }    // sum += ( i ) ; }    // sum += ( i ) ; }    // sum += ( i ) ; }    // sum += ( i ) ; }    // sum += ( i ) ; }    // sum += ( i ) ; }    // sum += ( i ) ; }    // sum += ( i ) ; }    // sum += ( i ) ; }    // sum += ( i ) ; }    // sum += ( i ) ; }    // sum += ( i ) ; }    // sum += ( i ) ; }    // sum += ( i ) ; }    // sum += ( i ) ; }    // sum += ( i ) ; }    // sum += ( i ) ; }    // sum += ( i ) ; }    // sum += ( i ) ;    // sum += ( i ) ; }    // sum += ( i ) ; }    // sum += ( i ) ; }    // sum += ( i ) ; }    // sum += ( i ) ; }    // sum += ( i ) ;    // sum +=

# END OF TRANSLATION




 

    // 
 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 


# END OF TRANSLATION





 


    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 


# END OF TRANSLATION






 



 
    if ( i == 0 ) {
    if ( i == 0 ) {
    if ( i == 0 ) {
    if ( i == 0 ) {
    if ( i == 0 ) {
    if ( i == 0 ) {
    if ( i == 0 ) {
    if ( i == 0 ) {
    if ( i == 0 ) {
    if ( i == 0 ) {
    if ( i == 0 ) {
    if ( i == 0 ) {
    if ( i == 0 ) {
    if ( i == 0 ) {
    if ( i == 0 ) {
    if ( i == 0 ) {
    if ( i == 0 ) {
    if ( i == 0 ) {
    if ( i == 0 ) {
    if ( i == 0 ) {
    if ( i == 0 ) {
    if ( i == 0 ) {
    if ( i == 0 ) {
    if ( i == 0 ) {
    if ( i == 0 ) {
    if ( i == 0 ) {
    if ( i == 0 ) {
    if ( i == 0 ) {
    if ( i == 0 ) {
    if ( i == 0 ) {
    if ( i == 0 ) {
    if ( i == 0 ) {
    if ( i == 0 ) {
    if ( i == 0 ) {
    if ( i == 0 ) {
    if ( i == 0 ) {
    if ( i == 0 ) {
    if ( i == 0 ) {
    if ( i == 0 ) {
    if ( i == 0 ) {
    if ( i == 0 ) {
    if ( i == 0 ) {
    if ( i == 0 ) {
    if ( i == 0 ) {
    if ( i == 0 ) {
    if ( i == 0 ) {
    if ( i == 0 ) {
    if ( i == 0 ) {
    if ( i == 0 ) {
    if ( i == 0 ) {
    if ( i == 0 ) {
    if ( i == 0 ) {
    if ( i == 0 ) {
    if ( i == 0 ) {
    if ( i == 0 ) {
    if ( i == 0 ) {
    if ( i == 0 ) {
    if ( i == 0 ) {
    if ( i == 0 ) {
    if ( i == 0 ) {
    if ( i == 0 ) {
    if ( i == 0 ) {
    if ( i == 0 ) {
    if ( i == 0 ) {
    if ( i == 0 ) {
    if ( i == 0 ) {
    if ( i == 0 ) {
    if ( i == 0 ) {
    if ( i == 0 ) {
    if ( i == 0 ) {
    if ( i == 0 ) {
    if ( i == 0 ) {
    if ( i == 0 ) {
    if ( i == 0 ) {
    if ( i == 0 ) {
    if ( i == 0 ) {
    if ( i == 0 ) {
    if ( i == 0 ) {
    if ( i == 0 ) {
    if ( i == 0 ) {
    if ( i == 0 ) {
    if ( i == 0 ) {


# END OF TRANSLATION



    // if ( fileName .equals ( fileName ) { return "No" ) ; }

    // if ( fileName .equals ( fileName .equals ( fileName ) { return "No" ) ; }
    // if ( fileName .equals ( fileName ) { return "No" ) ; }
    // if ( fileName .equals ( fileName ) { return "No" ) ; }
    // if ( fileName .equals ( fileName ) { return "No" ) ; }
    // if ( fileName .equals ( fileName ) { return "No" ) { return "No" ; }
    // if ( fileName .equals ( fileName ) { return "No" ) ; }
    // if ( fileName .equals ( fileName ) { return "No" ) ; }
    // if ( fileName .equals ( fileName ) { return "No" ) { return "No" ) ; }
    // if ( fileName .equals ( fileName ) { return "No" ) ; }    // if ( fileName .equals ( fileName ) { return "No" ) { return "No" ) ; }    // if ( fileName .equals ( fileName ) { return "No" ) ; }    // if ( fileName .equals ( fileName ) { return "No" ) { return "No" ) ; }    // if ( fileName .equals ( fileName ) { return "No" ) ; }    // if ( fileName .equals ( fileName ) { return "No" ) { return "No" ) ; }    // if ( fileName .equals ( fileName ) { return "No" ) ; }    // if ( fileName .equals ( fileName ) { return "No" ) { return "No" ) ; }    // if ( fileName .equals ( fileName ) { return "No" ) { return "No" ) ; }    // if ( fileName .equals ( fileName ) { return "No" ) { return "No" ) ; }    // if ( fileName .equals ( fileName ) { return "No" ) { return "No" ) ; }    // if ( fileName .equals ( fileName ) { return "No" ) { return "No" ) ; }    // if ( fileName .equals ( fileName ) { return "No" ) { return "No" ) ; }    // if ( fileName .equals ( fileName ) { return "No" ) { return "No" ) ; }    // if ( fileName .equals ( fileName ) { return "No" ) { return "No" ) ; }    // if ( fileName .equals ( fileName ) { return "No" ) { return "No" ) ; }    // if ( fileName .equals ( fileName ) { return "No" ) { return "No" ) ; }    // if ( fileName .equals ( fileName ) { return "No" ) { return "No" ) ; }    // if ( fileName .equals ( fileName ) { return "No" ) { return "No" ) ; }    // if ( fileName .equals ( fileName ) { return "No" ) { return "No" ) ; }    // if ( fileName .equals ( fileName ) { return "No" ) { return "No" ) ;

# END OF TRANSLATION





    // sum += lst .get ( i ) ; } else {
    // sum += lst .get ( i ) ; } else {
    // sum += lst .get ( i ) ; } else {
    // sum += lst .get ( i ) ; } else {
    // sum += lst .get ( i ) ; } else {
    // sum += lst .get ( i ) ; } else {
    // sum += lst .get ( i ) ; } else {
    // sum += lst .get ( i ) ; } else {
    // sum += lst .get ( i ) ; } else {
    // sum += lst .get ( i ) ; } else {
    // sum += lst .get ( i ) ; } else {
    // sum += lst .get ( i ) ; } else {
    // sum += lst .get ( i ) ; } else {
    // sum += lst .get ( i ) ; } else {
    // sum += lst .get ( i ) ; } else {
    // sum += lst .get ( i ) ; } else {
    // sum += lst .get ( i ) ; } else {
    // sum += lst .get ( i ) ; } else {
    // sum += lst .get ( i ) ; } else {
    // sum += lst .get ( i ) ; } else {
    // sum += lst .get ( i ) ; } else {
    // sum += lst .get ( i ) ; } else {
    // sum += lst .get ( i ) ; } else {
    // sum += lst .get ( i ) ; } else {
    // sum += lst .get ( i ) ; } else {
    // sum += lst .get ( i ) ; } else {
    // sum += lst .get ( i ) ; } else {
    // sum += lst .get ( i ) ; } else {
    // sum += lst .get ( i ) ; } else {
    // sum += lst .get ( i ) ; } else {
    // sum += lst .get ( i ) ; } else {
    // sum += lst .get ( i ) ; } else {
    // sum += lst .get ( i ) ; } else {
    // sum += lst .get ( i ) ; } else {
    // sum += lst .get ( i ) ; } else {
    // sum += lst .get ( i ) ; } else {
    // sum += lst .get ( i ) ; } else {
    // sum += lst .get ( i ) ; } else {
    // sum += lst .get ( i ) ; } else {
    // sum += lst .get ( i ) ; } else {
    // sum += lst .get ( i ) ; } else {
    // sum += lst .get ( i ) ; } else {
    // sum += lst .get ( i ) ; } else {
    // sum += lst .get ( i ) ; } else {
    // sum += lst .get ( i ) ; } else {
    // sum += lst .get ( i ) ; } else {
    // sum += lst .get ( i ) ; } else {
    // sum += lst .get ( i ) ; } else {
    // sum += lst .get ( i ) ; } else {
    // sum += lst .

# END OF TRANSLATION




 

 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 10 ) ; }
 
 
 
 
 10 ) ; }
 
 
 
 
 
 10 ) ; }
 
 
 
 10 ) ; } ; }
 
 
 
 10 ) ; } ; }
 
 
 10 ) ; } ; } ; }
 
 
 10 ) ; } ; } ; } ; }
 
 
 10 ) ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ;

# END OF TRANSLATION



   
   
   = 0 ;
    }
    // 0 , i = Integer .parseInt ( i ) ; }
    // 0 , i = Integer .parseInt ( i ) ; } ;
    // 0 , i = Integer .parseInt ( i ) ; } ; }
    // 0 , i = Integer .parseInt ( i ) ; } ; }
    // 0 , i = Integer .parseInt ( i ) ; } ; }
    // 0 , i = Integer .parseInt ( i ) ; } ; }
    // 0 , i = Integer .parseInt ( i ) ; } ; }
    // 0 , i = Integer .parseInt ( i ) ; } ; }
    // 0 , i = Integer .parseInt ( i ) ; } ; }
    // 0 , i = Integer .parseInt ( i ) ; } ; } ; }
    // 0 , i = Integer .parseInt ( i ) ; } ; } ; }
    // 0 , i = Integer .parseInt ( i ) ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; }

# END OF TRANSLATION



    // 20 ; }

    // 20 ; }
    // 20 ; }
    // 20 ; }
    // 20 ; }
    // 20 ; }
    // 20 ; }
    // 20 ; }
    // 2 ;  // 20 ; }


# END OF TRANSLATION





 


    // 


    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    //  // 


# END OF TRANSLATION




 

    // 
 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 


# END OF TRANSLATION




   
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 


# END OF TRANSLATION








    // if ( char .equals ( char .equals ( char .equals ( char .equals ( char .equals ( char .equals ( char .equals ( char .equals ( char .equals ( char .equals ( char .equals ( char .equals ( char .equals ( char .equals ( char .equals ( char .equals ( char .equals ( char .equals ( char .equals ( char .equals ( char .equals ( char .equals ( char .equals ( char .equals ( char .equals ( char .equals ( char .equals ( char .equals ( char .equals ( char .equals ( char .equals ( char .equals ( char .equals ( char .equals ( char .equals ( char .equals ( char .equals ( char .equals ( char .equals ( char .equals ( char .equals ( char .equals ( char .equals ( char .equals ( char .equals ( char .equals ( char .equals ( char .equals ( char .equals ( char .equals ( char .equals ( char .equals ( char .equals ( char .equals ( char .equals ( char .equals ( char .equals ( char .equals ( char .equals ( char .equals ( char .equals ( char .equals ( char .equals ( char .equals ( char .equals ( char .equals ( char .equals ( char .equals ( char .equals ( char .equals ( char .equals ( char .equals ( char .equals ( char .equals ( char .equals ( char .equals ( char .equals ( char .equals ( char .equals ( char .equals ( char .equals ( char .equals ( char .equals ( char .equals ( char .equals ( char .equals ( char .equals ( char .equals ( char .equals ( char .equals ( char .equals ( char .equals ( char .equals ( char .equals ( char .equals ( char .equals ( char .equals ( char .equals ( char .equals ( char .equals ( char .equals ( char .equals ( char .equals ( char .equals ( char .equals ( char .equals ( char .equals ( char .equals ( char .equals ( char .equals ( char .equals ( char .equals ( char .equals ( char .equals ( char .equals ( char .equals ( char .equals ( char .equals ( char .equals ( char .equals ( char .equals ( char .equals ( char .equals ( char .equals ( char .equals ( char .equals ( char .equals ( char .equals ( char .equals ( char .equals ( char .equals ( char .equals ( char .equals ( char .equals ( char .equals ( char .equals ( char .equals ( char .equals ( char .equals ( char .equals ( char .equals ( char .equals ( char .equals ( char .equals ( char .equals ( char .equals ( char .equals ( char .equals ( char .equals ( char .equals ( char .equals ( char .equals ( char .equals ( char .equals ( char .equals ( char .equals ( char .equals ( char .equals ( char .equals ( char .equals ( char .equals ( char .equals ( char .equals ( char .equals ( char .equals ( char .equals ( char .equals ( char .equals ( char .equals ( char .equals ( char .equals ( char .equals ( char .equals ( char .equals ( char .equals ( char .equals ( char .equals ( char .equals ( char .equals ( char .equals ( char .equals ( char .equals ( char .equals ( char .equals ( char .equals ( char .equals ( char .equals ( char .equals ( char .equals ( char .equals ( char .equals ( char .equals ( char .equals ( char .equals ( char .equals ( char .equals ( char .equals

# END OF TRANSLATION



 0 , "x

# END OF TRANSLATION





 


   
 
   
   
   
   
   
    int remaining = remaining , int remaining , int need , int need , int remaining , int need , int remaining , int need , int remaining , int remaining , int need , int remaining , int remaining , int remaining , int remaining , int remaining , int remaining , int remaining , int remaining , int remaining , int remaining , int remaining , int remaining , int remaining , int remaining , int remaining , int remaining , int remaining , int remaining , int remaining , int remaining , int remaining , int remaining , int remaining , int remaining , int remaining , int remaining , int remaining , int remaining , int remaining , int remaining , int remaining , int remaining , int remaining , int remaining , int remaining , int remaining , int remaining , int remaining , int remaining , int remaining , int remaining , int remaining , int remaining , int remaining , int remaining , int remaining , int remaining , int remaining , int remaining , int remaining , int remaining , int remaining , int remaining , int remaining , int remaining , int remaining , int remaining , int remaining , int remaining , int remaining , int remaining , int remaining , int remaining , int remaining , int remaining , int remaining , int remaining , int remaining , int remaining , int remaining , int remaining , int remaining , int remaining , int remaining , int remaining , int remaining , int remaining , int remaining , int remaining , int remaining , int remaining , int remaining , int remaining , int remaining , int remaining , int remaining , int remaining , int remaining , int remaining , int remaining , int remaining , int remaining , int remaining , int remaining , int remaining , int remaining , int remaining , int remaining , int remaining , int remaining , int remaining , int remaining , int remaining , int remaining , int remaining , int remaining , int remaining , int remaining , int remaining , int remaining , int remaining , int remaining , int remaining , int remaining , int remaining , int remaining , int remaining , int remaining , int remaining , int remaining , int remaining , int remaining , int remaining , int remaining , int remaining , int remaining , int remaining , int remaining , int remaining , int remaining , int remaining , int remaining , int remaining , int remaining , int remaining , int remaining , int remaining , int remaining , int remaining , int remaining , int remaining , int remaining , int remaining , int remaining , int remaining , int remaining , int remaining , int remaining , int remaining , int remaining , int remaining , int remaining , int remaining , int remaining , int remaining , int remaining , int remaining , int remaining , int remaining , int remaining , int remaining , int remaining , int remaining , int remaining , int remaining , int remaining , int remaining , int remaining , int remaining , int remaining , int remaining , int remaining , int remaining , int remaining , int remaining , int remaining , int remaining , int remaining , int remaining , int remaining , int remaining , int remaining , int remaining , int remaining , int remaining , int remaining , int remaining , int remaining , int remaining , int remaining , int remaining , int remaining , int remaining , int remaining , int remaining , int remaining , int remaining , int remaining , int remaining , int remaining , int remaining , int remaining , int remaining , int remaining , int remaining , int remaining , int remaining , int remaining , int remaining , int remaining , int remaining , int remaining , int remaining , int remaining , int remaining , int remaining , int remaining , int remaining , int remaining , int remaining , int remaining , int remaining , int remaining , int remaining , int remaining , int remaining , int remaining , int remaining , int remaining , int remaining , int remaining , int remaining , int remaining , int remaining , int remaining , int remaining , int remaining , int remaining , int remaining , int remaining , int remaining , int remaining , int remaining , int remaining , int remaining , int remaining , int remaining , int remaining , int remaining , int remaining , int remaining , int remaining , int remaining , int remaining , int remaining , int remaining , int remaining , int remaining , int remaining , int remaining , int remaining , int remaining , int remaining , int remaining , int remaining , int remaining , int remaining , int remaining , int remaining , int remaining ,

# END OF TRANSLATION




 


 1 ) ; } ; } else { i += 1 ) ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ;

# END OF TRANSLATION




   
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    //  // 


# END OF TRANSLATION




 

 1 ; }

 
 1 ; }
 
 1 ; }
 
 1 ; }
 
 1 ; }
 
 1 ; }
 
 1 ; }
 
 1 ; }
 
 1 ; }
 
 1 ; }
 
 1 ; }
 1 ; } 
 1 ; } 
 1 ; } 
 1 ; } 
 1 ; } 
 1 ; } 1 ; } 1 ; } 1 ; } 1 ; } 1 ; } 1 ; } 1 ; } 1 ; } 1 ; } 1 ; } 1 ; } 1 ; } 1 ; } 1 ; } 1 ; } 1 ; } 1 ; } 1 ; } 1 ; } 1 ; } 1 ; } 1 ; } 1 ; } 1 ; } 1 ; } 1 ; } 1 ; } 1 ; } 1 ; } 1 ; } 1 ; } 1 ; } 1 ; } 1 ; } 1 ; } 1 ; } 1 ; } 1 ; } 1 ; } 1 ; } 1 ; } 1 ; } 1 ; } 1 ; } 1 ; } 1 ; } 1 ; } 1 ; } 1 ; } 1 ; } 1 ; } 1 ; } 1 ; } 1 ; } 1 ; } 1 ; } 1 ; } 1 ; } 1 ; } 1 ; } 1 ; } 1 ; } 1 ; } 1 ; } 1 ; } 1 ; } 1 ; } 1 ; } 1 ; } 1 ; } 1 ; } 1 ; } 1 ; } 1 ; } 1 ; } 1 ; } 1 ; } 1 ; } 1 ; } 1 ; } 1 ; } 1 ; } 1 ; } 1 ; } 1 ; } 1 ; } 1 ; } 1 ; } 1 ; } 1 ; } 1 ; } 1 ; } 1 ; } 1 ; } 1 ; } 1 ; } 1 ; } 1 ; } 1 ; } 1 ; } 1 ; } 1 ; } 1 ; } 1 ; } 1 ; } 1 ; } 1 ; } 1 ; } 1 ; } 1 ; } 1 ; } 1 ; } 1 ; } 1 ; } 1 ; } 1 ; } 1 ; } 1 ; } 1 ; } 1 ; 1 ; } 1 ; } 1 ; } 1 ; 1 ; } 1 ; } 1 ; } 1 ; 1 ; } 1 ; } 1 ; } 1 ; 1 ; } 1 ; } 1 ; } 1 ; } 1 ; 1 ; } 1 ; } 1 ; 1 ; } 1 ; } 1 ; 1 ; } 1 ; } 1 ; 1 ; } 1 ; 1 ; } 1 ; } 1 ; 1 ; } 1 ; 1 ; } 1 ; 1 ; } 1 ; } 1 ; 1 ; } 1 ; 1 ; } 1 ; 1 ; } 1 ; 1 ; } 1 ; 1 ; } 1 ; 1 ; 1 ; } 1 ; 1 ; } 1 ; 1 ; 1 ; } 1 ; 1 ; 1 ; } 1 ; 1 ; 1 ; 1 ; } 1 ; 1 ; 1 ; 1

# END OF TRANSLATION




 

    int ( n ) ;
 
 
    int ( n ) ;
 
    int ( n ) ;
    }
    int ( n ) ;
    int ( n ) ;
    int ( n ) ;
    int ( n ) ;
    int ( n ) ; }
    int ( n ) ;
    int ( n ) ; }
    int ( n ) ;    int ( n ) ;    }
    int ( n ) ;    }
    int ( n ) ;    int ( n ) ;    int ( n ) ;    int ( n ) ;    }
    int ( n ) ;    }
    int ( n ) ;    }
    int ( n ) ;    }    int ( n ) ;    }    int ( n ) ;    }    int ( n ) ;    int ( n ) ;    }    int ( n ) ;    }    int ( n ) ;    }    int ( n ) ;    }    int ( n ) ;    }    int ( n ) ;    }    int ( n ) ;    }    int ( n ) ;    }    int ( n ) ;    }    int ( n ) ;    }    int ( n ) ;    }    int ( n ) ;    }    int ( n ) ;    }    int ( n ) ;    }    int ( n ) ;    }    int ( n ) ;    }    int ( n ) ;    }    int ( n ) ;    }    int ( n ) ;    }    int ( n ) ;    }    int ( n ) ;    }    int ( n ) ;    }    int ( n ) ;    }    int ( n ) ;    }    int ( n ) ;    }    int ( n ) ;    }    int ( n ) ;    }    int ( n ) ;    }    int ( n ) ;    }    int ( n ) ;    }    int ( n ) ;    }    int ( n ) ;    }    int ( n ) ;    }    int ( n ) ;    }    int ( n ) ;    }    int ( n ) ;    }    int ( n ) ;    }    int ( n ) ;    }    int ( n ) ;    }    int ( n ) ;    }    int ( n ) ;    }    int ( n ) ;    }    int ( n ) ;    }    int ( n ) ;    }    int ( n ) ;    }    int ( n ) ;    }    int ( n ) ;    }    int ( n ) ;    }    int ( n ) ;    }    int ( n ) ;    }    int ( n ) ;    }    int ( n ) ;    }    int ( n ) ;    }    int ( n ) ;    }    int ( n ) ;    }    int ( n ) ;    }    int ( n ) ;    }    int ( n ) ;    }    int ( n ) ;    }    int ( n ) ;    }    int ( n ) ;    }    int ( n ) ;    }    int ( n ) ;    }    int ( n ) ;    }    int ( n ) ;    }    int ( n ) ;    }    int ( n ) ;    }    int ( n ) ;    }    int ( n ) ;    }    int ( n ) ;    }    int ( n ) ;    }    int ( n ) ;    }    int ( n ) ;    }    int ( n ) ;    }    int ( n ) ;    }    int ( n ) ;    }    int ( n ) ;    }    int ( n ) ;    }    int ( n ) ;    }    int ( n ) ;    }    int ( n ) ;    }    int ( n ) ;    }    int ( n ) ;    }    int (

# END OF TRANSLATION





    // 


    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 


# END OF TRANSLATION




    // if ( n == 1 ) { return k ; }
    // if ( n == 1 ) { return k ; }
    // if ( n == 1 ) { return k ; }
    // if ( n == 1 ) { return k ; }
    // if ( n == 1 ) { return k ; }
    // if ( n == 1 ) { return k ; }
    // if ( n == 1 ) { return k ; }
    // if ( n == 1 ) { return k ; }
    // if ( n == 1 ) { return k ; }
    // if ( n == 1 ) { return k ; }
    // if ( n == 1 ) { return k ; }
    // if ( n == 1 ) { return k ; }
    // if ( n == 1 ) { return k ; }
    // if ( n == 1 ) { return k ; }    // if ( n == 1 ) { return k ; }    // if ( n == 1 ) { return k ; }    // if ( n == 1 ) { return k ; }    // if ( n == 1 ) { return k ; }    // if ( n == 1 ) { return k ; }    // if ( n == 1 ) { return k ; }    // if ( n == 1 ) { return k ; }    // if ( n == 1 ) { return k ; }    // if ( n == 1 ) { return k ; }    // if ( n == 1 ) { return k ; }    // if ( n == 1 ) { return k ; }    // if ( n == 1 ) { return k ; }    // if ( n == 1 ) { return k ; }    // if ( n == 1 ) { return k ; }    // if ( n == 1 ) { return k ; }    // if ( n == 1 ) { return k ; }    // if ( n == 1 ) { return k ; }    // if ( n == 1 ) { return k ; }    // if ( n == 1 ) { return k ; }    // if ( n == 1 ) { return k ; }    // if ( n == 1 ) { return k ; }    // if ( n == 1 ) { return k ; }    // if ( n == 1 ) { return k ; }    // if ( n == 1 ) { return k ; }    // if ( n == 1 ) { return k ; }    // if ( n == 1 ) { return k ; }    // if ( n == 1 ) { return k ; }    // if ( n == 1 ) { return k ; }    // if ( n == 1 ) { return k ; }    // if ( n == 1 ) { return k ; }    // if ( n == 1 ) { return k ; }    // if ( n == 1 ) { return k ; }    // if ( n == 1 ) { return k ; }    // if ( n == 1 ) { return k ; }    // if ( n == 1 ) { return k ; }    // if ( n == 1 ) { return k ; }    // if ( n == 1 ) { return k ; }    // if ( n == 1 ) { return k ; }    // if ( n == 1 ) { return k ; }    // if ( n == 1 ) { return k ; }    // if ( n == 1 ) { return k ; }    // if ( n == 1 ) { return k ; }    // if ( n == 1 ) { return k ; }    // if ( n == 1 ) { return k ; }    // if ( n == 1 ) { return k ; }    // if ( n == 1 ) { return k ; }    // if ( n == 1 )

# END OF TRANSLATION







 

    return ( n ) ; }

    }
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    //  // 


# END OF TRANSLATION





 



 

 

 
 
    String s = "" ;
 
 
 
 
 
    String s = "" ;
 
 
 
 
 
 
 
    String s = "" ;
 
 
 
 
 
 
 
    String s = "" ;
 
 
 
 
 10 ) ;
 
 
 
 
 
 
    String s = "" ;
 
 
 
 10 ) ;
 
 
 
 
 10 ) ; }
 
    String s = "" ) ;
 
 
    String s += " ;
    String s += " ;
 
    String s += " ;
 
    String s += " ; 
    String s += " ; 
    String s += " ; }
    String s += " ; 
    String s += " ; }
    String += " ; 
    String += " ; 
    String += " ; }
    String += " ; 
    String += " ; }
    String += " ; 
    String += " ; }
    String += " ; 
    String += " ; 
    String += " ; }
    String += " ; }
    String += " ; 
    String += " ; }
    String += " ; }
    String += " ; 
    String += " ; }
    String += " ; 
    String += " ; }
    String += " ; }
    String += " ; 
    String += " ; }
    String += " ; }
    String += " ; }
    String += " ; String += " ; }
    String += " ; String += " ; }
    String += " ; String += " ; String += " ; String += " ; }
    String += " ; String += " ; String += " ; }
    String += " ; String += " ; String += " ; }
    String += " ; String += " ; String += " ; String += " ; String += " ; }
    String += " ; String += " ; String += " ; String += " ; String += " ; String += " ; String += " ; String += " ; String += " ; String += " ; String += " ; String += " ; String += " ; String += " ; String += " ; String += " ; String += " ; String += " ; String += " ; String += " ; String += " ; String += " ; String += " ; String += " ; String += " ; String += " ; String += " ; String += " ; String += " ; String += " ; String += " ; String += " ; String += " ; String += " ; String += " ; String += " ; String += " ; String += " ; String += "

# END OF TRANSLATION






   


    int diff = ( int ) ;
    int diff = ( int ) ;
    }
    int diff = ( int ) ;
    int diff = ( int ) ;
    int diff = ( int ) ;
    int diff = ( int ) ;
    int diff = ( int ) ;
    int diff = ( int ) ;
    }
    int diff = ( int ) ;
    int diff = ( int ) ;    int diff = ( int ) ;    int diff = ( int ) ;    int diff = ( int ) ;    int diff = ( int ) ;    int diff = ( int ) ;    int diff = ( int ) ;    int diff = ( int ) ;    int diff = ( int ) ;    int diff = ( int ) ;    int diff = ( int ) ;    int diff = ( int ) ;    int diff = ( int ) ;    int diff = ( int ) ;    int diff = ( int ) ;    int diff = ( int ) ;    int diff = ( int ) ;    int diff = ( int ) ;    int diff = ( int ) ;    int diff = ( int ) ;    int diff = ( int ) ;    int diff = ( int ) ;    int diff = ( int ) ;    int diff = ( int ) ;    int diff = ( int ) ;    int diff = ( int ) ;    int diff = ( int ) ;    int diff = ( int ) ;    int diff = ( int ) ;    int diff = ( int ) ;    int diff = ( int ) ;    int diff = ( int ) ;    int diff = ( int ) ;    int diff = ( int ) ;    int diff = ( int ) ;    int diff = ( int ) ;    int diff = ( int ) ;    int diff = ( int ) ;    int diff = ( int ) ;    int diff = ( int ) ;    int diff = ( int ) ;    int diff = ( int ) ;    int diff = ( int ) ;    int diff = ( int ) ;    int diff = ( int ) ;    int diff = ( int ) ;    int diff = ( int ) ;    int diff = ( int ) ;    int diff = ( int ) ;    int diff = ( int ) ;    int diff = ( int ) ;    int diff = ( int ) ;    int diff = int diff = ( int ) ;    int diff = int diff = ( int ) ;    int diff = int diff = int diff = ( int ) ;    int diff = int diff = int diff = int diff = int diff = int diff = int diff = int diff = int diff = int diff = int diff = int diff = int diff = int diff = int diff = int diff = int diff = int diff = int diff = int diff = int diff = int diff = int diff = int diff = int diff = int diff = int diff = int diff = int diff = int diff = int diff = int diff = int diff = int diff = int diff = int diff = int diff = int diff = int diff = int diff = int diff = int diff = int diff = int diff = int diff = int diff = int diff = int diff = int diff = int diff = int diff = int diff = int diff = int diff = int diff = int diff = int diff = int diff = int diff = int diff = int diff = int diff = int diff = int diff = int diff = int diff = int diff = int diff = int diff = int diff = int diff = int diff = int diff = int diff = int diff = int diff =

# END OF TRANSLATION




 

 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 


# END OF TRANSLATION





 


   
   = 0 ;
    }
   
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 


# END OF TRANSLATION





    // 

    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    //  // 


# END OF TRANSLATION





    // 10 ; }

    // 1 = p ;
    // 2 = p ;
    // 2 = p ;
    // 2 = p ;
    // 2 = p ;
    // 2 = p ;
    // 2 = p ; 
    // 2 = p ; 
    // 2 = p ; 
    // 2 = p ; 
    // 2 = p ; 
    // 2 = p ; 
    // 2 = p ;  // 2 = p ;  // 2 = p ;  // 2 = p ;  // 2 = p ;  // 2 = p ;  // 2 = p ;  // 2 = p ;  // 2 = p ;  // 2 = p ;  // 2 = p ;  // 2 = p ;  // 2 = p ;  // 2 = p ;  // 2 = p ;  // 2 = p ;  // 2 = p ;  // 2 = p ;  // 2 = p ;  // 2 = p ;  // 2 = p ;  // 2 = p ;  // 2 = p ;  // 2 = p ;  // 2 = p ;  // 2 = p ;  // 2 = p ;  // 2 = p ;  // 2 = p ;  // 2 = p ;  // 2 = p ;  // 2 = p ;  // 2 = p ;  // 2 = p ;  // 2 = p ;  // 2 = p ;  // 2 = p ;  // 2 = p ;  // 2 = p ;  // 2 = p ;  // 2 = p ;  // 2 = p ;  // 2 = p ;  // 2 = p ;  // 2 = p ;  // 2 = p ;  // 2 = p ;  // 2 = p ;  // 2 = p ;  // 2 = p ;  // 2 = p ;  // 2 = p ;  // 2 = p ;  // 2 = p ;  // 2 = p ;  // 2 = p ;  // 2 = p ;  // 2 = p ;  // 2 = p ;  // 2 = p ;  // 2 = p ;  // 2 = p ;  // 2 = p ;  // 2 = p ;  // 2 = p ;  // 2 = p ;  // 2 = p ;  // 2 = p ;  // 2 = p ;  // 2 = p ;  // 2 = p ;  // 2 = p ;  // 2 = p ;  // 2 = p ;  // 2 = p ;  // 2 = p ;  // 2 = p ;  // 2 = p ;  // 2 = p ;  // 2 = p ;  // 2 = p ;  // 2 = p ;  // 2 = p ;  // 2 = p ;  // 2 = p ;  // 2 = p ;  // 2 = p ;  // 2 = p ;  // 2 = p ;  // 2 = p ;  // 2 = p ;  // 2 = p ;  // 2 = p ;  // 2 = p ;  // 2 = p ;  // 2 = p ;  // 2 = p ;  // 2 = p ;  // 2 = p ;  // 2 = p ;  // 2 = p ;

# END OF TRANSLATION




 


    // 
 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //

# END OF TRANSLATION

 int temp = ( int ) ; } ; }
 int temp = ( int ) ; } ; }
 int temp = ( int ) ; } ; } ; }
 int temp = ( int ) ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ;

# END OF TRANSLATION





    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    //  // 


# END OF TRANSLATION






    // 


    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    //  // 


# END OF TRANSLATION

List < Integer > ( int ) ; } ; }



List < Integer > ( int ) ; } ; } ; }




    // 

    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    //  // 


# END OF TRANSLATION





 

    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    //  // 


# END OF TRANSLATION



 
    // 
 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 


# END OF TRANSLATION




 


 

 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 10 ) {
 
 10 ) ; }
 
 10 ) ; }
 
 10 ; }
 
 10 ; }
 
 10 ; }
 
 1 }
 
 1 }
 10 ; }
 
 1 }
 1 }
 10 ; 
 1 }
 1 }
 1 ; 
 1 } 1 ; 1 } 1 ; 1 } 1 ; 1 } 1 ; 1 } 1 ; 1 } 1 ; 1 } 1 ; 1 } 1 ; 1 1 ; 2 1 ; 2 1 ; 2 1 ; 2 1 ; 2 1 ; 2 1 ; 2 1 ; 2 1 ; 2 1 ; 2 1 ; 2 1 ; 2 1 ; 2 1 ; 2 1 ; 2 1 ; 2 1 ; 2 1 ; 2 1 ; 2 1 ; 2 1 ; 2 1 ; 2 1 ; 2 1 ; 2 1 ; 2 1 ; 2 1 ; 2 1 ; 2 1 ; 2 1 ; 2 1 ; 2 1 ; 2 ; 1 ; 2 1 ; 2 ; 1 ; 2 ; 1 ; 2 ; 1 ; 2 ; 1 ; 2 ; 1 ; 2 ; 1 ; 2 ; 1 ; 2 ; 1 ; 2 ; 1 ; 2 ; 1 ; 2 ; 1 ; 2 ; 1 ; 2 ; 1 ; 2 ; 1 ; 2 ; 1 ; 2 ; 1 ; 2 ; 1 ; 2 ; 1 ; 2 ; 1 ; 2 ; 1 ; 2 ; 1 ; 2 ; 1 ; 2 ; 1 ; 2 ; 1 ; 2 ; 1 ; 2 ; 1 ; 2 ; 1 ; 2 ; 1 ; 2 ; 1 ; 2 ; 1 ; 2 ; 1 ; 2 ; 1 ; 2 ; 1 ; 2 ; 1 ; 2 ; 1 ; 2 ; 1 ; 2 ; 1 ; 2 ; 1 ; 2 ; 1 ; 2 ; 1 ; 2 ; 1 ; 2 ; 1 ; 2 ; 1 ; 2 ; 1 ; 2 ; 1 ; 2 ; 1 ; 2 ; 1 ; 2 ; 1 ; 2 ; 1 ; 2 ; 1 ; 2 ; 1 ; 2 ; 1 ; 2 ; 1 ; 2 ; 1 ; 2 ; 1 ; 2 ; 1 ; 2 ; 1 ; 2 ; 1 ; 2 ; 1 ; 2 ; 1 ; 2 ; 1 ; 2 ; 1 ; 2 ; 1 ; 2 ; 1 ; 2 ; 1 ; 2 ; 1 ; 2 ; 1 ; 2 ; 1 ; 2 ; 1 ; 2 ; 1 ; 2 ; 1 ; 2 ; 1 ; 2 ; 1 ; 2 ; 1 ; 2 ; 1 ; 2 ; 1 ; 2 ; 1 ; 2 ; 1 ; 2 ; 1 ; 2 ; 1 ; 2 ; 1 ; 2 ; 1 ;

# END OF TRANSLATION



    int i = 0 ; i++ ) {
    int i = 0 ; }
    int j = 0 ; i++ ) ; }
    int j = 0 ; }
    int i = 0 ; }
    int j = 0 ; }
    int j = 0 ; i++ ) ; }
    int j = 0 ; }
    int j = 0 ; i++ ) ; }
    int j = 0 ; }
    int j = 0 ; i++ ; }
    int j = 0 ; }
    int j = 0 ; i++ ; }
    int j = 0 ; }
    int j = 0 ; i++ ; }
    int j = 0 ; }
    int j = 0 ; i++ ; }
    int j = 0 ; }
    int j = 0 ; i++ ; }
    int j = 0 ; }
    int j = 0 ; i++ ; }
    int j = 0 ; }
    int j = 0 ; i++ ; }
    int j = 0 ; }
    int j = 0 ; i++ ; }
    int j = 0 ; }
    int j = 0 ; i++ ; }
    int j = 0 ; }
    int j = 0 ; i++ ; }
    int j = 0 ; i++ ; }
    int j = 0 ; }
    int j = 0 ; i++ ; }
    int j = 0 ; i++ ; }
    int j = 0 ; }    int j = 0 ; i++ ; }    int j = 0 ; i++ ; }    int j = 0 ; }    int j = 0 ; i++ ; }    int j = 0 ;    int j = 0 ; i++ ; }    int j = 0 ;    int j = 0 ; i++ ; }    int j = 0 ;    int j = 0 ; i++ ; }    int j = 0 ;    int j = 0 ; i++ ; }    int j = 0 ;    int j = 0 ; i++ ;    int j = 0 ; i++ ;    int j = 0 ;    int j = 0 ; i++ ;    int j = 0 ;    int j = 0 ; i++ ;    int j = 0 ;    int j = 0 ; i++ ;    int j = 0 ;    int j = 0 ; i++ ;    int j = 0 ;    int j = 0 ; i++ ;    int j = 0 ;    int j = 0 ; i++ ;    int j = 0 ;    int j = 0 ;    int j = 0 ; i++ ;    int j = 0 ;    int j = 0 ;    int j = 0 ; i++ ;    int j = 0 ;    int j = 0 ;    int j = 0 ; i++ ;    int j = 0 ;    int j = 0 ;    int j = 0 ;    int j = 0 ;    int j = 0 ;    int j = 0 ;    int j = 0 ; i++ ;    int j = 0 ;    int j = 0 ;   

# END OF TRANSLATION




   
    // 10 ) ; }
    // 10 ) ; }
    // 10 ) ; }
    // 10 ) ; }
    // 10 ) ; }
    // 1 ) ; }
    // 1 ) ; 
    // 1 ) ; 
    // 2 ) ; }
    // 1 ) ;  // 2 ) ; }
    // 1 ) ;  // 2 ) ;  // 2 ) ;  // 2 ) ; }

# END OF TRANSLATION





   
    }
   
    }
   
    }
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    //  // 


# END OF TRANSLATION






   

    int i = 0 ;
    }
   
    int count ( i ) ;
    }
    int j = 0 ;
    int count ( i ) ;
    }
    int j = 0 ;
    }
    int j = 0 ;
    }
    int count ( i ) ;
    }
    int j = 0 ;
    }
    int count ( i ) ;
    }
    int j = 0 ;    }
    int count ( i ) ;    }
    int count ( i ) ;    }
    int j = 0 ;    }
    int count ( i ) ;    }
    int count ( i ) ;    }
    int count ( i ) ;    }
    int count ( i ) ;    }
    int count ( i ) ;    }
    int count ( i ) ;    }
    int count ( i ) ;    }    int count ( i ) ;    }    int count ( i ) ;    }    int count ( i ) ;    }    int count ( i ) ;    }    int count ( i ) ;    }    int count ( i ) ;    }    int count ( i ) ;    }    int count ( i ) ;    }    int count ( i ) ;    }    int count ( i ) ;    }    int count ( i ) ;    }    int count ( i ) ;    }    int count ( i ) ;    }    int count ( i ) ;    }    int count ( i ) ;    }    int count ( i ) ;    }    int count ( i ) ;    }    int count ( i ) ;    }    int count ( i ) ;    }    int count ( i ) ;    }    int count ( i ) ;    }    int count ( i ) ;    }    int count ( i ) ;    }    int count ( i ) ;    }    int count ( i ) ;    }    int count ( i ) ;    }    int count ( i ) ;    }    int count ( i ) ;    }    int count ( i ) ;    }    int count ( i ) ;    }    int count ( i ) ;    }    int count ( i ) ;    }    int count ( i ) ;    }    int count ( i ) ;    }    int count ( i ) ;    }    int count ( i ) ;    }    int count ( i ) ;    }    int count ( i ) ;    }    int count ( i ) ;    }    int count ( i ) ;    }    int count ( i ) ;    int count ( i ) ;    }    int count ( i ) ;    }    int count ( i ) ;    }    int count ( i ) ;    }    int count ( i ) ;    }    int count ( i ) ;    int count ( i ) ;    }    int count ( i ) ;    }    int count ( i ) ;    }    int count ( i ) ;    }    int count ( i ) ;    int count ( i ) ;    }    int count ( i ) ;    }    int count ( i ) ;    }    int count ( i ) ;    int count ( i ) ;    }    int count ( i ) ;    }    int count ( i ) ;    }    int count ( i ) ;    }    int count ( i ) ;    int count ( i ) ;    }    int count ( i ) ;   

# END OF TRANSLATION





 



   
 
    ( b ) ;
    ( b ) ;
    ( b ) ;
    ( b ) ;
    ( b ) ;
    ( b ) ;
    ( b ) ;
    ( b ) ;
    ( b ) ;
    ( b ) ;
    ( b ) ;
    ( b ) ;
    ( b ) ;
    ( b ) ;
    ( b ) ;
    ( b ) ;
    ( b ) ;
    ( b ) ;
    ( b ) ;    ( b ) ;    ( b ) ;    ( b ) ;    ( b ) ;    ( b ) ;    ( b ) ;    ( b ) ;    ( b ) ;    ( b ) ;    ( b ) ;    ( b ) ;    ( b ) ;    ( b ) ;    ( b ) ;    ( b ) ;    ( b ) ;    ( b ) ;    ( b ) ;    ( b ) ;    ( b ) ;    ( b ) ;    ( b ) ;    ( b ) ;    ( b ) ;    ( b ) ;    ( b ) ;    ( b ) ;    ( b ) ;    ( b ) ;    ( b ) ;    ( b ) ;    ( b ) ;    ( b ) ;    ( b ) ;    ( b ) ;    ( b ) ;    ( b ) ;    ( b ) ;    ( b ) ;    ( b ) ;    ( b ) ;    ( b ) ;    ( b ) ;    ( b ) ;    ( b ) ;    ( b ) ;    ( b ) ;    ( b ) ;    ( b ) ;    ( b ) ;    ( b ) ;    ( b ) ;    ( b ) ;    ( b ) ;    ( b ) ;    ( b ) ;    ( b ) ;    ( b ) ;    ( b ) ;    ( b ) ;    ( b ) ;    ( b ) ;    ( b ) ;    ( b ) ;    ( b ) ;    ( b ) ;    ( b ) ;    ( b ) ;    ( b ) ;    ( b ) ;    ( b ) ;    ( b ) ;    ( b ) ;    ( b ) ;    ( b ) ;    ( b ) ;    ( b ) ;    ( b ) ;    ( b ) ;    ( b ) ;    ( b ) ;    ( b ) ;    ( b ) ;    ( b ) ;    ( b ) ;    ( b ) ;    ( b ) ;    ( b ) ;    ( b ) ;    ( b ) ;    ( b ) ;    ( b ) ;    ( b ) ;    ( b ) ;    ( b ) ;    ( b ) ;    ( b ) ;    ( b ) ;    ( b ) ;    ( b ) ;    ( b ) ;    ( b ) ;    ( b ) ;    ( b ) ;    ( b ) ;    ( b ) ;    ( b ) ;    ( b ) ;    ( b ) ;    ( b ) ;    ( b ) ;    ( b ) ;    ( b ) ;    ( b ) ;    ( b ) ;    ( b ) ;    ( b ) ;    ( b ) ;    ( b ) ;    ( b ) ;    ( b ) ;    ( b ) ;    ( b ) ;    ( b ) ;    ( b ) ;    ( b ) ;    ( b ) ;    ( b ) ;    ( b ) ;    ( b ) ;    ( b ) ;    ( b ) ;    ( b ) ;    ( b ) ;    ( b ) ;    ( b ) ;    ( b ) ;    ( b ) ;    ( b ) ;    ( b ) ;    ( b ) ;    ( b ) ;    ( b ) ;    ( b ) ;    ( b ) ;    ( b ) ;    ( b ) ;    ( b ) ;    ( b ) ;    ( b ) ;   

# END OF TRANSLATION




 

    int count = ( int ) ;
 
    int count = ( int ) ;
    }
   
    int count = ( int ) ;
    int count = ( int ) ;
    int count = ( int ) ;
    int count = ( int ) ;
    int count = ( int ) ;
    int count = count ;    }
    int count = count ;    int count = count ;    }
    int count = count ;    int count ;    int count = count ;    int count = count ;    int count ;    }
    int count = count ;    int count = count ;    int count = count ;    int count = count ;    int count = count ;    int count = count ;    int count = count ;    int count = count ;    int count = count ;    int count = count ;    int count = count ;    int count = count ;    int count = count ;    int count = count ;    int count = count ;    int count = count ;    int count = count ;    int count = count ;    int count = count ;    int count = count ;    int count = count ;    int count = count ;    int count = count ;    int count = count ;    int count = count ;    int count = count ;    int count = count ;    int count = count ;    int count = count ;    int count = count ;    int count = count ;    int count = count ;    int count = count ;    int count = count ;    int count = count ;    int count = count ;    int count = count ;    int count = count ;    int count = count ;    int count = count ;    int count = count ;    int count = count ;    int count = count ;    int count = count ;    int count = count ;    int count = count ;    int count = count ;    int count = count ;    int count = count ;    int count = count ;    int count = count ;    int count = count ;    int count = count ;    int count = count ;    int count = count ;    int count = count ;    int count = count ;    int count = count ;    int count = count ;    int count = count ;    int count = count ;    int count = count ;    int count = count ;    int count = count ;    int count = count ;    int count = count ;    int count = count ;    int count = count ;    int count = count ;    int count = count ;    int count = count ;    int count = count ;    int count = count ;    int count = count ;    int count = count ;    int count = count ;    int count = count ;    int count = count ;    int count = count ;    int count = count ;    int count = count ;    int count = count ;    int count = count ;    int count = count ;    int count = count ;    int count = count ;    int count = count ;    int count = count ;    int count = count ;    int count = count ;    int count = count ;    int count = count ;    int count = count ;    int count = count ;    int count = count ;    int count = count ;    int count = count ;    int count = count ;    int count = count ;    int count = count ;    int count = count ;    int count = count ;    int count = count ;    int count = count ;    int count = count ;    int count = count ;    int count = count ;    int count = count ;    int count = count ;    int count = count ;    int count = count ;    int count = count ;    int count = count ;    int count = count ;    int count = count ;    int count = count ;    int count = count ;    int count = count ;    int count = count ;    int count = count ;    int count = count ;    int count = count ;    int count = count ;    int count = count ;    int count

# END OF TRANSLATION





    // 

    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 


# END OF TRANSLATION





 

    // if ( n ) {
    // if ( n ) {
    // if ( n ) {
    // if ( n ) {
    // if ( n ) {
    // if ( n ) {
    // if ( n ) {
    // if ( n ) {
    // if ( n ) {
    // if ( n ) {
    // if ( n ) {
    // if ( n ) {
    // if ( n ) {
    // if ( n ) {
    // if ( n ) {
    // if ( n ) {
    // if ( n ) {
    // if ( n ) {
    // if ( n ) {
    // if ( n ) {
    // if ( n ) {
    // if ( n ) {
    // if ( n ) {
    // if ( n ) {
    // if ( n ) {
    // if ( n ) {
    // if ( n ) {
    // if ( n ) {
    // if ( n ) {
    // if ( n ) {
    // if ( n ) {
    // if ( n ) {
    // if ( n ) {
    // if ( n ) {
    // if ( n ) {
    // if ( n ) {
    // if ( n ) {
    // if ( n ) {
    // if ( n ) {
    // if ( n ) {
    // if ( n ) {
    // if ( n ) {
    // if ( n ) {
    // if ( n ) {
    // if ( n ) {
    // if ( n ) {
    // if ( n ) {
    // if ( n ) {
    // if ( n ) {
    // if ( n ) {
    // if ( n ) {
    // if ( n ) {
    // if ( n ) {
    // if ( n ) {
    // if ( n ) {
    // if ( n ) {
    // if ( n ) {
    // if ( n ) {
    // if ( n ) {
    // if ( n ) {
    // if ( n ) {
    // if ( n ) {
    // if ( n ) {
    // if ( n ) {
    // if ( n ) {
    // if ( n ) {
    // if ( n ) {
    // if ( n ) {
    // if ( n ) {
    // if ( n ) {
    // if ( n ) {
    // if ( n ) {
    // if ( n ) {
    // if ( n ) {
    // if ( n ) {
    // if ( n ) {
    // if ( n ) {
    // if ( n ) {
    // if ( n ) {
    // if ( n ) {
    // if ( n ) {
    // if ( n ) {
    // if ( n ) {
    // if ( n ) {
    // if ( n ) {
    // if ( n ) {
    // if ( n ) {
    // if ( n ) {
    // if ( n ) {
    // if ( n ) {
    // if ( n ) {
    // if ( n ) {
    // if ( n ) {
    // if ( n ) {
    // if ( n ) {
    // if ( n ) {
    // if ( n ) {
    // if ( n ) {
    // if ( n ) {
    // if ( n ) {
    // if ( n ) {
    // if ( n ) {
    // if ( n ) {
    // if ( n ) {
    // if ( n ) {
    // if ( n ) {
    // if ( n ) {
    // if ( n ) {

# END OF TRANSLATION



    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    //  // 


# END OF TRANSLATION





 



    ( n , int ) ;
 
 
    ( n , int ) ;
 
    ( n , int ) ;
    ( n , int ) ;
    ( n ) ;
    ( n ) ;
    ( n ) ;
    ( n ) ;
    ( n ) ;
    ( n ) ;
    ( n ) ;    ( n ) ;    ( n ) ;    ( n ) ;    ( n ) ;    ( n ) ;    ( n ) ;    ( n ) ;    ( n ) ;    ( n ) ;    ( n ) ;    ( n ) ;    ( n ) ;    ( n ) ;    ( n ) ;    ( n ) ;    ( n ) ;    ( n ) ;    ( n ) ;    ( n ) ;    ( n ) ;    ( n ) ;    ( n ) ;    ( n ) ;    ( n ) ;    ( n ) ;    ( n ) ;    ( n ) ;    ( n ) ;    ( n ) ;    ( n ) ;    ( n ) ;    ( n ) ;    ( n ) ;    ( n ) ;    ( n ) ;    ( n ) ;    ( n ) ;    ( n ) ;    ( n ) ;    ( n ) ;    ( n ) ;    ( n ) ;    ( n ) ;    ( n ) ;    ( n ) ;    ( n ) ;    ( n ) ;    ( n ) ;    ( n ) ;    ( n ) ;    ( n ) ;    ( n ) ;    ( n ) ;    ( n ) ;    ( n ) ;    ( n ) ;    ( n ) ;    ( n ) ;    ( n ) ;    ( n ) ;    ( n ) ;    ( n ) ;    ( n ) ;    ( n ) ;    ( n ) ;    ( n ) ;    ( n ) ;    ( n ) ;    ( n ) ;    ( n ) ;    ( n ) ;    ( n ) ;    ( n ) ;    ( n ) ;    ( n ) ;    ( n ) ;    ( n ) ;    ( n ) ;    ( n ) ;    ( n ) ;    ( n ) ;    ( n ) ;    ( n ) ;    ( n ) ;    ( n ) ;    ( n ) ;    ( n ) ;    ( n ) ;    ( n ) ;    ( n ) ;    ( n ) ;    ( n ) ;    ( n ) ;    ( n ) ;    ( n ) ;    ( n ) ;    ( n ) ;    ( n ) ;    ( n ) ;    ( n ) ;    ( n ) ;    ( n ) ;    ( n ) ;    ( n ) ;    ( n ) ;    ( n ) ;    ( n ) ;    ( n ) ;    ( n ) ;    ( n ) ;    ( n ) ;    ( n ) ;    ( n ) ;    ( n ) ;    ( n ) ;    ( n ) ;    ( n ) ;    ( n ) ;    ( n ) ;    ( n ) ;    ( n ) ;    ( n ) ;    ( n ) ;    ( n ) ;    ( n ) ;    ( n ) ;    ( n ) ;    ( n ) ;    ( n ) ;    ( n ) ;    ( n ) ;    ( n ) ;    ( n ) ;    ( n ) ;    ( n ) ;    ( n ) ;    ( n ) ;    ( n ) ;    ( n ) ;    ( n ) ;    ( n ) ;    ( n ) ;    ( n ) ;    ( n ) ;    ( n ) ;    ( n ) ;    ( n ) ;    ( n ) ;    ( n ) ;    ( n ) ;    ( n ) ;    ( n ) ;    ( n ) ;    ( n ) ;    ( n ) ;    ( n ) ;    ( n ) ;    (

# END OF TRANSLATION




    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 


# END OF TRANSLATION




 

 
 
 
 
 
 
 
 
 
 
 
 
 
 
 10 ) ;
 
 10 , 2 ) ; 
 10 , 2 ) ; 
 1 , 2 ) ; 2 ) ; 2 ) ; 2 ) ; 2 ) ; 2 ) ; 2 ) ; 2 ) ; 2 ) ; 2 ) ; 2 ) ; 2 ) ; 2 ) ; 2 ) ; 2 ) ; 2 ) ; 2 ) ; 2 ) ; 2 ) ; 2 ) ; 2 ) ; 2 ) ; 2 ) ; 2 ) ; 2 ) ; 2 ) ; 2 ) ; 2 ) ; 2 ) ; 2 ) ; 2 ) ; 2 ) ; 2 ) ; 2 ) ; 2 ) ; 2 ) ; 2 ) ; 2 ) ; 2 ) ; 2 ) ; 2 ) ; 2 ) ; 2 ) ; 2 ) ; 2 ) ; 2 ) ; 2 ) ; 2 ) ; 2 ) ; 2 ) ; 2 ) ; 2 ) ; 2 ) ; 2 ) ; 2 ) ; 2 ) ; 2 ) ; 2 ) ; 2 ) ; 2 ) ; 2 ) ; 2 ) ; 2 ) ; 2 ) ; 2 ) ; 2 ) ; 2 ) ; 2 ) ; 2 ) ; 2 ) ; 2 ) ; 2 ) ; 2 ) ; 2 ) ; 2 ) ; 2 ) ; 2 ) ; 2 ) ; 2 ) ; 2 ) ; 2 ) ; 2 ) ; 2 ) ; 2 ) ; 2 ) ; 2 ) ; 2 ) ; 2 ) ; 2 ) ; 2 ) ; 2 ) ; 2 ) ; 2 ) ; 2 ) ; 2 ) ; 2 ) ; 2 ) ; 2 ) ; 2 ) ; 2 ) ; 2 ) ; 2 ) ; 2 ) ; 2 ) ; 2 ) ; 2 ) ; 2 ) ; 2 ) ; 2 ) ; 2 ) ; 2 ) ; 2 ) ; 2 ) ; 2 ) ; 2 ) ; 2 ) ; 2 ) ; 2 ) ; 2 ) ; 2 ) ; 2 ) ; 2 ) ; 2 ) ; 2 ) ; 2 ) ; 2 ) ; 2 ) ; 2 ) ; 2 ) ; 2 ) ; 2 ) ; 2 ) ; 2 ) ; 2 ) ; 2 ) ; 2 ) ; 2 ) ; 2 ) ; 2 ) ; 2 ) ; 2 ) ; 2 ) ; 2 ) ; 2 ) ; 2 ) ; 2 ) ; 2 ) ; 2 ) ; 2 ) ; 2 ) ; 2 ) ; 2 ) ; 2 ) ; 2 ) ; 2 ) ; 2 ) ; 2 ) ; 2 ) ; 2 ) ; 2 ) ; 2 ) ; 2 ) ; 2 ) ; 2 ) ; 2 ) ; 2 ) ; 2 ) ; 2 ) ; 2 ) ; 2 ) ; 2 ) ; 2 ) ; 2 ) ; 2 ) ; 2 ) ; 2 ) ; 2 ) ; 2 ) ; 2 ) ; 2 ) ; 2 ) ; 2 ) ; 2 ) ; 2 ) ; 2 ) ; 2 ) ; 2 ) ; 2 ) ; 2 ) ; 2 ) ; 2 ) ; 2 ) ; 2 ) ; 2 ) ; 2 ) ; 2 ) ; 2 ) ; 2 ) ; 2 ) ; 2 ) ; 2 ) ; 2 ) ; 

# END OF TRANSLATION




 
    {
   
    .get ( i ) ; } ; }
    }
   
    {
    .get ( i ) ; }
    {
    .get ( i ) ; }
    {
    .get ( i ) ; }
    {
    .get ( i ) ; }
    {
    .get ( i ) ; }
    {
    .get ( i ) ; }
    {
    .get ( i ) ; }
    {
    .get ( i ) ; }
    {
    .get ( i ) ; }
    {
    .get ( i ) ; }
    {
    .get ( i ) ; }    {
    .get ( i ) ;    {
    .get ( i ) ; }    {
    .get ( i ) ; }    {
    .get ( i ) ;    {
    .get ( i ) ; }    {
    .get ( i ) ; }    {
    .get ( i ) ;    {
    .get ( i ) ;    {
    .get ( i ) ;    {
    .get ( i ) ;    {
    .get ( i ) ;    {
    .get ( i ) ;    {
    .get ( i ) ;    {
    .get ( i ) ;    }    {
    .get ( i ) ;    {
    .get ( i ) ;    {
    .get ( i ) ;    {
    .get ( i ) ;    {
    .get ( i ) ;    {
    .get ( i ) ;    {
    .get ( i ) ;    {    .get ( i ) ;    }    {
    .get ( i ) ;    {    .get ( i ) ;    {    .get ( i ) ;    }    {
    .get ( i ) ;    {    .get ( i ) ;    {    .get ( i ) ;    }    {    .get ( i ) ;    {    .get ( i ) ;    {    .get ( i ) ;    }    {    .get ( i ) ;    }    {    .get ( i ) ;    {    .get ( i ) ;    }    {    .get ( i ) ;    }    {    .get ( i ) ;    {    .get ( i ) ;    {    .get ( i ) ;    }    {    .get ( i ) ;    {    .get ( i ) ;    }    {    .get ( i ) ;    }    {    .get ( i ) ;    {    .get ( i ) ;    }    {    .get ( i ) ;    {    .get ( i ) ;    }    {    .get ( i ) ;    }    {    .get ( i ) ;    {    .get ( i ) ;    }    {    .get ( i ) ;    }    {    .get ( i ) ;    {    .get ( i ) ;    {    .get ( i ) ;    }    {    .get ( i ) ;    }    {    .get ( i ) ;    {    .get ( i ) ;    }    {    .get ( i ) ;    {    .get ( i )

# END OF TRANSLATION





 



    ( a * c ) ;
 
    ( a * c ) ;
    ( a * c ) ;
    ( a ) ;
    ( a ) ;
    ( a ) ;
    ( a ) ;
    ( a ) ;
    ( a ) ;
    ( a ) ;
    ( a ) ;
    ( a ) ;
    ( a ) ;
    ( a ) ;
    ( a ) ;
    ( a ) ;
    ( a ) ;    ( a ) ;    ( a ) ;    ( a ) ;    ( a ) ;    ( a ) ;    ( a ) ;    ( a ) ;    ( a ) ;    ( a ) ;    ( a ) ;    ( a ) ;    ( a ) ;    ( a ) ;    ( a ) ;    ( a ) ;    ( a ) ;    ( a ) ;    ( a ) ;    ( a ) ;    ( a ) ;    ( a ) ;    ( a ) ;    ( a ) ;    ( a ) ;    ( a ) ;    ( a ) ;    ( a ) ;    ( a ) ;    ( a ) ;    ( a ) ;    ( a ) ;    ( a ) ;    ( a ) ;    ( a ) ;    ( a ) ;    ( a ) ;    ( a ) ;    ( a ) ;    ( a ) ;    ( a ) ;    ( a ) ;    ( a ) ;    ( a ) ;    ( a ) ;    ( a ) ;    ( a ) ;    ( a ) ;    ( a ) ;    ( a ) ;    ( a ) ;    ( a ) ;    ( a ) ;    ( a ) ;    ( a ) ;    ( a ) ;    ( a ) ;    ( a ) ;    ( a ) ;    ( a ) ;    ( a ) ;    ( a ) ;    ( a ) ;    ( a ) ;    ( a ) ;    ( a ) ;    ( a ) ;    ( a ) ;    ( a ) ;    ( a ) ;    ( a ) ;    ( a ) ;    ( a ) ;    ( a ) ;    ( a ) ;    ( a ) ;    ( a ) ;    ( a ) ;    ( a ) ;    ( a ) ;    ( a ) ;    ( a ) ;    ( a ) ;    ( a ) ;    ( a ) ;    ( a ) ;    ( a ) ;    ( a ) ;    ( a ) ;    ( a ) ;    ( a ) ;    ( a ) ;    ( a ) ;    ( a ) ;    ( a ) ;    ( a ) ;    ( a ) ;    ( a ) ;    ( a ) ;    ( a ) ;    ( a ) ;    ( a ) ;    ( a ) ;    ( a ) ;    ( a ) ;    ( a ) ;    ( a ) ;    ( a ) ;    ( a ) ;    ( a ) ;    ( a ) ;    ( a ) ;    ( a ) ;    ( a ) ;    ( a ) ;    ( a ) ;    ( a ) ;    ( a ) ;    ( a ) ;    ( a ) ;    ( a ) ;    ( a ) ;    ( a ) ;    ( a ) ;    ( a ) ;    ( a ) ;    ( a ) ;    ( a ) ;    ( a ) ;    ( a ) ;    ( a ) ;    ( a ) ;    ( a ) ;    ( a ) ;    ( a ) ;    ( a ) ;    (

# END OF TRANSLATION





 


    int ( int ) ;
 
 
    int ( int ) ;
 
    int ( int ) ;
 
    int ( int ) ;
    int ) ;
    int ( int ) ;
    int ( int ) ;
    int ( int ) ;
    int ) ;
    int ( int ) ;
    int ( int ) ;
    int ( int ) ;    int ) ;    int ( int ) ;    int ( int ) ;    int ( int ) ;    int ) ;    int ( int ) ;    int ) ;    int ( int ) ;    int ( int ) ;    int ) ;    int ( int ) ;    int ( int ) ;    int ) ;    int ( int ) ;    int ( int ) ;    int ) ;    int ( int ) ;    int ( int ) ;    int ) ;    int ( int ) ;    int ( int ) ;    int ) ;    int ( int ) ;    int ) ;    int ( int ) ;    int ( int ) ;    int ) ;    int ( int ) ;    int ) ;    int ( int ) ;    int ( int ) ;    int ) ;    int ( int ) ;    int ) ;    int ( int ) ;    int ( int ) ;    int ) ;    int ( int ) ;    int ) ;    int ( int ) ;    int ( int ) ;    int ) ;    int ( int ) ;    int ) ;    int ( int ) ;    int ( int ) ;    int ) ;    int ( int ) ;    int ) ;    int ( int ) ;    int ( int ) ;    int ) ;    int ( int ) ;    int ) ;    int ( int ) ;    int ( int ) ;    int ) ;    int ( int ) ;    int ) ;    int ( int ) ;    int ) ;    int ( int ) ;    int ( int ) ;    int ) ;    int ( int ) ;    int ) ;    int ( int ) ;    int ( int ) ;    int ) ;    int ( int ) ;    int ) ;    int ( int ) ;    int ( int ) ;    int ) ;    int ( int ) ;    int ) ;    int ( int ) ;    int ) ;    int ( int ) ;    int ( int ) ;    int ) ;    int ( int ) ;    int ) ;    int ( int ) ;    int ( int ) ;    int ) ;    int ( int ) ;    int ) ;    int ( int ) ;    int ) ;    int ( int ) ;    int ( int ) ;    int ) ;    int ( int ) ;    int ) ;    int ( int ) ;    int ) ;    int ( int ) ;    int ) ;    int ( int ) ;    int ) ;    int ( int ) ;    int ) ;    int ( int ) ;    int ( int ) ;    int ) ;    int ( int ) ;    int ) ;    int ( int ) ;    int ) ;    int ( int ) ;    int ) ;    int ( int ) ;    int ) ;    int ( int ) ;    int ) ;    int ( int ) ;    int ) ;    int ( int ) ;    int ( int ) ;    int ) ;    int ( int ) ;    int ) ;    int ( int ) ;    int ( int ) ;    int ) ;    int ( int ) ;    int ) ;    int ( int ) ;    int ) ;    int ( int ) ;    int ) ;    int ( int ) ;    int ) ;    int ( int ) ;    int ) ;    int ( int ) ;    int ) ;    int ( int ) ;    int ) ;    int ( int ) ;    int ) ;    int ( int ) ;    int ) ;    int ( int ) ;    int ( int ) ;    int ) ;    int ( int ) ;    int ) ;    int ( int ) ;    int ) ;   

# END OF TRANSLATION




 


 10 , pos = Math . sin ( pos ) ; }


 10 , 2 ) ; }


 10 , 2 ) ; }


 10 , 2 ) ; }

 10 , 2 ) ; }

 10 , 2 ) ; }
 
 10 , 2 ) ; }
 1 , 2 ) ; }
 
 1 , 2 ) ; } ; }

 1 , 2 ) ; } ; }

 1 , 2 ) ; } ; }

 1 , 2 ) ; } ; } ; }


 1 , 2 ) ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; }

# END OF TRANSLATION





 


    ( int ) ;
 
 
    ( int ) ;
    ( int ) ;
 
    ( int ) ;
    ( int ) ;
    ( int ) ;
    ( int ) ;
    ( int ) ;
    ( int ) ;
    ( int ) ;
    ( int ) ;
    ( int ) ;
    ( int ) ;    ( int ) ;    ( int ) ;    ( int ) ;    ( int ) ;    ( int ) ;    ( int ) ;    ( int ) ;    ( int ) ;    ( int ) ;    ( int ) ;    ( int ) ;    ( int ) ;    ( int ) ;    ( int ) ;    ( int ) ;    ( int ) ;    ( int ) ;    ( int ) ;    ( int ) ;    ( int ) ;    ( int ) ;    ( int ) ;    ( int ) ;    ( int ) ;    ( int ) ;    ( int ) ;    ( int ) ;    ( int ) ;    ( int ) ;    ( int ) ;    ( int ) ;    ( int ) ;    ( int ) ;    ( int ) ;    ( int ) ;    ( int ) ;    ( int ) ;    ( int ) ;    ( int ) ;    ( int ) ;    ( int ) ;    ( int ) ;    ( int ) ;    ( int ) ;    ( int ) ;    ( int ) ;    ( int ) ;    ( int ) ;    ( int ) ;    ( int ) ;    ( int ) ;    ( int ) ;    ( int ) ;    ( int ) ;    ( int ) ;    ( int ) ;    ( int ) ;    ( int ) ;    ( int ) ;    ( int ) ;    ( int ) ;    ( int ) ;    ( int ) ;    ( int ) ;    ( int ) ;    ( int ) ;    ( int ) ;    ( int ) ;    ( int ) ;    ( int ) ;    ( int ) ;    ( int ) ;    ( int ) ;    ( int ) ;    ( int ) ;    ( int ) ;    ( int ) ;    ( int ) ;    ( int ) ;    ( int ) ;    ( int ) ;    ( int ) ;    ( int ) ;    ( int ) ;    ( int ) ;    ( int ) ;    ( int ) ;    ( int ) ;    ( int ) ;    ( int ) ;    ( int ) ;    ( int ) ;    ( int ) ;    ( int ) ;    ( int ) ;    ( int ) ;    ( int ) ;    ( int ) ;    ( int ) ;    ( int ) ;    ( int ) ;    ( int ) ;    ( int ) ;    ( int ) ;    ( int ) ;    ( int ) ;    ( int ) ;    ( int ) ;    ( int ) ;    ( int ) ;    ( int ) ;    ( int ) ;    ( int ) ;    ( int ) ;    ( int ) ;    ( int ) ;    ( int ) ;    ( int ) ;    ( int ) ;    ( int ) ;    ( int ) ;    ( int ) ;    ( int ) ;    ( int ) ;    ( int ) ;    ( int ) ;    ( int ) ;    ( int ) ;    ( int ) ;    ( int ) ;    ( int ) ;    ( int ) ;    ( int ) ;    ( int ) ;    ( int ) ;    ( int ) ;    ( int ) ;    ( int ) ;    ( int ) ;    ( int ) ;    ( int ) ;    ( int ) ;    ( int ) ;    ( int ) ;    ( int ) ;    ( int ) ;    ( int ) ;    ( int ) ;    ( int ) ;    ( int ) ;    ( int ) ;    ( int ) ;    ( int ) ;    ( int ) ;    ( int ) ;    ( int ) ;   

# END OF TRANSLATION



 

 
 5 ) ;
 
 5 ) ;
 
 5 ) ;
 
 5 ) ; 
 5 ) ; 
 
 5 ) ; 
 
 5 ) ; 
 5 ) ; 
 5 ) ; 
 5 ) ; 
 5 ) ; 
 5 ) ; 
 5 ) ; 


# END OF TRANSLATION




 


    // 
 
    // 
 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 


# END OF TRANSLATION




 


 
 
 
 2.0 ) ;
 
 
 
 2. 
 
 2. 2. 2. 2. 2. 2. 2. 2. 2. 2. 2. 2. 2. 2. 2. 2. 2. 2. 2. 2. 2. 2. 2. 2. 2. 2. 2. 2. 2. 2. 2. 2. 2. 2. 2. 2. 2. 2. 2. 2. 2. 2. 2. 2. 2. 2. 2. 2. 2. 2. 2. 2. 2. 2. 2. 2. 2. 2. 2. 2. 2. 2. 2. 2. 2. 2. 2. 2. 2. 2. 2. 2. 2. 2. 2. 2. 2. 2. 2. 2. 2. 2. 2. 2. 2. 2. 2. 2. 2. 2. 2. 2. 2. 2. 2. 2. 2. 2. 2. 2. 2. 2. 2. 2. 2. 2. 2. 2. 2. 2. 2. 2. 2. 2. 2. 2. 2. 2. 2. 2. 2. 2. 2. 2. 2. 2. 2. 2. 2. 2. 2. 2. 2. 2. 2. 2. 2. 2. 2. 2. 2. 2. 2. 2. 2. 2. 2. 2. 2. 2. 2. 2. 2. 2. 2. 2. 2. 2. 2. 2. 2. 2. 2. 2. 2. 2. 2. 2. 2. 2. 2. 2. 2. 2. 2. 2. 2. 2. 2. 2. 2. 2. 2. 2. 2. 2. 2. 2. 2. 2. 2. 2. 2. 2. 2. 2. 2. 2. 2. 2. 2. 2. 2. 2. 2. 2. 2. 2. 2. 2. 2. 2. 2. 2. 2. 2. 2. 2. 2. 2. 2. 2. 2. 2. 2. 2. 2. 2. 2. 2. 2. 2. 2. 2. 2. 2. 2. 2. 2. 2. 2. 2. 2. 2. 2. 2. 2. 2. 2. 2. 2. 2. 2. 2. 2. 2. 2. 2. 2. 2. 2. 2. 2. 2. 2. 2. 2. 2. 2. 2. 2. 2. 2. 2. 2. 2. 2. 2. 2

# END OF TRANSLATION




   
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 


# END OF TRANSLATION



 

 
 
 
 
 
 
 
 2 ) ; }
 
 
 
 2 ) ; }
 
 
 
 2 ) ; }
 
 
 2 ) ; }
 
 
 2 ) ; }
 
 20 ; }
 
 
 2 ) ; }
 
 
 2 ) ; } 
 
 2 ; } 
 
 2 ) ; } 
 
 2 ) ; } 
 
 2 ) ; } 
 
 2 ; } 
 2 2 ; } 
 2 2 ; } 
 2 2 2 ; } 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 

# END OF TRANSLATION



   
    . get ( k ) ; }
    . get ( k ) ; }
    . get ( k ) ; }
    . get ( k ) ; }
    . get ( k ) ; }
    . get ( k ) ; }
    . get ( k ) ; }
    . get ( k ) ; }
    . get ( k ) ;    . get ( k ) ; }
    . get ( k ) ;    . get ( k ) ;    }
    . get ( k ) ;    . get ( k ) ;    }
    . get ( k ) ;    }
    . get ( k ) ;    . get ( k ) ;    }    . get ( k ) ;    }    . get ( k ) ;    }    . get ( k ) ;    . get ( k ) ;    }    . get ( k ) ;    }    . get ( k ) ;    }    . get ( k ) ;    }    . get ( k ) ;    }    . get ( k ) ;    }    . get ( k ) ;    }    . get ( k ) ;    }    . get ( k ) ;    }    . get ( k ) ;    }    . get ( k ) ;    }    . get ( k ) ;    }    . get ( k ) ;    }    . get ( k ) ;    }    . get ( k ) ;    }    . get ( k ) ;    }    . get ( k ) ;    }    . get ( k ) ;    }    . get ( k ) ;    }    . get ( k ) ;    }    . get ( k ) ;    }    . get ( k ) ;    }    . get ( k ) ;    }    . get ( k ) ;    }    . get ( k ) ;    }    . get ( k ) ;    }    . get ( k ) ;    }    . get ( k ) ;    }    . get ( k ) ;    }    . get ( k ) ;    }    . get ( k ) ;    }    . get ( k ) ;    }    . get ( k ) ;    }    . get ( k ) ;    }    . get ( k ) ;    }    . get ( k ) ;    }    . get ( k ) ;    }    . get ( k ) ;    }    . get ( k ) ;    }    . get ( k ) ;    }    . get ( k ) ;    }    . get ( k ) ;    }    . get ( k ) ;    }    . get ( k ) ;    }    . get ( k ) ;    }    . get ( k ) ;    }    . get ( k ) ;    }    . get ( k ) ;    }    . get ( k ) ;    }    . get ( k ) ;    }    . get ( k ) ;    }    . get ( k ) ;    }    . get ( k ) ;    }    . get ( k ) ;    }    . get ( k ) ;

# END OF TRANSLATION


```




   
   
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 


# END OF TRANSLATION




 


    }

   
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    //  // 


# END OF TRANSLATION






    // 


    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 


# END OF TRANSLATION




   
    // if ( n == 0 ) {
    // if ( n == 0 ) { return true ; }
    // if ( n == 0 ) { return false ; }
    // if ( n == 0 ) { return true ; }
    // if ( n == 0 ) { return false ; }
    // if ( n == 0 ) { return false ; }
    // if ( n == 0 ) { return false ; }
    // if ( n == 0 ) { return true ; }
    // if ( n == 0 ) { return false ; }
    // if ( n == 0 ) { return false ; }
    // if ( n == 0 ) { return false ; }
    // if ( n == 0 ) { return false ; }
    // if ( n == 0 ) { return false ; }
    // if ( n == 0 ) { return false ; }
    // if ( n == 0 ) { return false ; }
    // if ( n == 0 ) { return false ; }
    // if ( n == 0 ) { return false ; }
    // if ( n == 0 ) { return false ; }
    // if ( n == 0 ) { return false ; }
    // if ( n == 0 ) { return false ; }
    // if ( n == 0 ) { return false ; }
    // if ( n == 0 ) { return false ; }
    // if ( n == 0 ) { return false ; }
    // if ( n == 0 ) { return false ; }    // if ( n == 0 ) { return false ; }
    // if ( n == 0 ) { return false ; }    // if ( n == 0 ) { return false ; }    // if ( n == 0 ) { return false ; }    // if ( n == 0 ) { return false ; }    // if ( n == 0 ) { return false ; }    // if ( n == 0 ) { return false ; }    // if ( n == 0 ) { return false ; }    // if ( n == 0 ) { return false ; }    // if ( n == 0 ) { return false ; }    // if ( n == 0 ) { return false ; }    // if ( n == 0 ) { return false ; }    // if ( n == 0 ) { return false ; }    // if ( n == 0 ) { return false ; }    // if ( n == 0 ) { return false ; }    // if ( n == 0 ) { return false ; }    // if ( n == 0 ) { return false ; }    // if ( n == 0 ) { return false ; }    // if ( n == 0 ) { return false ; }    // if ( n == 0 ) { return false ; }    // if ( n == 0 ) { return false ; }    // if ( n == 0 ) { return false ; }    // if ( n == 0 ) { return false ; }    // if ( n == 0 ) { return false ; }    // if ( n == 0 ) { return false ; }    // if ( n == 0 ) { return false ; }    // if ( n == 0 ) { return false ; }    // if ( n == 0 ) { return false ; }    // if ( n == 0 ) { return false ; }    // if ( n == 0 ) { return false ; }    // if ( n == 0 ) { return false ; }    // if ( n == 0 ) { return false ; }    // if ( n == 0 ) { return false ; }

# END OF TRANSLATION





   





    StringBuilder ( ) { currentDepth = 0 ; }
    // currentDepth = 0 ; }
    // currentDepth = 0 ;
    // currentDepth = 0 ; }
    // currentDepth = 0 ; }
    // currentDepth = 0 ;
    // currentDepth = 0 ; }
    // currentDepth = 0 ; }
    // currentDepth = 0 ; }
    // currentDepth = 0 ;
    // currentDepth = 0 ; }
    // currentDepth = 0 ; }
    // currentDepth = 0 ; }
    // currentDepth = 0 ; }
    // currentDepth = 0 ; }
    // currentDepth = 0 ; }
    // currentDepth = 0 ; }
    // currentDepth = 0 ; }
    // currentDepth = 0 ; }
    // currentDepth = 0 ; }
    // currentDepth = 0 ;    // current depth = 0 ; }
    // current depth = 0 ;    // current depth = 0 ; }    // current depth = 0 ;    // current depth = 0 ; }    // current depth = 0 ;    // current depth = 0 ;    // current depth = 0 ;    // current depth = 0 ; }    // current depth = 0 ;    // current depth = 0 ;    // current depth = 0 ;    // current depth = 0 ;    // current depth = 0 ;    // current depth = 0 ;    // current depth = 0 ;    // current depth = 0 ;    // current depth = 0 ;    // current depth = 0 ;    // current depth = 0 ;    // current depth = 0 ;    // current depth = 0 ;    // current depth = 0 ;    // current depth = 0 ;    // current depth = 0 ;    // current depth = 0 ;    // current depth = 0 ;    // current depth = 0 ;    // current depth = 0 ;    // current depth = 0 ;    // current depth = 0 ;    // current depth = 0 ;    // current depth = 0 ;    // current depth = 0 ;    // current depth = 0 ;    // current depth = 0 ;    // current depth = 0 ;    // current depth = 0 ;    // current depth = 0 ;    // current depth = 0 ;    // current depth = 0 ;    // current depth = 0 ;    // current depth = 0 ;    // current depth = 0 ;    // current depth = 0 ;    // current depth = 0 ;    // current depth = 0 ;    // current depth = 0 ;    // current depth = 0 ;    // current depth = 0 ;    // current depth = 0 ;    // current depth = 0 ;    // current depth = 0 ;    // current depth = 0 ;    // current depth = 0 ;    // current depth = 0 ;    // current depth = 0 ;    // current depth = 0 ;    // current depth = 0 ;    // current depth = 0 ;    // current depth = 0 ;    // current depth = 0 ;    // current depth = 0 ;    // current depth = 0 ;    // current depth = 0 ;    // current depth = 0 ;    // current depth = 0 ;    // current depth = 0 ;    // current depth = 0 ;    // current depth = 0 ;    // current depth = 0 ;    // current depth = 0 ;    // current depth = 0 ;    // current depth = 0 ;    // current depth = 0 ;    // current depth = 0 ;    // current depth = 0 ;    // current depth = 0 ;    // current depth = 0 ;    // current depth

# END OF TRANSLATION

Levels = new ArrayList < String > ( ) ; } ;
Level = new ArrayList < String > ( ) ; } ; if ( level == 0 ) {
level = newLevel ; int level = newLevel ; } ; if ( level == 0 ) {
level = newLevel ; } ; } ; if ( level == 0 ) {
level = new Level ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; }

# END OF TRANSLATION






   
   
    String > ( var result = new ArrayList < String > ( var result = new ArrayList < String > ) {
    }
    }
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 


# END OF TRANSLATION





   
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 


# END OF TRANSLATION








    StringBuilder ( ) {
    .equals ( ) {
    StringBuilder .equals ( ) ; }
    .equals ( ) ; }
    .equals ( ) ; }
    .equals ( ) ; }
    .equals ( ) ; }
    .equals ( ) {
    .equals ( ) ; }
    .equals ( ) ; }
    .equals ( ) ; }
    .equals ( ) ; }
    .equals ( ) ; }
    .equals ( ) ; }
    .equals ( ) ; }
    .equals ( ) ; }
    .equals ( ) ; }
    .equals ( ) ; }    .equals ( ) ; }    .equals ( ) ; }    .equals ( ) ; }    .equals ( ) ; }    .equals ( ) ; }    .equals ( ) ; }    .equals ( ) ; }    .equals ( ) ; }    .equals ( ) ; }    .equals ( ) ; }    .equals ( ) ; }    .equals ( ) ; }    .equals ( ) ; }    .equals ( ) ; }    .equals ( ) ; }    .equals ( ) ; }    .equals ( ) ; }    .equals ( ) ; }    .equals ( ) ; }    .equals ( ) ; }    .equals ( ) ; }    .equals ( ) ; }    .equals ( ) ; }    .equals ( ) ; }    .equals ( ) ; }    .equals ( ) ; }    .equals ( ) ; }    .equals ( ) ; }    .equals ( ) ; }    .equals ( ) ; }    .equals ( ) ;    }    .equals ( ) ;    .equals ( ) ; }    .equals ( ) ;    }    .equals ( ) ;    }    .equals ( ) ;    .equals ( ) ;    }    .equals ( ) ;    }    .equals ( ) ;    }    .equals ( ) ;    .equals ( ) ;    }    .equals ( ) ;    }    .equals ( ) ;    }    .equals ( ) ;    }    .equals ( ) ;    }    .equals ( ) ;    }    .equals ( ) ;    .equals ( ) ;    }    .equals ( ) ;    }    .equals ( ) ;    }    .equals ( ) ;    }    .equals ( ) ;    }    .equals ( ) ;    }    .equals ( ) ;    }    .equals ( ) ;    }    .equals ( ) ;    }    .equals ( ) ;    }    .equals ( ) ;    .equals ( ) ;    }    .equals ( ) ;    }    .equals ( ) ;    }    .equals ( ) ;    }    .equals ( ) ;    }    .equals ( ) ;    }    .equals ( ) ;    }    .equals ( ) ;    }    .equals ( ) ;    }    .equals ( ) ;    }    .equals ( ) ;    }    .equals ( ) ;    }    .equals ( ) ;    }    .equals ( ) ;    }    .equals ( ) ;    }    .equals ( ) ;    }    .equals ( ) ;    }    .equals ( ) ;    }    .equals ( ) ;    }    .equals ( ) ;    }    .equals ( ) ;    }    .equals ( ) ;    }    .equals ( ) ;    }

# END OF TRANSLATION






   


    StringBuilder ( StringBuilder ) {
    StringBuilder ( ) ; }
    }
   
    StringBuilder ( ) {
    StringBuilder ( ) ; }
    }
    StringBuilder ( ) {
    StringBuilder ( ) {
    StringBuilder ( ) {
    StringBuilder .append ( i ) {
    StringBuilder .append ( i ) {
    StringBuilder .append ( i ) {
    StringBuilder .append ( i ) {
    StringBuilder .append ( i ) {
    StringBuilder .append ( i ) {
    StringBuilder .append ( i ) {
    StringBuilder .append ( i ) {
    StringBuilder .append ( i ) {
    StringBuilder .append ( i ) {
    StringBuilder .append ( i ) {
    StringBuilder .append ( i ) {
    StringBuilder .append ( i ) {
    StringBuilder .append ( i ) {
    StringBuilder .append ( i ) {
    StringBuilder .append ( i ) {
    StringBuilder .append ( i ) {
    StringBuilder .append ( i ) {
    StringBuilder .append ( i ) {
    StringBuilder .append ( i ) {    StringBuilder .append ( i ) {    StringBuilder .append ( i ) {    StringBuilder .append ( i ) {    StringBuilder .append ( i ) {    StringBuilder .append ( i ) {    StringBuilder .append ( i ) {    StringBuilder .append ( i ) {    StringBuilder .append ( i ) {    StringBuilder .append ( i ) {    StringBuilder .append ( i ) {    StringBuilder .append ( i ) {    StringBuilder .append ( i ) {    StringBuilder .append ( i ) {    StringBuilder .append ( i ) {    StringBuilder .append ( i ) {    StringBuilder .append ( i ) {    StringBuilder .append ( i ) {    StringBuilder .append ( i ) {    StringBuilder .append ( i ) {    StringBuilder .append ( i ) {    StringBuilder .append ( i ) {    StringBuilder .append ( i ) {    StringBuilder .append ( i ) {    StringBuilder .append ( i ) {    StringBuilder .append ( i ) {    StringBuilder .append ( i ) {    StringBuilder .append ( i ) {    StringBuilder .append ( i ) {    StringBuilder .append ( i ) {    StringBuilder .append ( i ) {    StringBuilder .append ( i ) {    StringBuilder .append ( i ) {    StringBuilder .append ( i ) {    StringBuilder .append ( i ) {    StringBuilder .append ( i ) {    StringBuilder .append ( i ) {    StringBuilder .append ( i ) {    StringBuilder .append ( i ) {    StringBuilder .append ( i ) {    StringBuilder .append ( i ) {    StringBuilder .append ( i ) {    StringBuilder .append ( i ) {    StringBuilder .append ( i ) {    StringBuilder .append ( i ) {    StringBuilder .append ( i ) {    StringBuilder .append ( i ) {    StringBuilder .append ( i ) {    StringBuilder .append ( i ) {    StringBuilder .append ( i ) {    StringBuilder .append ( i ) {    StringBuilder .append ( i ) {    StringBuilder .append ( i ) {    StringBuilder .append ( i ) {    StringBuilder .append ( i ) {    StringBuilder .append ( i ) {    StringBuilder .append ( i ) {    StringBuilder .append ( i ) {    StringBuilder .append ( i ) {    StringBuilder .append ( i ) {    StringBuilder .append ( i ) {    StringBuilder .append ( i ) {    StringBuilder .append ( i ) {

# END OF TRANSLATION





   
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 


# END OF TRANSLATION







    StringBuilder ( ) ; }

   
    StringBuilder ( ) ; }
    StringBuilder ( ) ; }
    StringBuilder ( ) ; }
    StringBuilder ( ) ; }
    StringBuilder ( ) ; }
    StringBuilder ( ) ; }
    StringBuilder ( ) ; }
    StringBuilder ( ) ; }
    StringBuilder ( ) ; }
    StringBuilder ( ) ; }
    StringBuilder ( ) ; }
    StringBuilder ( ) ; }
    StringBuilder ( ) ; }
    StringBuilder ( ) ; }
    StringBuilder ( ) ; }
    StringBuilder ( ) ; }
    StringBuilder ( ) ; }
    StringBuilder ( ) ; }
    StringBuilder ( ) ; }
    StringBuilder ( ) ; }
    StringBuilder ( ) ; }
    StringBuilder ( ) ; }    StringBuilder ( ) ; }    StringBuilder ( ) ; }    StringBuilder ( ) ; }    StringBuilder ( ) ; }    StringBuilder ( ) ; }    StringBuilder ( ) ; }    StringBuilder ( ) ; }    StringBuilder ( ) ; }    StringBuilder ( ) ; }    StringBuilder ( ) ; }    StringBuilder ( ) ; }    StringBuilder ( ) ; }    StringBuilder ( ) ; }    StringBuilder ( ) ;    }    StringBuilder ( ) ;    }    StringBuilder ( ) ;    }    StringBuilder ( ) ;    }    StringBuilder ( ) ;    }    StringBuilder ( ) ;    }    StringBuilder ( ) ;    }    StringBuilder ( ) ;    }    StringBuilder ( ) ;    }    StringBuilder ( ) ;    }    StringBuilder ( ) ;    }    StringBuilder ( ) ;    }    StringBuilder ( ) ;    }    StringBuilder ( ) ;    }    StringBuilder ( ) ;    }    StringBuilder ( ) ;    }    StringBuilder ( ) ;    }    StringBuilder ( ) ;    }    StringBuilder ( ) ;    }    StringBuilder ( ) ;    }    StringBuilder ( ) ;    }    StringBuilder ( ) ;    }    StringBuilder ( ) ;    }    StringBuilder ( ) ;    }    StringBuilder ( ) ;    }    StringBuilder ( ) ;    }    StringBuilder ( ) ;    }    StringBuilder ( ) ;    }    StringBuilder ( ) ;    }    StringBuilder ( ) ;    }    StringBuilder ( ) ;    }    StringBuilder ( ) ;    }    StringBuilder ( ) ;    }    StringBuilder ( ) ;    }    StringBuilder ( ) ;    }    StringBuilder ( ) ;    }    StringBuilder ( ) ;    }    StringBuilder ( ) ;    }    StringBuilder ( ) ;    }    StringBuilder ( ) ;    }    StringBuilder ( ) ;    }    StringBuilder ( ) ;    }    StringBuilder ( ) ;    }    StringBuilder ( ) ;    }    StringBuilder ( ) ;    }    StringBuilder ( ) ;    }    StringBuilder ( ) ;    }    StringBuilder ( ) ;    }    StringBuilder ( ) ;    }    StringBuilder ( ) ;    }    StringBuilder ( ) ;    }    StringBuilder ( ) ;    }    StringBuilder ( ) ;    }    StringBuilder ( ) ;    }    StringBuilder ( ) ;    }    StringBuilder ( ) ;    }    StringBuilder ( ) ;    }    StringBuilder ( ) ;    }    StringBuilder ( ) ;    }    StringBuilder ( ) ;    }    StringBuilder ( ) ;    }    StringBuilder ( ) ;    }    StringBuilder ( ) ;    }    StringBuilder ( ) ;    }    StringBuilder ( ) ;    }    StringBuilder ( ) ;    }    StringBuilder ( ) ;    }    StringBuilder ( ) ;    }    StringBuilder ( ) ;    }    StringBuilder ( ) ;    }    StringBuilder ( ) ;    }    StringBuilder

# END OF TRANSLATION




 



   
   
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 


# END OF TRANSLATION




   
   
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 


# END OF TRANSLATION


 
 
 
 
 


# END OF TRANSLATION


   
   
    ( numbers . get ( numbers . get ( i ) ;
    } ;
    }
    ( numbers . get ( numbers . get ( i ) ; j ) ; } ;
    } ;
    } ;
    } ;
    } ;    } ;    }
    ;    }
    ;    }
    ;    } ;    }
    ;    } ;    }
    ;    }
    ;    }
    ;    }
    ;    }
    ;    }
    ;    }
    ;    }
    ;    }
    ;    }
    ;    }
    ;    }
    ;    }
    ;    }
    ;    }
    ;    }    ;    }    ;    }    ;    ;    }    ;    }    ;    }    ;    }    ;    }    ;    }    ;    }    ;    }    ;    ;    }    ;    }    ;    ;    }    ;    }    ;    ;    }    ;    }    ;    ;    }    ;    }    ;    }    ;    ;    }    ;    }    ;    ;    }    ;    }    ;    ;    }    ;    ;    }    ;    ;    }    ;    ;    }    ;    ;    }    ;    ;    }    ;    ;    }    ;    ;    }    ;    ;    }    ;    ;    }    ;    ;    }    ;    ;    }    ;    ;    }    ;    ;    }    ;    ;    }    ;    ;    }    ;    ;    }    ;    ;    }    ;    ;    }    ;    ;    }    ;    ;    ;    }    ;    ;    ;    }    ;    ;    ;    }    ;    ;    ;    }    ;    ;    ;    }    ;    ;    ;    }    ;    ;    ;    }    ;    ;    ;    ;    }    ;    ;    ;    ;    }    ;    ;    ;    ;    }    ;    ;    ;    ;    ;    }

# END OF TRANSLATION


```





    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    //  // 


# END OF TRANSLATION





   
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 


# END OF TRANSLATION




   
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 


# END OF TRANSLATION
















   

    StringBuilder .append ( c ) {
    StringBuilder .append ( c ) {
    .append ( c ) ; }
    }
    }
    }
    }
    }
    }
    }
    }
    }
    }
    }
    }
    }
    }
    }
    }
    }
    }
    }
    }
    }
    }
    }
    }
    }
    }
    }    }
    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }

# END OF TRANSLATION





   
   
    String > ( ) {
    String > ( ) ; }
    String .get ( i ) ; }
    String .get ( i ) ; }
    String .get ( i ) {
    String .get ( i ) ; }
    String .get ( i ) ; }
    String .get ( i ) {
    String .get ( i ) ; }
    String .get ( i ) ; }
    String .get ( i ) {
    String .get ( i ) ; }
    String .get ( i ) {
    String .get ( i ) ; }
    String .get ( i ) ; }
    String .get ( i ) {
    String .get ( i ) ; }    String .get ( i ) {
    String .get ( i ) ; }    String .get ( i ) {
    String .get ( i ) ; }    String .get ( i ) {
    String .get ( i ) ; }    String .get ( i ) {
    String .get ( i ) ; }    String .get ( i ) {
    String .get ( i ) ; }    String .get ( i ) {
    String .get ( i ) ; }    String .get ( i ) {
    String .get ( i ) {
    String .get ( i ) ; }    String .get ( i ) {
    String .get ( i ) {
    String .get ( i ) ; }    String .get ( i ) {
    String .get ( i ) {
    String .get ( i ) {
    String .get ( i ) ; }    String .get ( i ) {
    String .get ( i ) {
    String .get ( i ) {
    String .get ( i ) {
    String .get ( i ) {
    String .get ( i ) {
    String .get ( i ) {
    String .get ( i ) {
    String .get ( i ) {
    String .get ( i ) {
    String .get ( i ) {
    String .get ( i ) {
    String .get ( i ) {
    String .get ( i ) {
    String .get ( i ) {    String .get ( i ) {    String .get ( i ) {    String .get ( i ) {    String .get ( i ) {    String .get ( i ) {    String .get ( i ) {    String .get ( i ) {    String .get ( i ) {    String .get ( i ) {    String .get ( i ) {    String .get ( i ) {    String .get ( i ) {    String .get ( i ) {    String .get ( i ) {    String .get ( i ) {    String .get ( i ) {    String .get ( i ) {    String .get ( i ) {    String .get ( i ) {    String .get ( i ) {    String .get ( i ) {    String .get ( i ) {    String .get ( i ) {    String .get ( i ) {    String .get ( i ) {    String .get ( i ) {    String .get ( i ) {    String .get ( i ) {    String .get ( i ) {    String .get ( i ) {    String .get ( i ) {    String .get ( i ) {    String .get ( i ) {    String .get ( i ) {    String .get ( i ) {    String .get ( i ) {    String .get ( i ) {    String .get ( i ) {    String .get ( i ) {    String .get ( i ) {    String .get ( i ) {    String .get ( i ) {

# END OF TRANSLATION




    // 

    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    //  // 


# END OF TRANSLATION






   
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    //  // 


# END OF TRANSLATION





 


    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 


# END OF TRANSLATION

```




   
   
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    //  // 


# END OF TRANSLATION





 



    // 



    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    //  // 
    //  // 


# END OF TRANSLATION





 

   
   + ( i ) ;
   + results .get ( i ) ;
   + results .get ( i ) ;
   + results .get ( i ) ;
   + results .get ( i ) ;
   + results .get ( i ) ;
   + results .get ( i ) ;
   + results .get ( i ) ;
   + results .get ( i ) ;
   + results .get ( i ) ;
   + results .get ( i ) ;
   + results .get ( i ) ;
   + results .get ( i ) ;   + results .get ( i ) ;   + results .get ( i ) ;   + results .get ( i ) ;   + results .get ( i ) ;   + results .get ( i ) ;   + results .get ( i ) ;   + results .get ( i ) ;   + results .get ( i ) ;   + results .get ( i ) ;   + results .get ( i ) ;   + results .get ( i ) ;   + results .get ( i ) ;   + results .get ( i ) ;   + results .get ( i ) ;   + results .get ( i ) ;   + results .get ( i ) ;   + results .get ( i ) ;   + results .get ( i ) ;   + results .get ( i ) ;   + results .get ( i ) ;   + results .get ( i ) ;   + results .get ( i ) ;   + results .get ( i ) ;   + results .get ( i ) ;   + results .get ( i ) ;   + results .get ( i ) ;   + results .get ( i ) ;   + results .get ( i ) ;   + results .get ( i ) ;   + results .get ( i ) ;   + results .get ( i ) ;   + results .get ( i ) ;   + results .get ( i ) ;   + results .get ( i ) ;   + results .get ( i ) ;   + results .get ( i ) ;   + results .get ( i ) ;   + results .get ( i ) ;   + results .get ( i ) ;   + results .get ( i ) ;   + results .get ( i ) ;   + results .get ( i ) ;   + results .get ( i ) ;   + results .get ( i ) ;   + results .get ( i ) ;   + results .get ( i ) ;   + results .get ( i ) ;   + results .get ( i ) ;   + results .get ( i ) ;   + results .get ( i ) ;   + results .get ( i ) ;   + results .get ( i ) ;   + results .get ( i ) ;   + results .get ( i ) ;   + results .get ( i ) ;   + results .get ( i ) ;   + results .get ( i ) ;   + results .get ( i ) ;   + results .get ( i ) ;   + results .get ( i ) ;   + results .get ( i ) ;   + results .get ( i ) ;   + results .get ( i ) ;   + results .get ( i ) ;   + results .get ( i ) ;   + results .get ( i ) ;   + results .get ( i ) ;   + results .get ( i ) ;   + results .get ( i ) ;   + results .get ( i ) ;   + results .get ( i ) ;   + results .get ( i ) ;   + results .get ( i ) ;   + results .get ( i ) ;   + results .get ( i ) ;

# END OF TRANSLATION








   
    StringBuilder ( ) ;
    .equals ( ) ;
    .equals ( ) ;
    .equals ( ) ;
    .equals ( ) ;
    .equals ( ) ; }
    .equals ( ) ;
    .equals ( ) ;    .equals ( ) ;    .equals ( ) ; }
    .equals ( text ) ;    }
    .equals ( ) ;    .equals ( ) ;    }
    .equals ( ) ;    }
    .equals ( ) ;    }
    .equals ( ) ;    }
    .equals ( ) ;    }
    .equals ( ) ;    }
    .equals ( ) ;    }    .equals ( ) ;    }    .equals ( ) ;    }    .equals ( ) ;    }    .equals ( ) ;    }    .equals ( ) ;    }    .equals ( ) ;    }    .equals ( ) ;    }    .equals ( ) ;    }    .equals ( ) ;    }    .equals ( ) ;    }    .equals ( ) ;    }    .equals ( ) ;    }    .equals ( ) ;    }    .equals ( ) ;    }    .equals ( ) ;    }    .equals ( ) ;    }    .equals ( ) ;    }    .equals ( ) ;    }    .equals ( ) ;    }    .equals ( ) ;    }    .equals ( ) ;    }    .equals ( ) ;    }    .equals ( ) ;    }    .equals ( ) ;    }    .equals ( ) ;    }    .equals ( ) ;    }    .equals ( ) ;    }    .equals ( ) ;    }    .equals ( ) ;    }    .equals ( ) ;    }    .equals ( ) ;    }    .equals ( ) ;    }    .equals ( ) ;    }    .equals ( ) ;    }    .equals ( ) ;    }    .equals ( ) ;    }    .equals ( ) ;    }    .equals ( ) ;    }    .equals ( ) ;    }    .equals ( ) ;    }    .equals ( ) ;    }    .equals ( ) ;    }    .equals ( ) ;    }    .equals ( ) ;    }    .equals ( ) ;    }    .equals ( ) ;    }    .equals ( ) ;    }    .equals ( ) ;    }    .equals ( ) ;    }    .equals ( ) ;    }    .equals ( ) ;    }    .equals ( ) ;    }    .equals ( ) ;    }    .equals ( ) ;    }    .equals ( ) ;    }    .equals ( ) ;    }    .equals ( ) ;    }    .equals ( ) ;    }    .equals ( ) ;    }    .equals ( ) ;    }    .equals ( ) ;    }    .equals ( ) ;    }    .equals ( ) ;    }    .equals ( ) ;    }    .equals ( ) ;    }    .equals ( ) ;    }    .equals ( ) ;    }    .equals ( ) ;    }    .equals ( ) ;    }    .equals ( )    .equals ( ) ;    }    .equals ( ) ;    }    .equals ( )    .equals ( ) ;    }    .equals ( ) ;    }    .equals ( )    .equals ( ) ;    }    .equals ( )    .equals ( ) ;    }    .equals ( )    .equals ( ) ;    }    .equals ( )    .equals ( ) ;    }    .equals ( )    .equals ( ) ;    }    .equals ( )    .equals ( ) ;    }    .equals ( )    .equals ( ) ;    }    .equals ( )    .equals ( )    .equals ( ) ;    }    .equals ( )    .equals ( ) ;    }    .equals ( )    .equals

# END OF TRANSLATION







    StringBuilder ( ) {
    StringBuilder .append ( chars ) ; }
    }
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 


# END OF TRANSLATION





 



 

    }

   
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    //  // 


# END OF TRANSLATION




   
    }
    // 
    // 2 ) {
    // 2 ) ; }
    // 2 ) ; }
    // 2 ) ; }
    // 2 ) ; }
    // 2 ) ; }
    // 2 ) ; 
    // 2 ) ; 
    // 2 ) ; 
    // 2 ) ;  }


# END OF TRANSLATION





 


    // if ( b == ' ) {
    // if ( b == ' ) {
    // if ( b == ' ) {
    // if ( b == ' ) {
    // if ( b == ' ) {
    // if ( b == ' ) {
    // if ( b == ' ) {
    // if ( b == ' ) {
    // if ( b == ' ) {
    // if ( b == ' ) {
    // if ( b == ' ) {
    // if ( b == ' ) {
    // if ( b == ' ) {
    // if ( b == ' ) {
    // if ( b == ' ) {
    // if ( b == ' ) {
    // if ( b == ' ) {
    // if ( b == ' ) {
    // if ( b == ' ) {
    // if ( b == ' ) {
    // if ( b == ' ) {
    // if ( b == ' ) {
    // if ( b == ' ) {
    // if ( b == ' ) {
    // if ( b == ' ) {
    // if ( b == ' ) {
    // if ( b == ' ) {
    // if ( b == ' ) {
    // if ( b == ' ) {
    // if ( b == ' ) {
    // if ( b == ' ) {
    // if ( b == ' ) {
    // if ( b == ' ) {
    // if ( b == ' ) {
    // if ( b == ' ) {
    // if ( b == ' ) {
    // if ( b == ' ) {
    // if ( b == ' ) {
    // if ( b == ' ) {
    // if ( b == ' ) {
    // if ( b == ' ) {
    // if ( b == ' ) {
    // if ( b == ' ) {
    // if ( b == ' ) {
    // if ( b == ' ) {
    // if ( b == ' ) {
    // if ( b == ' ) {
    // if ( b == ' ) {
    // if ( b == ' ) {
    // if ( b == ' ) {
    // if ( b == ' ) {
    // if ( b == ' ) {
    // if ( b == ' ) {
    // if ( b == ' ) {
    // if ( b == ' ) {
    // if ( b == ' ) {
    // if ( b == ' ) {
    // if ( b == ' ) {
    // if ( b == ' ) {
    // if ( b == ' ) {
    // if ( b == ' ) {
    // if ( b == ' ) {
    // if ( b == ' ) {
    // if ( b == ' ) {
    // if ( b == ' ) {
    // if ( b == ' ) {
    // if ( b == ' ) {
    // if ( b == ' ) {
    // if ( b == ' ) {
    // if ( b == ' ) {
    // if ( b == ' ) {
    // if ( b == ' ) {
    // if ( b == ' ) {
    // if ( b == ' ) {
    // if ( b == ' ) {
    // if ( b == ' ) {
    // if ( b == ' ) {
    // if ( b == ' ) {
    // if ( b == ' ) {
    // if ( b == ' ) {
    // if ( b == ' ) {
    // if ( b == ' ) {
    // if ( b == ' ) {
    // if ( b

# END OF TRANSLATION






    // 

    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 


# END OF TRANSLATION





    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    //  // 
    //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //

# END OF TRANSLATION




 

    // 20 ; }

    // 20 ; }
    // 2 ) {
    // 20 ; }
    // 2 ) ; }
    // 2 ) ; }
    // 2 ) ; }
    // 2 ) ; }
    // 2 ) ; }
    // 2 ) ; }
    // 2 ) ; }
    // 2 ) ; }
    // 2 ) ; }
    // 2 ) ; }
    // 2 ) ; }
    // 2 ) ; }
    // 2 ) ; }
    // 2 ) ; }
    // 2 ) ; }
    // 2 ) ; }
    // 2 ) ; }
    // 2 ) ; }
    // 2 ) ; }
    // 2 ) ; }
    // 2 ) ; }
    // 2 ) ; }
    // 2 ) ; }
    // 2 ) ; }
    // 2 ) ; }
    // 2 ) ; }
    // 2 ) ;    // 2 ) ; }
    // 2 ) ; }
    // 2 ) ;    // 2 ) ; }
    // 2 ) ;    // 2 ) ; }
    // 2 ) ;    // 2 ) ; }
    // 2 ) ;    // 2 ) ; }
    // 2 ) ;    // 2 ) ; }
    // 2 ) ;    // 2 ) ;    // 2 ) ;    // 2 ) ; }


# END OF TRANSLATION




    // sum += sum2 += st1 ; }
    // sum += st1 ; }
    // sum += st1 ; }
    // sum += st1 ; }
    // sum += st1 ; }
    // sum += st1 ; }
    // sum += st1 ; }
    // sum += st1 ; }
    // sum += st1 ; }    // sum += st1 ; }    // sum += st1 ; }    // sum += st1 ; }    // sum += st1 ; }    // sum += st1 ; }    // sum += st1 ;    // sum += st1 ; }    // sum += st1 ;    // sum += st1 ;    // sum += st1 ;    // sum += st1 ;    // sum += st1 ;    // sum += st1 ;    // sum += st1 ;    // sum += st1 ;    // sum += st1 ;    // sum += st1 ;    // sum += st1 ;    // sum += st1 ;    // sum += st1 ;    // sum += st1 ;    // sum += st1 ;    // sum += st1 ;    // sum += st1 ;    // sum += st1 ;    // sum += st1 ;    // sum += st1 ;    // sum += st1 ;    // sum += st1 ;    // sum += st1 ;    // sum += st1 ;    // sum += st1 ;    // sum += st1 ;    // sum += st1 ;    // sum += st1 ;    // sum += st1 ;    // sum += st1 ;    // sum += st1 ;    // sum += st1 ;    // sum += st1 ;    // sum += st1 ;    // sum += st1 ;    // sum += st1 ;    // sum += st1 ;    // sum += st1 ;    // sum += st1 ;    // sum += st1 ;    // sum += st1 ;    // sum += st1 ;    // sum += st1 ;    // sum += st1 ;    // sum += st1 ;    // sum += st1 ;    // sum += st1 ;    // sum += st1 ;    // sum += st1 ;    // sum += st1 ;    // sum += st1 ;    // sum += st1 ;    // sum += st1 ;    // sum += st1 ;    // sum += st1 ;    // sum += st1 ;    // sum += st1 ;    // sum += st1 ;    // sum += st1 ;    // sum += st1 ;    // sum += st1 ;    // sum += st1 ;    // sum += st1 ;    // sum += st1 ;    // sum += st1 ;    // sum += st1 ;    // sum += st1 ;    // sum += st1 ;    // sum += st1 ;    // sum += st1 ;    // sum += st1 ;    // sum += st1 ;    // sum += st1 ;    // sum += st1 ;    // sum += st1 ;    // sum += st1 ;    // sum += st1 ;    // sum += st1 ;    // sum += st1 ;    // sum += st1 ;    // sum += st1 ;    // sum += st1 ;    // sum += st1 ;    // sum += st1 ;    // sum += st1 ;    // sum += st1 ;    // sum += st1 ;    // sum += st1 ;    // sum += st1 ;    // sum += st1 ;    // sum += st1 ;    // sum += st1 ;    // sum += st1 ;    // sum += st1 ;    // sum += st1 ;    // sum += st1 ;    // sum += st1 ;    // sum += st1 ;

# END OF TRANSLATION




 



 


 


    // 2 ) ; }

 
    // 20 ) ; }

 
    // 2 ) ;
 
 
    // 2 ) ; 
    // 2 ) ; 
    // 2 ) ; 
    // 2 ) ; 
    // 2 ) ; 
    // 2 ) ; 
    // 2 ) ; 
    // 2 ) ; 
    // 2 ) ; 
    // 2 ) ; 
    // 2 ) ; 


# END OF TRANSLATION



 

 
 3 ) { letter .add ( "Cade .add ( "Cade .add ( "B ) ; } else {
 
 3 ) ; } else {
 
 3 ) ; } else { letter .add ( "Cade .add ( "Cade .add ( "Cade .add ( "B ) ; } else { letter .add ( "Cade .add ( "Cade .add ( "Cade .add ( "Cade .add ( "Cade .add ( "Cade .add ( "Cade .add ( "Cade .add ( "Cade .add ( "Cade .add ( "Cade .add ( "Cade .add ( "Cade .add ( "Cade .add ( "Cade .add ( "Cade .add ( "Cade .add ( "Cade .add ( "Cade .add ( "Cade .add ( "Cade .add ( "Cade .add ( "Cade .add ( "Cade .add ( "Cade .add ( "Cade .add ( "Cade .add ( "Cade .add ( "Cade .add ( "Cade .add ( "Cade .add ( "Cade .add ( "Cade .add ( "Cade .add ( "Cade .add ( "Cade .add ( "Cade .add ( "Cade .add ( "Cade .add ( "Cade .add ( "Cade .add ( "Cade .add ( "Cade .add ( "Cade .add ( "Cade .add ( "Cade .add ( "Cade .add ( "Cade .add ( "Cade .add ( "Cade .add ( "Cade .add ( "Cade .add ( "Cade .add ( "Cade .add ( "Cade .add ( "Cade .add ( "Cade .add ( "Cade .add ( "Cade .add ( "Cade .add ( "Cade .add ( "Cade .add ( "Cade .add ( "Cade .add ( "Cade .add ( "Cade .add ( "Cade .add ( "Cade .add ( "Cade .add ( "Cade .add ( "Cade .add ( "Cade .add ( "Cade .add ( "Cade .add ( "Cade .add ( "Cade .add ( "Cade .add ( "Cade .add ( "Cade .add ( "Cade .add ( "Cade .add ( "Cade .add

# END OF TRANSLATION






    // 

    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    //  // 


# END OF TRANSLATION









    StringBuilder ( tmp ) ; }


    StringBuilder ( tmp ) ; }
   
    StringBuilder ( tmp ) ; }
    StringBuilder ( tmp ) ; }
    StringBuilder ( tmp ) ; }
    StringBuilder ( tmp ) ; }
    StringBuilder ( tmp ) ; }
    StringBuilder ( tmp ) ; }
    StringBuilder ( tmp ) ; }
    StringBuilder ( tmp ) ; }
    StringBuilder ( tmp ) ; }
    StringBuilder ( tmp ) ; }
    StringBuilder ( tmp ) ; }
    StringBuilder ( tmp ) ; }
    StringBuilder ( tmp ) ; }
    StringBuilder ( tmp ) ; }
    StringBuilder ( tmp ) ; }
    StringBuilder ( tmp ) ; }
    StringBuilder ( tmp ) ; }
    StringBuilder ( tmp ) ; }
    StringBuilder ( tmp ) ; }
    StringBuilder ( tmp ) ; }
    StringBuilder ( tmp ) ; }
    StringBuilder ( tmp ) ; }
    StringBuilder ( tmp ) ; }
    StringBuilder ( tmp ) ; }
    StringBuilder ( tmp ) ; }
    StringBuilder ( tmp ) ; }
    StringBuilder ( tmp ) ; }
    StringBuilder ( tmp ) ; }
    StringBuilder ( tmp ) ; }
    StringBuilder ( tmp ) ; }
    StringBuilder ( tmp ) ; }
    StringBuilder ( tmp ) ; }
    StringBuilder ( tmp ) ; }
    StringBuilder ( tmp ) ; }
    StringBuilder ( tmp ) ; }
    StringBuilder ( tmp ) ; }
    StringBuilder ( tmp ) ; }
    StringBuilder ( tmp ) ; }
    StringBuilder ( tmp ) ; }
    StringBuilder ( tmp ) ; }
    StringBuilder ( tmp ) ; }
    StringBuilder ( tmp ) ; }
    StringBuilder ( tmp ) ; }
    StringBuilder ( tmp ) ; }
    StringBuilder ( tmp ) ; }
    StringBuilder ( tmp ) ; }
    StringBuilder ( tmp ) ; }
    StringBuilder ( tmp ) ; }
    StringBuilder ( tmp ) ; }
    StringBuilder ( tmp ) ; }
    StringBuilder ( tmp ) ; }
    StringBuilder ( tmp ) ; }
    StringBuilder ( tmp ) ; }
    StringBuilder ( tmp ) ; }    StringBuilder ( tmp ) ; }
    StringBuilder ( tmp ) ; }
    StringBuilder ( tmp ) ; }
    StringBuilder ( tmp ) ; tmp ) ; }
    StringBuilder ( tmp ) ; }
    StringBuilder ( tmp ) ; }
    StringBuilder ( tmp ) ; tmp ) ; }
    StringBuilder ( tmp ) ; }
    StringBuilder ( tmp ) ; }
    StringBuilder ( tmp ) ; tmp ) ; }
    StringBuilder ( tmp ) ; }
    StringBuilder ( tmp ) ; tmp ) ; }
    StringBuilder ( tmp ) ; }
    StringBuilder ( tmp ) ; tmp ) ; }
    StringBuilder ( tmp ) ; }
    StringBuilder ( tmp ) ; tmp ) ; }
    StringBuilder ( tmp ) ; tmp ) ; }
    StringBuilder ( tmp ) ; tmp ) ; }
    StringBuilder ( tmp ) ; tmp ) ; }
    StringBuilder ( tmp ) ; tmp ) ; }
    StringBuilder ( tmp ) ; tmp ) ; }
    StringBuilder ( tmp ) ; tmp ) ; }
    StringBuilder ( tmp

# END OF TRANSLATION





 



    // 


 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    //  // 


# END OF TRANSLATION

















   

   
    StringBuilder ( char ) {
    StringBuilder ( char ) ;
    }
    }
    }
   
    StringBuilder ( char ) {
    StringBuilder ( char ) {
    }
    }
    StringBuilder ( char ) {
    }
    StringBuilder ( char ) {
    }
    StringBuilder ( char ) {
    }
    StringBuilder ( char ) {
    }
    StringBuilder ( char ) {
    }
    }
    StringBuilder ( char ) {
    }
    }
    StringBuilder ( char ) {
    }
    StringBuilder ( char ) {
    }
    }
    }
    StringBuilder ( char ) {
    }
    }
    StringBuilder ( char ) {
    }
    }
    }
    StringBuilder ( char ) {
    }    }
    StringBuilder ( char ) {
    }    }
    }
    }
    StringBuilder ( char ) {
    }    }
    }
    }
    }
    }    }
    StringBuilder ( char ( char ) {
    }    }    }    StringBuilder ( char ) {
    }    }    }    }    StringBuilder ( char ( char ) {
    }    }    }    }    }    StringBuilder ( char ( char ) {
    }    }    }    }    }    }    }    }    }    StringBuilder ( char ( char ) {
    }    }    }    }    }    }    }    }    }    }    }    }    }    StringBuilder ( char ( char ) {
    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }

# END OF TRANSLATION




 


    // if ( i == ' ) {
    // if ( i == ' ) {
    // if ( i == ' ) {
    // if ( i == ' ) {
    // if ( i == ' ) {
    // if ( i == ' ) {
    // if ( i == ' ) {
    // if ( i == ' ) {
    // if ( i == ' ) {
    // if ( i == ' ) {
    // if ( i == ' ) {
    // if ( i == ' ) {
    // if ( i == ' ) {
    // if ( i == ' ) {
    // if ( i == ' ) {
    // if ( i == ' ) {
    // if ( i == ' ) {
    // if ( i == ' ) {
    // if ( i == ' ) {
    // if ( i == ' ) {
    // if ( i == ' ) {
    // if ( i == ' ) {
    // if ( i == ' ) {
    // if ( i == ' ) {
    // if ( i == ' ) {
    // if ( i == ' ) {
    // if ( i == ' ) {
    // if ( i == ' ) {
    // if ( i == ' ) {
    // if ( i == ' ) {
    // if ( i == ' ) {
    // if ( i == ' ) {
    // if ( i == ' ) {
    // if ( i == ' ) {
    // if ( i == ' ) {
    // if ( i == ' ) {
    // if ( i == ' ) {
    // if ( i == ' ) {
    // if ( i == ' ) {
    // if ( i == ' ) {
    // if ( i == ' ) {
    // if ( i == ' ) {
    // if ( i == ' ) {
    // if ( i == ' ) {
    // if ( i == ' ) {
    // if ( i == ' ) {
    // if ( i == ' ) {
    // if ( i == ' ) {
    // if ( i == ' ) {
    // if ( i == ' ) {
    // if ( i == ' ) {
    // if ( i == ' ) {
    // if ( i == ' ) {
    // if ( i == ' ) {
    // if ( i == ' ) {
    // if ( i == ' ) {
    // if ( i == ' ) {
    // if ( i == ' ) {
    // if ( i == ' ) {
    // if ( i == ' ) {
    // if ( i == ' ) {
    // if ( i == ' ) {
    // if ( i == ' ) {
    // if ( i == ' ) {
    // if ( i == ' ) {
    // if ( i == ' ) {
    // if ( i == ' ) {
    // if ( i == ' ) {
    // if ( i == ' ) {
    // if ( i == ' ) {
    // if ( i == ' ) {
    // if ( i == ' ) {
    // if ( i == ' ) {
    // if ( i == ' ) {
    // if ( i == ' ) {
    // if ( i == ' ) {
    // if ( i == ' ) {
    // if ( i ==

# END OF TRANSLATION




   
    StringBuilder ( c ) { c = new StringBuilder ( c ) ; }
    }
    }
    }
    }
    }
    }
    }
    }
    }
    }
    }
    }
    }
    }
    }
    }
    }
    }
    }
    }
    }
    }
    }
    }
    }
    }
    }
    }
    }    }
    }    }    }    }
    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }

# END OF TRANSLATION





    // 

    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    //  // 


# END OF TRANSLATION











    // if ( c ) {
    // if ( c ) {
    // if ( c ) {
    // if ( c ) {
    // if ( c ) {
    // if ( c ) {
    // if ( c ) {
    // if ( c ) {
    // if ( c ) {
    // if ( c ) {
    // if ( c ) {
    // if ( c ) {
    // if ( c ) {
    // if ( c ) {
    // if ( c ) {
    // if ( c ) {
    // if ( c ) {
    // if ( c ) {
    // if ( c ) {
    // if ( c ) {
    // if ( c ) {
    // if ( c ) {
    // if ( c ) {
    // if ( c ) {
    // if ( c ) {
    // if ( c ) {
    // if ( c ) {
    // if ( c ) {
    // if ( c ) {
    // if ( c ) {
    // if ( c ) {
    // if ( c ) {
    // if ( c ) {
    // if ( c ) {
    // if ( c ) {
    // if ( c ) {
    // if ( c ) {
    // if ( c ) {
    // if ( c ) {
    // if ( c ) {
    // if ( c ) {
    // if ( c ) {
    // if ( c ) {
    // if ( c ) {
    // if ( c ) {
    // if ( c ) {
    // if ( c ) {
    // if ( c ) {
    // if ( c ) {
    // if ( c ) {
    // if ( c ) {
    // if ( c ) {
    // if ( c ) {
    // if ( c ) {
    // if ( c ) {
    // if ( c ) {
    // if ( c ) {
    // if ( c ) {
    // if ( c ) {
    // if ( c ) {
    // if ( c ) {
    // if ( c ) {
    // if ( c ) {
    // if ( c ) {
    // if ( c ) {
    // if ( c ) {
    // if ( c ) {
    // if ( c ) {
    // if ( c ) {
    // if ( c ) {
    // if ( c ) {
    // if ( c ) {
    // if ( c ) {
    // if ( c ) {
    // if ( c ) {
    // if ( c ) {
    // if ( c ) {
    // if ( c ) {
    // if ( c ) {
    // if ( c ) {
    // if ( c ) {
    // if ( c ) {
    // if ( c ) {
    // if ( c ) {
    // if ( c ) {
    // if ( c ) {
    // if ( c ) {
    // if ( c ) {
    // if ( c ) {
    // if ( c ) {
    // if ( c ) {
    // if ( c ) {
    // if ( c ) {
    // if ( c ) {
    // if ( c ) {
    // if ( c ) {
    // if ( c ) {
    // if ( c )

# END OF TRANSLATION




 


 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 10 ) 
 
 10 ) 
 1 ) 
 1 ) 10 ) 1 ) 10 ) ; 
 1 ) ; 
 1 ) ; 
 1 ) ; 1 ) ; 1 ) ; 1 ) ; 1 ) ; 1 ) ; 2 ) ; 2 ) ; 2 ) ; 2 ) ; 2 ) ; 1 ) ; 2 ) ; 1 ) ; 2 ) ; 1 ) ; 2 ) ; 1 ) ; 2 ) ; 1 ) ; 2 ) ; 1 ) ; 2 ) ; 1 ) ; 2 ) ; 1 ) ; 2 ) ; 1 ) ; 2 ) ; 1 ) ; 2 ) ; 2 ) ; 1 ) ; 2 ) ; 2 ) ; 1 ) ; 2 ) ; 2 ) ; 1 ) ; 2 ) ; 2 ) ; 1 ) ; 2 ) ; 1 ) ; 2 ) ; 2 ) ; 1 ) ; 2 ) ; 2 ) ; 1 ) ; 2 ) ; 1 ) ; 2 ) ; 2 ) ; 1 ) ; 2 ) ; 2 ) ; 1 ) ; 2 ) ; 2 ) ; 1 ; 2 ) ; 2 ) ; 1 ; 2 ) ; 2 ) ; 1 ; 2 ) ; 2 ) ; 1 ) ; 2 ) ; 2 ) ; 1 ; 2 ) ; 2 ) ; 1 ; 2 ) ; 2 ) ; 1 ; 2 ) ; 2 ) ; 2 ) ; 1 ; 2 ) ; 2 ) ; 1 ; 2 ) ; 2 ) ; 1 ; 2 ) ; 2 ) ; 2 ) ; 1 ; 2 ) ; 2 ) ; 2 ) ; 1 ; 2 ) ; 2 ; 2 ) ; 1 ; 2 ) ; 2 ; 2 ) ; 2 ; 2 ) ; 1 ; 2 ) ; 2 ; 2 ) ; 1 ; 2 ) ; 2 ; 2 ) ; 2 ; 2 ) ; 1 ; 2 ) ; 2 ; 2 ) ; 2 ; 2 ) ; 1 ; 2 ) ; 2 ; 2 ; 2 ) ; 1 ; 2 ) ; 2 ; 2 ; 2 ) ; 2 ; 2 ; 2 ) ; 1 ; 2 ; 2 ; 2 ) ; 2 ; 2 ; 2 ; 2 ; 2 ; 2 ; 1 ; 2 ; 2 ; 2 ; 2 ; 2 ; 2 ; 2 ; 2 ; 2 ; 2 ; 2 ; 2 ; 2 ; 2 ; 2 ; 2 ; 2 ; 2 ; 2 ; 2 ; 2 ; 2 ; 2 ; 2 ; 2 ; 2 ; 2 ; 2 ; 2 ; 2 ; 2 ; 2 ; 2 ; 2 ; 2 ; 2 ; 2 ; 2 ; 2 ; 2 ; 2 ; 2 ; 2 ; 2 ; 2 ; 2 ; 2 ; 2 ; 2 ; 2 ; 2 ; 2 ; 2 ; 2 ; 2 ; 2 ; 2 ; 2 ; 2 ; 2 ; 2 ; 2 ; 2 ; 2 ; 2 ; 2 ; 2 ; 2 ; 2 ; 2 ; 2 ; 2 ; 2 ; 2 ; 2 ; 2 ; 2 ; 2 ; 2

# END OF TRANSLATION




 

    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 


# END OF TRANSLATION


   
   
    String > ( n

# END OF TRANSLATION




    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 


# END OF TRANSLATION






    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    //  // 
    //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //

# END OF TRANSLATION


   
    {
    if ( test .equals ( test .equals ( item .equals ( item .equals ( item .equals ( item .equals ( item .equals ( item .equals ( item .equals ( item .equals ( item .equals ( item .equals ( item .equals ( item .equals ( item .equals ( item .equals ( item .equals ( item .equals ( item .equals ( item .equals ( item .equals ( item .equals ( item .equals ( item .equals ( item .equals ( item .equals ( item .equals ( item .equals ( item .equals ( item .equals ( item .equals ( item .equals ( item .equals ( item .equals ( item .equals ( item .equals ( item .equals ( item .equals ( item .equals ( item .equals ( item .equals ( item .equals ( item .equals ( item .equals ( item .equals ( item .equals ( item .equals ( item .equals ( item .equals ( item .equals ( item .equals ( item .equals ( item .equals ( item .equals ( item .equals ( item .equals ( item .equals ( item .equals ( item .equals ( item .equals ( item .equals ( item .equals ( item .equals ( item .equals ( item .equals ( item .equals ( item .equals ( item .equals ( item .equals ( item .equals ( item .equals ( item .equals ( item .equals ( item .equals ( item .equals ( item .equals ( item .equals ( item .equals ( item .equals ( item .equals ( item .equals ( item .equals ( item .equals ( item .equals ( item .equals ( item .equals ( item .equals ( item .equals ( item .equals ( item .equals ( item .equals ( item .equals ( item .equals ( item .equals ( item .equals ( item .equals ( item .equals ( item .equals ( item .equals ( item .equals ( item .equals ( item .equals ( item .equals ( item .equals ( item .equals ( item .equals ( item .equals ( item .equals ( item .equals ( item .equals ( item .equals ( item .equals ( item .equals ( item .equals ( item .equals ( item .equals ( item .equals ( item .equals ( item .equals ( item .equals ( item .equals ( item .equals ( item .equals ( item .equals ( item .equals ( item .equals ( item .equals ( item .equals ( item .equals ( item .equals ( item .equals ( item .equals ( item .equals ( item .equals ( item .equals ( item .equals ( item .equals ( item .equals ( item .equals ( item .equals ( item .equals ( item .equals ( item .equals ( item .equals ( item .equals ( item .equals ( item .equals ( item .equals ( item .equals ( item .equals ( item .equals ( item .equals ( item .equals ( item .equals ( item .equals ( item .equals ( item .equals ( item .equals ( item .equals ( item .equals ( item .equals ( item .equals ( item .equals ( item .equals ( item .equals ( item .equals ( item .equals ( item .equals ( item .equals ( item .equals ( item .equals ( item .equals ( item .equals ( item .equals ( item .equals ( item .equals ( item .equals

# END OF TRANSLATION








    StringBuilder ( ) {
    .equals ( ret ) ; }


    StringBuilder ( ) {
    .equals ( ret ) ; }
    }
    StringBuilder ( ) {
    .equals ( ret ) ; }
    StringBuilder ( ret ) {
    .equals ( ret ) ; }
    StringBuilder ( ret ) {
    .equals ( ret ) ; }
    StringBuilder ( ret ) {
    .equals ( ret ) ; }
    StringBuilder ( ret ) {
    .equals ( ret ) ; }
    StringBuilder ( ret ) {
    .equals ( ret ) ; }
    StringBuilder ( ret ) {
    .equals ( ret ) ; }
    StringBuilder ( ret ) {
    .equals ( ret ) {
    .equals ( ret ) ; }
    StringBuilder ( ret ) {
    .equals ( ret ) {
    .equals ( ret ) ; }
    StringBuilder ( ret ) {
    .equals ( ret ) ; }
    StringBuilder ( ret ) { ret ) { ret ) ; }
    StringBuilder ( ret ) { ret ) ; }
    StringBuilder ( ret ) { ret ) ; }
    StringBuilder ( ret ) { ret ) { ret ) ; }
    StringBuilder ( ret ) { ret ) ; }
    StringBuilder ( ret ) { ret ) { ret ) ; }
    StringBuilder ( ret ) { ret ) ; }
    StringBuilder ( ret ) { ret ) { ret ) ; }
    StringBuilder ( ret ) { ret ) { ret ) ; }    StringBuilder ( ret ) { ret ) { ret ) ; }    StringBuilder ( ret ) { ret ) { ret ) ; }
    StringBuilder ( ret ) { ret ) { ret ) ; }    StringBuilder ( ret ) { ret ) { ret ) ; }
    StringBuilder ( ret ) { ret ) { ret ) { ret ) ; }    StringBuilder ( ret ) { ret ) { ret ) { ret ) ; }    StringBuilder ( ret ) { ret ) { ret ) { ret ) ; }    StringBuilder ( ret ) { ret ) { ret ) { ret ) ; }    StringBuilder ( ret ) { ret ) { ret ) { ret ) ; }    StringBuilder ( ret ) { ret ) { ret ) { ret ) ; ret ) ; }    StringBuilder ( ret ) { ret ) { ret ) { ret ) { ret ) ; ret ) ; }    StringBuilder ( ret ) { ret ) { ret ) { ret ) { ret ) ; ret ) ; }    StringBuilder ( ret ) { ret ) { ret ) { ret ) { ret ) ; ret ) ; }    StringBuilder ( ret ) { ret ) { ret ) { ret ) { ret ) ; ret ) ; }    StringBuilder ( ret ) { ret ) { ret ) { ret ) { ret ) ; ret ) ; ret ) ; }    StringBuilder ( ret ) { ret ) { ret ) { ret ) { ret ) ; ret ) ; ret ) { ret ) ; ret ) { ret ) ; ret ) ; }    StringBuilder ( ret ) { ret ) { ret ) { ret ) { ret ) ; ret ) ; ret ) { ret ) ; ret ) ; }    StringBuilder ( ret ) { ret ) { ret ) { ret ) { ret ) ; ret ) ; ret ) { ret ) ; ret ) { ret ) ; ret ) ; ret ) { ret ) ; ret ) ; ret ) { ret ) ; ret ) { ret ) ; ret ) ; ret ) { ret ) ; ret ) ; ret ) { ret ) ; ret ) ; ret ) { ret ) ; ret ) ; ret ) { ret ) ;

# END OF TRANSLATION



   
    // 2 ) ; }
    // 2 ) ; } ; }
    // 2 ) ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ;

# END OF TRANSLATION






    // 20 ) ; }



 

    // 20 ) ; }

    // 20 ) ; }
    // 20 ) ; }
    // 2 ) ; }
    // 2 ) ; }
    // 2 ) ; }
    // 2 ) ; }
    // 2 ) ; }
    // 2 ) ; }
    // 2 ) ; }
    // 2 ) ; }
    // 2 ) ; }
    // 2 ) ; }
    // 2 ) ; }
    // 2 ) ; }
    // 2 ) ; }
    // 2 ) ; }
    // 2 ) ; }
    // 2 ) ; }
    // 2 ) ; }
    // 2 ) ; }
    // 2 ) ; }
    // 2 ) ; }
    // 2 ) ; }
    // 2 ) ; }
    // 2 ) ; }
    // 2 ) ; }
    // 2 ) ; }
    // 2 ) ; }
    // 2 ) ; }
    // 2 ) ;    // 2 ) ; }
    // 2 ) ; }
    // 2 ) ;    // 2 ) ; }
    // 2 ) ; }
    // 2 ) ; }
    // 2 ) ;    // 2 ) ; }
    // 2 ) ;    // 2 ) ; }
    // 2 ) ;    // 2 ) ; }
    // 2 ) ;    // 2 ) ; }
    // 2 ) ;    // 2 ) ;    // 2 ) ; }
    // 2 ) ;    // 2 ) ;    // 2 ) ;    // 2 ) ;    // 2 ) ; }


# END OF TRANSLATION








    // if ( count == 0 ) {
    // if ( count == 0 ) {
    // if ( count == 0 ) {
    // if ( count == 0 ) {
    // if ( count == 0 ) {
    // if ( count == 0 ) {
    // if ( count == 0 ) {
    // if ( count == 0 ) {
    // if ( count == 0 ) {
    // if ( count == 0 ) {
    // if ( count == 0 ) {
    // if ( count == 0 ) {
    // if ( count == 0 ) {
    // if ( count == 0 ) {
    // if ( count == 0 ) {
    // if ( count == 0 ) {
    // if ( count == 0 ) {
    // if ( count == 0 ) {
    // if ( count == 0 ) {
    // if ( count == 0 ) {
    // if ( count == 0 ) {
    // if ( count == 0 ) {
    // if ( count == 0 ) {
    // if ( count == 0 ) {
    // if ( count == 0 ) {
    // if ( count == 0 ) {
    // if ( count == 0 ) {
    // if ( count == 0 ) {
    // if ( count == 0 ) {
    // if ( count == 0 ) {
    // if ( count == 0 ) {
    // if ( count == 0 ) {
    // if ( count == 0 ) {
    // if ( count == 0 ) {
    // if ( count == 0 ) {
    // if ( count == 0 ) {
    // if ( count == 0 ) {
    // if ( count == 0 ) {
    // if ( count == 0 ) {
    // if ( count == 0 ) {
    // if ( count == 0 ) {
    // if ( count == 0 ) {
    // if ( count == 0 ) {
    // if ( count == 0 ) {
    // if ( count == 0 ) {
    // if ( count == 0 ) {
    // if ( count == 0 ) {
    // if ( count == 0 ) {
    // if ( count == 0 ) {
    // if ( count == 0 ) {
    // if ( count == 0 ) {
    // if ( count == 0 ) {
    // if ( count == 0 ) {
    // if ( count == 0 ) {
    // if ( count == 0 ) {
    // if ( count == 0 ) {
    // if ( count == 0 ) {
    // if ( count == 0 ) {
    // if ( count == 0 ) {
    // if ( count == 0 ) {
    // if ( count == 0 ) {
    // if ( count == 0 ) {
    // if ( count == 0 ) {
    // if ( count == 0 ) {
    // if ( count == 0 ) {
    // if ( count == 0 ) {
    // if ( count == 0 ) {
    // if ( count == 0 ) {
    // if ( count == 0 ) {
    // if ( count == 0 ) {
    // if ( count == 0 ) {
    // if ( count == 0 ) {
    // if ( count == 0 ) {
    // if ( count == 0 ) {
    // if ( count == 0 ) {
    // if ( count == 0 ) {
    // if ( count == 0 ) {


# END OF TRANSLATION





   
   
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 


# END OF TRANSLATION


 
    if ( date .equals ( date .equals ( date .equals ( date .equals ( date .equals ( date .equals ( date .equals ( date .equals ( date .equals ( date .equals ( date .equals ( date .equals ( date .equals ( date .equals ( date .equals ( date .equals ( date .equals ( date .equals ( date .equals ( date .equals ( date .equals ( date .equals ( date .equals ( date .equals ( date .equals ( date .equals ( date .equals ( date .equals ( date .equals ( date .equals ( date .equals ( date .equals ( date .equals ( date .equals ( date .equals ( date .equals ( date .equals ( date .equals ( date .equals ( date .equals ( date .equals ( date .equals ( date .equals ( date .equals ( date .equals ( date .equals ( date .equals ( date .equals ( date .equals ( date .equals ( date .equals ( date .equals ( date .equals ( date .equals ( date .equals ( date .equals ( date .equals ( date .equals ( date .equals ( date .equals ( date .equals ( date .equals ( date .equals ( date .equals ( date .equals ( date .equals ( date .equals ( date .equals ( date .equals ( date .equals ( date .equals ( date .equals ( date .equals ( date .equals ( date .equals ( date .equals ( date .equals ( date .equals ( date .equals ( date .equals ( date .equals ( date .equals ( date .equals ( date .equals ( date .equals ( date .equals ( date .equals ( date .equals ( date .equals ( date .equals ( date .equals ( date .equals ( date .equals ( date .equals ( date .equals ( date .equals ( date .equals ( date .equals ( date .equals ( date .equals ( date .equals ( date .equals ( date .equals ( date .equals ( date .equals ( date .equals ( date .equals ( date .equals ( date .equals ( date .equals ( date .equals ( date .equals ( date .equals ( date .equals ( date .equals ( date .equals ( date .equals ( date .equals ( date .equals ( date .equals ( date .equals ( date .equals ( date .equals ( date .equals ( date .equals ( date .equals ( date .equals ( date .equals ( date .equals ( date .equals ( date .equals ( date .equals ( date .equals ( date .equals ( date .equals ( date .equals ( date .equals ( date .equals ( date .equals ( date .equals ( date .equals ( date .equals ( date .equals ( date .equals ( date .equals ( date .equals ( date .equals ( date .equals ( date .equals ( date .equals ( date .equals ( date .equals ( date .equals ( date .equals ( date .equals ( date .equals ( date .equals ( date .equals ( date .equals ( date .equals ( date .equals ( date .equals ( date .equals ( date .equals ( date .equals ( date .equals ( date

# END OF TRANSLATION



 

 
 
 
 
 0 ) ; } else {
 
 
 0 ) ; } else {
 
 0 ; } else {
 
 0 ; } else {
 
 0 ; } else {
 
 0 ; } else {
 
 0 ; } else {
 0 ; } else {
 
 0 ; } else {
 0 ; } else {
 
 0 ; } else {
 0 ; } else {
 0 ; } else {
 0 ; } else { 0 ; } else { 0 ; } else { 0 ; } else { 0 ; } else { 0 ; } else { 0 ; } else { 0 ; } else { 0 ; } else { 0 ; } else { 0 ; } else { 0 ; } else { 0 ; } else { 0 ; } else { 0 ; } else { 0 ; } else { 0 ; } else { 0 ; } else { 0 ; } else { 0 ; } else { 0 ; } else { 0 ; } else { 0 ; } else { 0 ; } else { 0 ; } else { 0 ; } else { 0 ; } else { 0 ; } else { 0 ; } else { 0 ; } else { 0 ; } else { 0 ; } else { 0 ; } else { 0 ; } else { 0 ; } else { 0 ; } else { 0 ; } else { 0 ; } else { 0 ; } else { 0 ; } else { 0 ; } else { 0 ; } else { 0 ; } else { 0 ; } else { 0 ; } else { 0 ; } else { 0 ; } else { 0 ; } else { 0 ; } else { 0 ; } else { 0 ; } else { 0 ; } else { 0 ; } else { 0 ; } else { 0 ; } else { 0 ; } else { 0 ; } else { 0 ; } else { 0 ; } else { 0 ; } else { 0 ; } else { 0 ; } else { 0 ; } else { 0 ; } else { 0 ; } else { 0 ; } else { 0 ; } else { 0 ; } else { 0 ; } else { 0 ; } else { 0 ; } else { 0 ; } else { 0 ; } else { 0 ; } else { 0 ; } else { 0 ; } else { 0 ; } else { 0 ; } else { 0 ; } else { 0

# END OF TRANSLATION





 


    // 2 ) ; }

    // 2 ) ; }
    // 2 ) ; }
    // 2 ) ; }
    // 2 ) ; }
    // 2 ) ; }
    // 2 ) ; }
    // 2 ) ; }
    // 2 ) ; }
    // 2 ) ; }
    // 2 ) ; }
    // 2 ) ; }
    // 2 ) ; }
    // 2 ) ; }
    // 2 ) ; }
    // 2 ) ; }
    // 2 ) ; }
    // 2 ) ; }
    // 2 ) ; }
    // 2 ) ; }
    // 2 ) ; }
    // 2 ) ; }
    // 2 ) ; }
    // 2 ) ; }
    // 2 ) ; }
    // 2 ) ; }
    // 2 ) ; }
    // 2 ) ; }
    // 2 ) ; }
    // 2 ) ; }
    // 2 ) ; }
    // 2 ) ; }
    // 2 ) ; }
    // 2 ) ; }
    // 2 ) ; }
    // 2 ) ; }
    // 2 ) ; }
    // 2 ) ;    // 2 ) ; }
    // 2 ) ; }
    // 2 ) ; }
    // 2 ) ;    // 2 ) ; }
    // 2 ) ; }
    // 2 ) ;    // 2 ) ; }
    // 2 ) ;    // 2 ) ; }
    // 2 ) ; }
    // 2 ) ;    // 2 ) ; }
    // 2 ) ;    // 2 ) ; }
    // 2 ) ;    // 2 ) ; }
    // 2 ) ;    // 2 ) ; }
    // 2 ) ;    // 2 ) ;    // 2 ) ; }    // 2 ) ;    // 2 ) ;    // 2 ) ;    // 2 ) ;    // 2 ) ;    // 2 ) ; }

# END OF TRANSLATION




 

    return ( txt .equals ( txt .equals ( txt .equals ( txt .equals ( txt .equals ( txt .equals ( txt .equals ( txt ) ; }


 
    return ( txt .equals ( txt .equals ( txt .equals ( txt .equals ( txt ) ; }

    return ( txt .equals ( txt .equals ( txt .equals ( txt .equals ( txt .equals ( txt ) ; }
    return ( txt .equals ( txt .equals ( txt .equals ( txt ) ; }
txt .equals ( txt .equals ( txt ) ; }
txt .equals ( txt .equals ( txt .equals ( txt .equals ( txt ) ; }
txt .equals ( txt .equals ( txt .equals ( txt .equals ( txt .equals ( txt .equals ( txt ) ; } ) ; }
txt .equals ( txt .equals ( txt .equals ( txt .equals ( txt .equals ( txt .equals ( txt .equals ( txt .equals ( txt .equals ( txt .equals ( txt .equals ( txt ) ; } ) ; } ) ; }
txt .equals ( txt .equals ( txt .equals ( txt .equals ( txt .equals ( txt .equals ( txt .equals ( txt .equals ( txt .equals ( txt .equals ( txt .equals ( txt .equals ( txt .equals ( txt .equals ( txt .equals ( txt .equals ( txt .equals ( txt .equals ( txt .equals ( txt .equals ( txt .equals ( txt .equals ( txt .equals ( txt .equals ( txt .equals ( txt .equals ( txt .equals ( txt .equals ( txt .equals ( txt .equals ( txt .equals ( txt .equals ( txt .equals ( txt .equals ( txt .equals ( txt .equals ( txt .equals ( txt .equals ( txt .equals ( txt .equals ( txt .equals ( txt .equals ( txt .equals ( txt .equals ( txt .equals ( txt .equals ( txt .equals ( txt .equals ( txt .equals ( txt .equals ( txt .equals ( txt .equals ( txt .equals ( txt .equals ( txt .equals ( txt .equals ( txt .equals ( txt .equals ( txt .equals ( txt .equals ( txt .equals ( txt .equals ( txt .equals ( txt .equals ( txt .equals ( txt .equals ( txt .equals ( txt .equals ( txt .equals ( txt .equals ( txt .equals ( txt .equals ( txt .equals ( txt .equals ( txt .equals ( txt .equals ( txt .equals ( txt .equals ( txt .equals ( txt .equals ( txt .equals ( txt .equals ( txt .equals ( txt .equals ( txt .equals ( txt .equals ( txt .equals ( txt .equals ( txt .equals ( txt .equals ( txt .equals ( txt .equals ( txt .equals ( txt .equals ( txt .equals ( txt .equals ( txt .equals ( txt .equals ( txt .equals ( txt .equals ( txt .equals ( txt .equals ( txt .equals ( txt .equals ( txt .equals ( txt .equals ( txt .equals ( txt .equals ( txt .equals ( txt .equals ( txt .equals ( txt .equals ( txt .equals ( txt .equals ( txt .equals ( txt .equals ( txt .equals ( txt .equals ( txt .equals ( txt .equals ( txt .equals ( txt .equals ( txt .equals ( txt .equals ( txt .equals ( txt .equals ( txt .equals ( txt .equals ( txt .equals ( txt .equals ( txt .equals ( txt .equals ( txt .equals ( txt .equals ( txt .equals ( txt .equals ( txt .equals ( txt .equals ( txt .equals ( txt .equals ( txt .equals ( txt .equals ( txt .equals ( txt .equals ( txt .equals ( txt .equals ( txt .equals ( txt .equals ( txt .

# END OF TRANSLATION


   
   
    {
    // 10 ) ; }
    // 10 ; }
    // 10 ; }
    // 10 ; }
    // 10 ; }
    // 10 ; }
    // 1 ; }
    // 2 ) ; }
    // 2 ) ; }
    // 2 ) ; }
    // 2 ; }
    // 2 ) ; }
    // 2 ; }
    // 2 ; }
    // 2 ; }
    // 2 ; }
    // 1 ; }
    // 2 ; }
    // 2 ; }
    // 2 ; }
    // 2 ; }
    // 2 ; }
    // 2 ; }
    // 2 ; }
    // 2 ; }
    // 2 ; }
    // 2 ; }
    // 2 ; }
    // 2 ; }
    // 2 ; }
    // 2 ; }
    // 2 ; }
    // 2 ; }
    // 2 ; }
    // 2 ;    // 2 ; }
    // 2 ; }
    // 2 ;    // 2 ; }    // 2 ;    // 2 ; }    // 2 ; }    // 2 ;    // 2 ; }    // 2 ;    // 2 ; }    // 2 ;    // 2 ;    // 2 ; }

# END OF TRANSLATION


```




 

    // 2 , "idx" , "idx" ) ;
 
    // 2 , "idx" , "idx" ) ;
    // 2 , "idx" , "idx" ) ;
    // 2 , "idx" , "idx" ) ;
    // 2 , "idx" , "idx" ) ;
    // 2 , "idx" ) ;
    // 2 , "idx" , "idx" ) ;
    // 2 , "idx" ) ;
    // 2 , "idx" ) ;
    // 2 , "idx" , "idx" ) ;
    // 2 , "idx" , "idx" ) ;
    // 2 , "idx" ) ;
    // 2 , "idx" ) ;
    // 2 , "idx" ) ;
    // 2 , "idx" , "idx" ) ;
    // 2 , "idx" ) ;    // 2 , "idx" ) ;    // 2 , "idx" ) ;    // 2 , "idx" ) ;    // 2 , "idx" ) ;    // 2 , "idx" ) ;    // 2 , "idx" ) ;    // 2 , "idx" ) ;    // 2 , "idx" ) ;    // 2 , "idx" ) ;    // 2 , "idx" ) ;    // 2 , "idx" ) ;    // 2 , "idx" ) ;    // 2 , "idx" ) ;    // 2 , "idx" ) ;    // 2 , "idx" ) ;    // 2 , "idx" ) ;    // 2 , "idx" ) ;    // 2 , "idx" ) ;    // 2 , "idx" ) ;    // 2 , "idx" ) ;    // 2 , "idx" ) ;    // 2 , "idx" ) ;    // 2 , "idx" ) ;    // 2 , "idx" ) ;    // 2 , "idx" ) ;    // 2 , "idx" ) ;    // 2 , "idx" ) ;    // 2 , "idx" ) ;    // 2 , "idx" ) ;    // 2 , "idx" ) ;    // 2 , "idx" ) ;    // 2 , "idx" ) ;    // 2 , "idx" ) ;    // 2 , "idx" ) ;    // 2 , "idx" ) ;    // 2 , "idx" ) ;    // 2 , "idx" ) ;    // 2 , "idx" ) ;    // 2 , "idx" ) ;    // 2 , "idx" ) ;    // 2 , "idx" ) ;    // 2 , "idx" ) ;    // 2 , "idx" ) ;    // 2 , "idx" ) ;    // 2 , "idx" ) ;    // 2 , "idx" ) ;    // 2 , "idx" ) ;    // 2 , "idx" ) ;    // 2 , "idx" ) ;    // 2 , "idx" ) ;    // 2 , "idx" ) ;    // 2 , "idx" ) ;    // 2 , "idx" ) ;

# END OF TRANSLATION







    }

   
    }
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    //  // 


# END OF TRANSLATION





 

    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 


# END OF TRANSLATION




   
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    //  // 


# END OF TRANSLATION





    // 

    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 


# END OF TRANSLATION



























   
   
    // if ( chars ) { chars ) { chars ) { chars = new StringBuilder ( chars ) ; } else {
    // if ( chars ) { chars ) { chars ) ; } else {
    // if ( chars ) { chars ) { chars ) { chars ) ; } else {
    // if ( chars ) { chars ) { chars ) ; } else {
    // if ( chars ) { chars ) { chars ) { chars ) ; } else { chars ) ; } else { chars ) { chars ) ; } else { chars ) ; } else { chars ) { chars ) ; } else { chars ) { chars ) ; } else { chars ) ; } else { chars ) { chars ) ; } else { chars ) { chars ) ; } else { chars ) { chars ) ; chars ) ; } else { chars ) { chars ) ; chars ) ; } else { chars ) { chars ) { chars ) ; chars ) ; chars ) ; } else { chars ) { chars ) ; chars ) { chars ) ; chars ) ; chars ) { chars ) ; chars ) ; chars ) ; } else { chars ) { chars ) ; chars ) ; chars ) { chars ) ; chars ) ; chars ) ; chars ) ; chars ) { chars ) ; chars ) ; chars ) ; chars ) { chars ) ; chars ) ; chars ) ; chars ) ; chars ) { chars ) ; chars ) ; chars ) ; chars ) ; chars ) ; chars ) { chars ) ; chars ) ; chars ) ; chars ) ; chars ) ; chars ) ; chars ) ; chars ) { chars ) ; chars ) ; chars ) ; chars ) ; chars ) ; chars ) ; chars ) ; chars ) ; chars ) ; chars ) { chars ) ; chars ) ; chars ) ; chars ) ; chars ) ; chars ) ; chars ) ; chars ) ; chars ) ; chars ) ; chars ) ; chars ) ; chars ) ; chars ) ; chars ) ; chars ) ; chars ) ; chars ) ; chars ) ; chars ) ; chars ) ; chars ) ; chars ) ; chars ) ; chars ) ; chars ) ; chars ) ; chars ) ; chars ) ; chars ) ; chars ) ; chars ) ; chars ) ; chars ) ; chars ) ; chars ) ; chars ) ; chars ) ; chars ) ; chars ) ; chars ) ; chars ) ; chars ) ; chars ) ; chars ) ; chars ) ; chars ) ; chars ) ; chars ) ; chars ) ; chars ) ; chars ) ; chars ) ; chars ) ; chars ) ; chars ) ; chars ) ; chars ) ; chars ) ; chars ) ; chars ) ; chars ) ; chars ) ; chars ) ; chars ) ; chars ) ; chars ) ; chars ) ; chars ) ; chars ) ; chars ) ; chars ) ; chars ) ; chars

# END OF TRANSLATION




   
    {
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    //  // 
    //  // 


# END OF TRANSLATION





   
   
    int i = 0 ; }
   
    int i = 0 ; }
    int i = 0 ; }
    int i = 0 ; }
    int j = 0 ; }
    int j = 0 ; }
    int i = 0 ; }
    int j = 0 ; }
    int j = 0 ; }
    int j = 0 ; }
    int i = 0 ; }
    int j = 0 ; }
    int j = 0 ; }
    int j = 0 ; }
    int j = 0 ; }
    int i = 0 ; }
    int j = 0 ; }
    int j = 0 ; }
    int j = 0 ; }
    int j = 0 ; }
    int j = 0 ; }
    int j = 0 ; }
    int j = 0 ; }
    int j = 0 ; }
    int j = 0 ; }
    int j = 0 ;    int j = 0 ; }    int j = 0 ; }    int j = 0 ; }    int j = 0 ;    int j = 0 ; }    int j = 0 ;    int j = 0 ;    int j = 0 ;    int j = 0 ;    int j = 0 ;    int j = 0 ;    int j = 0 ;    int j = 0 ;    int j = 0 ;    int j = 0 ;    int j = 0 ;    int j = 0 ;    int j = 0 ;    int j = 0 ;    int j = 0 ;    int j = 0 ;    int j = 0 ;    int j = 0 ;    int j = 0 ;    int j = 0 ;    int j = 0 ;    int j = 0 ;    int j = 0 ;    int j = 0 ;    int j = 0 ;    int j = 0 ;    int j = 0 ;    int j = 0 ;    int j = 0 ;    int j = 0 ;    int j = 0 ;    int j = 0 ;    int j = 0 ;    int j = 0 ;    int j = 0 ;    int j = 0 ;    int j = 0 ;    int j = 0 ;    int j = 0 ;    int j = 0 ;    int j = 0 ;    int j = 0 ;    int j = 0 ;    int j = 0 ;    int j = 0 ;    int j = 0 ;    int j = 0 ;    int j = 0 ;    int j = 0 ;    int j = 0 ;    int j = 0 ;    int j = 0 ;    int j = 0 ;    int j = 0 ;    int j = 0 ;    int j = 0 ;    int j = 0 ;    int j = 0 ;    int j = 0 ;    int j = 0 ;    int j = 0 ;    int j = 0 ;    int j = 0 ;    int j = 0 ;    int j = 0 ;    int j = 0 ;    int j = 0 ;    int j = 0 ;    int j = 0 ;    int j = 0 ;    int j = 0 ;    int j = 0 ;    int j = 0 ;    int j = 0 ;    int j = 0 ;    int j = 0 ;    int j = 0 ;    int j = 0 ;    int j = 0 ;    int j = 0 ;    int j = 0 ;    int j = 0 ;    int j = 0 ;    int j = 0 ;    int j = 0 ;    int j = 0 ;    int j = 0 ;    int j = 0 ;    int j = 0 ;   

# END OF TRANSLATION






   
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 


# END OF TRANSLATION





 


 

 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1

# END OF TRANSLATION




 



    int i = 0 ; }
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 


# END OF TRANSLATION



   
    {
    }
   
    {
    }
    {
    }
    {
    }
    {
    }
    {
    }
    {
    }
    {
    }
    {
    }
    {
    }
    {
    }
    {
    }    {
    }    {
    }    }    {
    }    {
    }    {
    }    {
    }    }    {
    }    {
    }    {
    }    {
    }    }    {
    }    }    {
    }    {
    }    {
    }    {
    }    {
    }    {
    }    {
    }    {
    }    {
    }    {
    }    {
    }    {    }    }    {    }    {    }    }    {    }    }    {    }    {    }    {    }    {    }    }    {    }    {    }    {    }    {    }    {    }    {    }    {    }    {    }    }    {    }    {    }    {    }    {    }    {    }    {    }    {    }    {    }    {    }    {    }    {    }    {    }    }    {    }    {    }    {    }    {    }    {    }    {    }    {    }    {    }    {    }    {    }    {    }    {    }    {    }    {    }    {    }    {    }    {    }    {    }    {    }    {    }    {    }    {    }    {    }    {    }    {    }    {    }    {    }    {    }    {    }    {    }    {    }    {    }    {    }    {    }    {    }    {    }    {    }    {    }    {    }    {    }    {    }    {    }    {    }    {    }    {    }    {    }    {    }    {    }    {    }    {    }    {    }    {    }    {    }    {    }    {    }    {    }    {    }    {    }    {    }    {    }    {    }    {    }    {    }    {    }    {    }    {    }    {    }    {    }    {    }    {    }    {    }    {    }    {    }    {    }    {    }    {    }    {    }    {    }    {    }    {    }    {    }    {    }    {    }    {    }    {    }    {    }    {    }    {    }    {    }    {    }    {    }    {    }    {    }    {    }    {    }    {    }    {    }    {    }    {    }    {    }    {    }    {    }    {    }    {    }    {    }

# END OF TRANSLATION




   
    // 
    // 0 ;
    // 0 ;
    // 0 ;
    // 0 ;
    // 0 ;
    // 0 ; 
    // 0 ; 
    // 0 ; 
    // 0 ; 
    // 0 ; 
    // 0 ; 
    // 0 ; 
    // 0 ; 
    // 0 ;  // 0 ;  // 0 ;  // 0 ;  // 0 ;  // 0 ;  // 0 ;  // 0 ;  // 0 ;  // 0 ;  // 0 ;  // 0 ;  // 0 ;  // 0 ;  // 0 ;  // 0 ;  // 0 ;  // 0 ;  // 0 ;  // 0 ;  // 0 ;  // 0 ;  // 0 ;  // 0 ;  // 0 ;  // 0 ;  // 0 ;  // 0 ;  // 0 ;  // 0 ;  // 0 ;  // 0 ;  // 0 ;  // 0 ;  // 0 ;  // 0 ;  // 0 ;  // 0 ;  // 0 ;  // 0 ;  // 0 ;  // 0 ;  // 0 ;  // 0 ;  // 0 ;  // 0 ;  // 0 ;  // 0 ;  // 0 ;  // 0 ;  // 0 ;  // 0 ;  // 0 ;  // 0 ;  // 0 ;  // 0 ;  // 0 ;  // 0 ;  // 0 ;  // 0 ;  // 0 ;  // 0 ;  // 0 ;  // 0 ;  // 0 ;  // 0 ;  // 0 ;  // 0 ;  // 0 ;  // 0 ;  // 0 ;  // 0 ;  // 0 ;  // 0 ;  // 0 ;  // 0 ;  // 0 ;  // 0 ;  // 0 ;  // 0 ;  // 0 ;  // 0 ;  // 0 ;  // 0 ;  // 0 ;  // 0 ;  // 0 ;  // 0 ;  // 0 ;  // 0 ;  // 0 ;  // 0 ;  // 0 ;  // 0 ;  // 0 ;  // 0 ;  // 0 ;  // 0 ;  // 0 ;  // 0 ;  // 0 ;  // 0 ;  // 0 ;  // 0 ;  // 0 ;  // 0 ;  // 0 ;  // 0 ;  // 0 ;  // 0 ;  // 0 ;  // 0 ;  // 0 ;  // 0 ;  // 0 ;  // 0 ;  // 0 ;  // 0 ;  // 0 ;  // 0 ;  // 0 ;  // 0 ;  // 0 ;  // 0 ;  // 0 ;  // 0 ;  // 0 ;  // 0

# END OF TRANSLATION



 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    //  // 


# END OF TRANSLATION




 

 10 ) ; }



 10 ) ; }

 

 10 ) ; }

 

 10 ) ; }

 10 ; }

 10 ) ; }

 10 ; }


 10 ; }

 1 ) ; }


 10 ; }


 1 ) ; } ; }


 10 ; } ; }


 10 ; } ; }


 10 ; } ; } ; }














 1 ) ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ;

# END OF TRANSLATION





 




 

   = 0 ; }

    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 


# END OF TRANSLATION





 




    . charAt ( i ) ; } else {
    . charAt ( i ) ; } ; } else {
    . charAt ( i ) ; } ; } ; } else {
    . charAt ( i ) ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; }

# END OF TRANSLATION





   
    {
    String . get ( names . get ( names .get ( i ) ; }
    {
    String .get ( names .get ( names ) ; }
    {
    String .get ( names .get ( names ) ; }
    {
    String .get ( names ) ; }
    {
    String .get ( names ) ; }
    {
    String .get ( names ) ;    }
    {
    String .get ( names ) ;    }
    {
    String .get ( names .get ( names ) ;    }
    {
    String .get ( names ) ;    }
    {
    String .get ( names ) ;    }    {
    String .get ( names ) ;    }    {
    String .get ( names ) ;    }    {
    String .get ( names ) ;    }    {
    String .get ( names ) ;    }    {    String .get ( names ) ;    }    {
    String .get ( names ) ;    }    {    String .get ( names ) ;    }    {    String .get ( names ) ;    }    {    String .get ( names ) ;    }    {    String .get ( names ) ;    }    {    String .get ( names ) ;    }    {    String .get ( names ) ;    }    {    String .get ( names ) ;    }    {    String .get ( names ) ;    }    {    String .get ( names ) ;    }    {    String .get ( names ) ;    }    {    String .get ( names ) ;    }    {    String .get ( names ) ;    }    {    String .get ( names ) ;    }    {    String .get ( names ) ;    }    {    String .get ( names ) ;    }    {    String .get ( names ) ;    }    {    String .get ( names ) ;    }    {    String .get ( names ) ;    }    {    String .get ( names ) ;    }    {    String .get ( names ) ;    }    {    String .get ( names ) ;    }    {    String .get ( names ) ;    }    {    String .get ( names ) ;    }    {    String .get ( names ) ;    }    {    String .get ( names ) ;    }    {    String .get ( names ) ;    }    {    String .get ( names ) ;    }    {    String .get ( names ) ;    }    {    String .get ( names ) ;    }    {    String .get ( names )    {    String .get ( names ) ;    }    {    String .get ( names ) ;    }    {    String .get ( names ) ;    }    {    String .get ( names )    {    String .get ( names ) ;    }    {    String .get ( names )    {    String .get ( names ) ;    }    {    String .get ( names )    {    String .get ( names ) ;    }    {    String .get ( names )    {    String .get ( names ) ;    }    {    String .get ( names )    {    String .get ( names ) ;    }    {    String .get ( names )    {    String .get ( names ) ;    }    {    String .get ( names

# END OF TRANSLATION

Matrix ( i ) ; } ;


 


    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    //  // 


# END OF TRANSLATION



   
    {
    . get ( d ) ; } else {
    . get ( d ) ; }
    } else {
    .get ( d ) ; }
    }
    .get ( d ) ; }
    .get ( d ) ; } else {
    .get ( d ) ; } else {
    .get ( d ) ; }
    .get ( d ) ; } else {
    .get ( d ) ; }
    .get ( d ) ; } else {
    .get ( d ) ; } else {
    .get ( d ) ; } else {
    .get ( d ) ; }
    .get ( d ) ; } else {
    .get ( d ) ; } else {
    .get ( d ) ; } else {
    .get ( d ) ; } else {
    .get ( d ) ; } else {
    .get ( d ) ; } else {
    .get ( d ) ; } else {
    .get ( d ) ; } else {
    .get ( d ) ; } else {
    .get ( d ) ; } else {
    .get ( d ) ; } else {
    .get ( d ) ; } else {
    .get ( d ) ; } else {
    .get ( d ) ; } else {
    .get ( d ) ; } else {
    .get ( d ) ; } else {
    .get ( d ) ; } else {
    .get ( d ) ; } else {
    .get ( d ) ; } else {
    .get ( d ) ; } else {
    .get ( d ) ; } else {
    .get ( d ) ; } else {
    .get ( d ) ; } else {
    .get ( d ) ; } else {
    .get ( d ) ; } else {
    .get ( d ) ; } else {
    .get ( d ) ; } else {
    .get ( d ) ; } else {
    .get ( d ) ; } else {
    .get ( d ) ; } else {
    .get ( d ) ; } else {
    .get ( d ) ; } else {
    .get ( d ) ; } else {
    .get ( d ) ; } else {
    .get ( d ) ; } else {
    .get ( d ) ; } else {
    .get ( d ) ; } else {
    .get ( d ) ; } else {
    .get ( d ) ; } else {
    .get ( d ) ; } else {
    .get ( d ) ; } else {
    .get ( d ) ; } else {
    .get ( d ) ; } else {
    .get ( d ) ; } else {
    .get ( d ) ; } else {
    .get ( d ) ; } else {
    .get ( d ) ; } else {
    .get ( d ) ; } else {
    .get ( d

# END OF TRANSLATION



   
    StringBuilder ( i ) {
   += "A" ) ; }
   +=" ; }
   +=" ;
    }
   +=" ;
    }
   +=" ;
    }
   +=" ;    }
   +=" ;    }
    StringBuilder ( i ) ;    }
    StringBuilder ( i ) ;    }
    StringBuilder ( i ) ;    }
    StringBuilder ( i ) ;    }
    StringBuilder ( i ) ;    }
    StringBuilder ( i ) ;    }
    }
    StringBuilder ( i ) ;    }
    StringBuilder ( i ) ;    }
    StringBuilder ( i ) ;    }
    StringBuilder ( i ) ;    }
    StringBuilder ( i ) ;    }
    }
    StringBuilder ( i ) ;    }
    StringBuilder ( i ) ;    }
    StringBuilder ( i ) ;    }
    StringBuilder ( i ) ;    }
    }
    StringBuilder ( i ) ;    }
    StringBuilder ( i ) ;    }
    StringBuilder ( i ) ;    }
    StringBuilder ( i ) ;    }
    }
    StringBuilder ( i ) ;    }
    StringBuilder ( i ) ;    }    StringBuilder ( i ) ;    }
    }
    StringBuilder ( i ) ;    }
    StringBuilder ( i ) ;    }    }
    StringBuilder ( i ) ;    }
    StringBuilder ( i ) ;    }
    StringBuilder ( i ) ;    }    }
    StringBuilder ( i ) ;    }
    }
    StringBuilder ( i ) ;    }
    StringBuilder ( i ) ;    }    }
    StringBuilder ( i ) ;    }    }
    StringBuilder ( i ) ;    }    StringBuilder ( i ) ;    }    }    StringBuilder ( i ) ;    }    StringBuilder ( i ) ;    }    }
    StringBuilder ( i ) ;    }    StringBuilder ( i ) ;    }    }    StringBuilder ( i ) ;    }    }    StringBuilder ( i ) ;    }    }    StringBuilder ( i ) ;    }    }    StringBuilder ( i ) ;    }    }    StringBuilder ( i ) ;    }
    StringBuilder ( i ) ;    }    }    StringBuilder ( i ) ;    }    }    StringBuilder ( i ) ;    }    }
    StringBuilder ( i ) ;    }    }    StringBuilder ( i ) ;    }    }    StringBuilder ( i ) ;    }    }    StringBuilder ( i ) ;    }    }    StringBuilder ( i ) ;    }    }    StringBuilder ( i ) ;    }    }    StringBuilder ( i ) ;    }    }
    StringBuilder ( i ) ;    }    }    StringBuilder ( i ) ;    }
    }    StringBuilder ( i ) ;    }    }    StringBuilder ( i ) ;    }    }    StringBuilder ( i ) ;    }    }    }    StringBuilder ( i ) ;    }    }    StringBuilder ( i ) ;    }    }    StringBuilder ( i ) ;    }    }

# END OF TRANSLATION



 

    tmp = tmp .get ( tmp ) ;
 
 
    tmp = tmp .get ( tmp ) ;
 
    .get ( tmp ) ;
    .get ( tmp ) ;
    .get ( tmp ) ;
    .get ( tmp ) ;
    .get ( tmp ) ;
    .get ( tmp ) ;
    .get ( tmp ) ;    .get ( tmp ) ;    .get ( tmp ) ;    .get ( tmp ) ;    .get ( tmp ) ;    .get ( tmp ) ;    .get ( tmp ) ;    .get ( tmp ) ;    .get ( tmp ) ;    .get ( tmp ) ;    .get ( tmp ) ;    .get ( tmp ) ;    .get ( tmp ) ;    .get ( tmp ) ;    .get ( tmp ) ;    .get ( tmp ) ;    .get ( tmp ) ;    .get ( tmp ) ;    .get ( tmp ) ;    .get ( tmp ) ;    .get ( tmp ) ;    .get ( tmp ) ;    .get ( tmp ) ;    .get ( tmp ) ;    .get ( tmp ) ;    .get ( tmp ) ;    .get ( tmp ) ;    .get ( tmp ) ;    .get ( tmp ) ;    .get ( tmp ) ;    .get ( tmp ) ;    .get ( tmp ) ;    .get ( tmp ) ;    .get ( tmp ) ;    .get ( tmp ) ;    .get ( tmp ) ;    .get ( tmp ) ;    .get ( tmp ) ;    .get ( tmp ) ;    .get ( tmp ) ;    .get ( tmp ) ;    .get ( tmp ) ;    .get ( tmp ) ;    .get ( tmp ) ;    .get ( tmp ) ;    .get ( tmp ) ;    .get ( tmp ) ;    .get ( tmp ) ;    .get ( tmp ) ;    .get ( tmp ) ;    .get ( tmp ) ;    .get ( tmp ) ;    .get ( tmp ) ;    .get ( tmp ) ;    .get ( tmp ) ;    .get ( tmp ) ;    .get ( tmp ) ;    .get ( tmp ) ;    .get ( tmp ) ;    .get ( tmp ) ;    .get ( tmp ) ;    .get ( tmp ) ;    .get ( tmp ) ;    .get ( tmp ) ;    .get ( tmp ) ;    .get ( tmp ) ;    .get ( tmp ) ;    .get ( tmp ) ;    .get ( tmp ) ;    .get ( tmp ) ;    .get ( tmp ) ;    .get ( tmp ) ;    .get ( tmp ) ;    .get ( tmp ) ;    .get ( tmp ) ;    .get ( tmp ) ;    .get ( tmp ) ;    .get ( tmp ) ;    .get ( tmp ) ;    .get ( tmp ) ;    .get ( tmp ) ;    .get ( tmp ) ;    .get ( tmp ) ;    .get ( tmp ) ;    .get ( tmp ) ;    .get ( tmp ) ;    .get ( tmp ) ;    .get ( tmp ) ;    .get ( tmp ) ;    .get ( tmp ) ;    .get ( tmp ) ;    .get ( tmp ) ;    .get ( tmp ) ;    .get ( tmp ) ;    .get ( tmp ) ;    .get ( tmp ) ;    .get ( tmp ) ;    .get ( tmp ) ;    .get ( tmp ) ;    .get ( tmp ) ;    .get ( tmp ) ;    .get ( tmp ) ;    .get ( tmp ) ;    .get ( tmp ) ;    .get ( tmp ) ;    .get ( tmp ) ;    .get ( tmp ) ;    .get ( tmp ) ;    .

# END OF TRANSLATION



   
    // 10 ) ; }
    // 10 ) ; }
    // 10 ) ; }
    // 10 ) ; }
    // 10 ) ; }
    // 10 ) ; }
    // 1 ) ; }
    // 1 ) ; }
    // 1 ) ; }
    // 1 ) ; }
    // 1 ) ; }
    // 1 ) ; }
    // 1 ) ; } ; }
    // 1 ) ; } ; }
    // 1 ) ; } ; }
    // 1 ) ; } ; } ; }
    // 1 ) ; } ; } ; } ; }
    // 1 ) ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ;

# END OF TRANSLATION




   
   
    int i = 0 ;
    }
    int i = 0 ;
    }
    int i = 0 ;
    }
    int i = 0 ;
    }
    int i = 0 ;
    }
    int i = 0 ;
    }
    int i = 0 ;
    }
    int i = 0 ;
    }
    int i = 0 ;
    int i = 0 ;
    }
    int i = 0 ;    }
    int i = 0 ;    }
    int i = 0 ;    }
    int i = 0 ;    }
    int i = 0 ;    int i = 0 ;    int i = 0 ;    int i = 0 ;    }
    int i = 0 ;    int i = 0 ;    int i = 0 ;    int i = 0 ;    }
    int i = 0 ;    int i = 0 ;    int i = 0 ;    int i = 0 ;    int i = 0 ;    int i = 0 ;    int i = 0 ;    int i = 0 ;    int i = 0 ;    int i = 0 ;    int i = 0 ;    int i = 0 ;    int i = 0 ;    int i = 0 ;    int i = 0 ;    int i = 0 ;    int i = 0 ;    int i = 0 ;    int i = 0 ;    int i = 0 ;    int i = 0 ;    int i = 0 ;    int i = 0 ;    int i = 0 ;    int i = 0 ;    int i = 0 ;    int i = 0 ;    int i = 0 ;    int i = 0 ;    int i = 0 ;    int i = 0 ;    int i = 0 ;    int i = 0 ;    int i = 0 ;    int i = 0 ;    int i = 0 ;    int i = 0 ;    int i = 0 ;    int i = 0 ;    int i = 0 ;    int i = 0 ;    int i = 0 ;    int i = 0 ;    int i = 0 ;    int i = 0 ;    int i = 0 ;    int i = 0 ;    int i = 0 ;    int i = 0 ;    int i = 0 ;    int i = 0 ;    int i = 0 ;    int i = 0 ;    int i = 0 ;    int i = 0 ;    int i = 0 ;    int i = 0 ;    int i = 0 ;    int i = 0 ;    int i = 0 ;    int i = 0 ;    int i = 0 ;    int i = 0 ;    int i = 0 ;    int i = 0 ;    int i = 0 ;    int i = 0 ;    int i = 0 ;    int i = 0 ;    int i = 0 ;    int i = 0 ;    int i = 0 ;    int i = 0 ;    int i = 0 ;    int i = 0 ;    int i = 0 ;    int i = 0 ;    int i = 0 ;    int i = 0 ;    int i = 0 ;    int i = 0 ;    int i = 0 ;    int i = 0 ;    int i = 0 ;    int i = 0 ;    int i = 0 ;    int i = 0 ;    int i = 0 ;    int i = 0 ;    int i = 0 ;   

# END OF TRANSLATION


   
   
    Integer > ( x , 1 ) ; }
    }
   
    Integer > ( x , 1 ) ; }
    Integer > ( x , 1 ) ; }
    }
    Integer > ( x , 1 ) ; }
    }
    }
    }
    }
    }
    }
    }
    }
    }
    }
    }
    }
    }
    }
    }
    }
    }
    }
    }
    }
    }
    }
    }
    }
    }
    }
    }
    }
    }
    }
    }
    }
    }    }    }
    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }

# END OF TRANSLATION





 




    . charAt ( right ) ; } else {
    . charAt ( right ) ; } else {
    . charAt ( right ) ; } else {
    . charAt ( right ) ; } else {
    . charAt ( right ) ; } ; } else {
    . charAt ( right ) ; } ; } else {
    . charAt ( right ) ; } ; } else {
    . charAt ( right ) ; } else {
    . charAt ( right ) ; } else {
    . charAt ( right ) ; } else {
    . charAt ( right ) ; } else {
    . charAt ( right ) ; } else {
    . charAt ( right ) ; } else {
    . charAt ( right ) ; } else {
    . charAt ( right ) ; } else {
    . charAt ( right ) ; } else {
    . charAt ( right ) ; } else {
    . charAt ( right ) ; } else {
    . charAt ( right ) ; } else {
    . charAt ( right ) ; } else {
    . charAt ( right ) ; } else {
    . charAt ( right ) ; } else {
    . charAt ( right ) ; } else {
    . charAt ( right ) ; } else {
    . charAt ( right ) ; } else {
    . charAt ( right ) ; } else {
    . charAt ( right ) ; } else {
    . charAt ( right ) ; } else {
    . charAt ( right ) ; } else {
    . charAt ( right ) ; } else {
    . char ( right ) ; } else {
    . charAt ( right ) ; } else {
    . charAt ( right ) ; } else {
    . charAt ( right ) ; } else {
    . charAt ( right ) ; } else {
    . charAt ( right ) ; } else {
    . char ( right ) ; } else {
    . charAt ( right ) ; } else {
    . char ( right ) ; } else {
    . charAt ( right ) ; } else {
    . charAt ( right ) ; } else {
    . charAt ( right ) ; } else {
    . charAt ( right ) ; } else {
    . charAt ( right ) ; } else {
    . charAt ( right ) ; } else {
    . char ( right ) ; } else {
    . char ( right ) ; } else {
    . char ( right ) ; } else {
    . char (

# END OF TRANSLATION




 

    int j = ( int ) ; }
    int j = ( int ) ; }
    int i = ( int ) ; }
    int j = ( int ) ; }
    int j = ( int ) ; }
    int j = ( int ) ; }
    int i = ( int ) ; }
    int j = ( int ) ; }
    int j = ( int ) ; }
    int j = ( int ) ; }
    int j = ( int ) ; }
    int j = ( int ) ; }
    int j = ( int ) ; }
    int j = ( int ) ; }
    int j = ( int ) ; }
    int j = ( int ) ; }
    int j = ( int ) ; }    int j = ( int ) ; }    int j = ( int ) ; }    int j = ( int ) ; }    int j = ( int ) ; }    int j = ( int ) ; }    int j = ( int ) ; }    int j = ( int ) ; }    int j = ( int ) ; }    int j = ( int ) ; }    int j = ( int ) ; }    int j = int ( int ) ; }    int j = int ( int ) ; }    int j = int ( int ) ; }    int j = int ( int ) ; }    int j = int ( int ) ; }    int j = int ( int ) ; }    int j = int ( int ) ; }    int j = int ( int ) ; }    int j = int ( int ) ; }    int j = int ( int ) ; }    int j = int ( int ) ; }    int j = int ( int ) ; }    int j = int ( int ) ; }    int j = int ( int ) ; }    int j = int ( int ) ; }    int j = int ( int ) ; }    int j = int ( int ) ; }    int j = int ( int ) ; }    int j = int ( int ) ; }    int j = int ( int ) ; }    int j = int ( int ) ; }    int j = int ( int ) ; }    int j = int ( int ) ; }    int j = int ( int ) ; }    int j = int ( int ) ; }    int j = int ( int ) ; }    int j = int ( int ) ; }    int j = int ( int ) ; }    int j = int ( int ) ; }    int j = int ( int ) ; }    int j = int ( int ) ; }    int j = int ( int ) ; }    int j = int ( int ) ; }    int j = int ( int ) ; }    int j = int ( int ) ; }    int j = int ( int ) ; }    int j = int ( int ) ; }    int j = int ( int ) ; }    int j = int ( int ) ; }    int j = int ( int ) ; }    int j = int ( int ) ; }    int j = int ( int ) ; }    int j = int ( int ) ; }    int j = int ( int ) ; }    int j = int ( int ) ; }    int j = int ( int ) ; }    int j = int ( int ) ; }    int j = int ( int ) ; }    int j = int ( int ) ; }    int j = int ( int ) ; }    int j = int ( int ) ; }    int j = int ( int ) ; }    int j = int ( int ) ; }    int j = int ( int ) ; }    int j = int ( int ) ;

# END OF TRANSLATION




   

    // 

    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 


# END OF TRANSLATION




   
    {
    // 0 ) ; }
    // 0 ) ; }
    // 0 ) ; }
    // 0 ) ; }
    // 0 ) ; }
    // 0 ) ; }
    // 0 ; }
    // 0 ) ; }
    // 0 ; }
    // 0 ; 
    // 0 ; 
    // 0 ) ; }
    // 0 ;  }
    // 0 ; 
    // 0 ; 
    // 0 ;  }
    // 0 ; 
    // 0 ;  // 0 ;  }
    // 0 ;  // 0 ;  // 0 ;  // 0 ;  // 0 ;  // 0 ;  // 0 ;  // 0 ;  // 0 ;  // 0 ;  // 0 ;  // 0 ;  // 0 ;  // 0 ;  // 0 ;  // 0 ;  // 0 ;  // 0 ;  // 0 ;  // 0 ;  // 0 ;  // 0 ;  // 0 ;  // 0 ;  // 0 ;  // 0 ;  // 0 ;  // 0 ;  // 0 ;  // 0 ;  // 0 ;  // 0 ;  // 0 ;  // 0 ;  // 0 ;  // 0 ;  // 0 ;  // 0 ;  // 0 ;  // 0 ;  // 0 ;  // 0 ;  // 0 ;  // 0 ;  // 0 ;  // 0 ;  // 0 ;  // 0 ;  // 0 ;  // 0 ;  // 0 ;  // 0 ;  // 0 ;  // 0 ;  // 0 ;  // 0 ;  // 0 ;  // 0 ;  // 0 ;  // 0 ;  // 0 ;  // 0 ;  // 0 ;  // 0 ;  // 0 ;  // 0 ;  // 0 ;  // 0 ;  // 0 ;  // 0 ;  // 0 ;  // 0 ;  // 0 ;  // 0 ;  // 0 ;  // 0 ;  // 0 ;  // 0 ;  // 0 ;  // 0 ;  // 0 ;  // 0 ;  // 0 ;  // 0 ;  // 0 ;  // 0 ;  // 0 ;  // 0 ;  // 0 ;  // 0 ;  // 0 ;  // 0 ;  // 0 ;  // 0 ;  // 0 ;  // 0 ;  // 0 ;  // 0 ;  // 0 ;  // 0 ;  // 0 ;  // 0 ;  // 0 ;  // 0 ;  // 0 ;  // 0 ;  // 0 ;  // 0 ;  // 0 ;  // 0 ;  // 0 ;  // 0 ;  // 0 ;  // 0 ;  // 0 ;  // 0 ;  // 0 ;  // 0 ;

# END OF TRANSLATION




 


 
 
 
 
 10 ) ; } ; }

 
 
 
 10 ; } ; } ; }
 
 
 
 10 ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ;

# END OF TRANSLATION





   
    int i = 0 ; }
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 


# END OF TRANSLATION





    // 10 ; }

    // 10 ; }
    // 10 ; }
    // 10 ; }
    // 10 ; }
    // 1 ; }
    // 1 ; }
    // 1 ; }
    // 1 ; }
    // 1 ; }
    // 1 ; }
    // 1 ; }
    // 1 ; }
    // 1 ; }
    // 1 ; 
    // 2 ; }
    // 2 ; }
    // 2 ; }
    // 1 ; }
    // 1 ; }
    // 1 ; }
    // 2 ; }    // 1 ;  // 2 ; }    // 2 ; }    // 1 ;  // 2 ; }    // 1 ;  // 2 ; }    // 1 ;  // 2 ; }    // 1 ;  // 2 ; }    // 1 ;  // 2 ;  // 2 ;  // 1 ;  // 2 ;  // 2 ;  // 1 ;  // 2 ;  // 1 ;  // 2 ;  // 2 ;  // 1 ;  // 2 ;  // 1 ;  // 2 ;  // 1 ;  // 2 ;  // 2 ;  // 1 ;  // 2 ;  // 2 ;  // 1 ;  // 2 ;  // 2 ;  // 1 ;  // 2 ;  // 1 ;  // 2 ;  // 2 ;  // 1 ;  // 2 ;  // 2 ;  // 1 ;  // 2 ;  // 2 ;  // 1 ;  // 2 ;  // 2 ;  // 1 ;  // 2 ;  // 2 ;  // 2 ;  // 1 ;  // 2 ;  // 2 ;  // 1 ;  // 2 ;  // 2 ;  // 2 ;  // 1 ;  // 2 ;  // 2 ;  // 2 ;  // 1 ;  // 2 ;  // 2 ;  // 2 ;  // 1 ;  // 2 ;  // 2 ;  // 2 ;  // 1 ;  // 2 ;  // 2 ;  // 2 ;  // 1 ;  // 2 ;  // 2 ;  // 2 ;  // 2 ;  // 1 ;  // 2 ;  // 2 ;  // 2 ;  // 2 ;  // 2 ;  // 1 ;  // 2 ;  // 2 ;  // 2 ;  // 2 ;  // 2 ;  // 1 ;  // 2 ;  // 2 ;  // 2 ;  // 2 ;  // 2 ;  // 2 ;  // 2 ;  // 2 ;  // 1 ;  // 2 ;  // 2 ;  // 2 ;  // 2 ;  // 2 ;  // 2 ;  // 2 ;  // 2 ;  // 2 ;  // 2 ;  // 2 ;  // 2 ;  // 2 ;  // 2 ;  // 2 ;  // 2 ;  // 2 ;  // 2 ;  // 2 ;  // 2 ;  // 2 ;  // 2 ;  // 2 ;  // 2

# END OF TRANSLATION



   
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    //  // 


# END OF TRANSLATION


   
   
    int i = 0 ;
    }
    int getValue ( ) {
    int j = newValue ( ) ; }
    }
    int getValue ( ) ; }
    int getValue ( ) ; }
    int getValue ( ) ; }
    int getValue ( ) ; }
    int getValue ( ) ; }
    int getValue ( ) {
    int getValue ( ) ; }
    int getValue ( ) ; }
    int getValue ( ) ; }
    int getValue ( ) ; }    int getValue ( ) ; }    int getValue ( ) ; }    int getValue ( ) ;    }    int getValue ( ) {
    int getValue ( ) ; }    int getValue ( ) ;    }    int getValue ( ) ;    }    int getValue ( ) ;    }    int getValue ( ) {
    int getValue ( ) ;    }    int getValue ( ) ;    }    int getValue ( ) ;    }    int getValue ( ) ;    }    int getValue ( ) ;    }    int getValue ( ) ;    }    int getValue ( ) ;    }    int getValue ( ) ;    }    int getValue ( ) ;    }    int getValue ( ) ;    }    int getValue ( ) ;    }    int getValue ( ) ;    }    int getValue ( ) ;    }    int getValue ( ) ;    }    int getValue ( ) ;    }    int getValue ( ) ;    }    int getValue ( ) ;    }    int getValue ( ) ;    }    int getValue ( ) ;    }    int getValue ( ) ;    }    int getValue ( ) ;    }    int getValue ( ) ;    }    int getValue ( ) ;    }    int getValue ( ) ;    }    int getValue ( ) ;    }    int getValue ( ) ;    }    int getValue ( ) ;    }    int getValue ( ) ;    }    int getValue ( ) ;    }    int getValue ( ) ;    }    int getValue ( ) ;    }    int getValue ( ) ;    }    int getValue ( ) ;    }    int getValue ( ) ;    }    int getValue ( ) ;    }    int getValue ( ) ;    int getValue ( ) ;    }    int getValue ( ) ;    }    int getValue ( ) ;    }    int getValue ( ) ;    }    int getValue ( ) ;    }    int getValue ( ) ;    }    int getValue ( ) ;    int getValue ( ) ;    }    int getValue ( ) ;    }    int getValue ( ) ;    }    int getValue ( ) ;    }    int getValue ( ) ;    }    int getValue ( ) ;    }    int getValue ( ) ;    int getValue ( ) ;    }    int getValue ( ) ;    }    int getValue ( ) ;    }    int getValue ( ) ;    int getValue ( ) ;    }    int getValue ( ) ;    }    int getValue ( ) ;    }    int getValue ( )

# END OF TRANSLATION




   
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    //  // 


# END OF TRANSLATION




   
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 


# END OF TRANSLATION





 






 

    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    //  // 


# END OF TRANSLATION






    // 


    // 

    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    //  // 


# END OF TRANSLATION



   
    int max ( int ) ; int i ) ; }
    int ( i ) ; }
    int ( i ) ; }
    int ( i ) ; }
    int ( i ) ; }
    int ( i ) ; }
    int ( i ) ; }
    int ( i ) ; }
    int ( i ) ; }
    int ( i ) ; }
    int ( i ) ; }
    int ( i ) ; }
    int ( i ) ; }
    int ( i ) ; }
    int ( i ) ; }
    int ( i ) ; }
    int ( i ) ; }
    int ( i ) ; }    int ( i ) ; }    int ( i ) ; }    int ( i ) ; }    int ( i ) ; }    int ( i ) ; }    int ( i ) ; }    int ( i ) ; }    int ( i ) ; }    int ( i ) ; }    int ( i ) ; }    int ( i ) ; }    int ( i ) ; }    int ( i ) ; }    int ( i ) ; }    int ( i ) ; }    int ( i ) ; }    int ( i ) ; }    int ( i ) ; }    int ( i ) ; }    int ( i ) ; }    int ( i ) ; }    int ( i ) ; }    int ( i ) ; }    int ( i ) ; }    int ( i ) ; }    int ( i ) ; }    int ( i ) ; }    int ( i ) ; }    int ( i ) ; }    int ( i ) ; }    int ( i ) ; }    int ( i ) ; }    int ( i ) ; }    int ( i ) ; }    int ( i ) ; }    int ( i ) ; }    int ( i ) ; }    int ( i ) ; }    int ( i ) ; }    int ( i ) ; }    int ( i ) ; }    int ( i ) ; }    int ( i ) ;    int ( i ) ; }    int ( i ) ;    int ( i ) ; }    int ( i ) ;    int ( i ) ; }    int ( i ) ;    int ( i ) ; }    int ( i ) ;    int ( i ) ; }    int ( i ) ;    int ( i ) ; }    int ( i ) ;    int ( i ) ; }    int ( i ) ;    int ( i ) ; }    int ( i ) ;    int ( i ) ; }    int ( i ) ;    int ( i ) ; }    int ( i ) ;    int ( i ) ;    int ( i ) ; }    int ( i ) ;    int ( i ) ;    int ( i ) ;    int ( i ) ;    int ( i ) ; }    int ( i ) ;    int ( i ) ;    int ( i ) ;    int ( i ) ;    int ( i ) ;    int ( i ) ;    int ( i ) ;    int ( i ) ;    int ( i ) ;    int ( i ) ;    int ( i ) ;    int ( i ) ;    int ( i ) ;    int ( i ) ;    int ( i ) ;    int ( i ) ;    int ( i ) ;    int ( i ) ;    int ( i ) ;    int ( i ) ;    int ( i ) ;    int ( i ) ;    int (

# END OF TRANSLATION




 


 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
  
 
 
  
 
 
 
 
 
   
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 

# END OF TRANSLATION





    // 

    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    //  // 


# END OF TRANSLATION


   
    int total += x ; }
    // 10 ; }
    // 10 ; }
    // 10 ; }
    // 10 ; }
    // 1 += total += x ; }
    // 1 += total += x ; }
    // 1 += x ; }
    // 1 += total += x ; }
    // 1 += x ; }
    // 1 += total += x ; }
    // 1 += x ; }
    // 1 += x ; }
    // 1 += x ; }    // 1 += x ; }    // 1 += x ; }    // 1 += x ; }    // 1 += x ; }    // 1 += x ; }    // 1 += x ; }    // 1 += x ; }    // 1 += x ; }    // 1 += x ; }    // 1 += x ; }    // 1 += x ; }    // 1 += x ; }    // 1 += x ; }    // 1 += x ; }    // 1 += x ; }    // 1 += x ; }    // 1 += x ; }    // 1 += x ; }    // 1 += x ; }    // 1 += x ; }    // 1 += x ; }    // 1 += x ; }    // 1 += x ; }    // 1 += x ; }    // 1 += x ; }    // 1 += x ; }    // 1 += x ; }    // 1 += x ; }    // 1 += x ; }    // 1 += x ; }    // 1 += x ; }    // 1 += x ;    // 1 += x ; }    // 1 += x ; }    // 1 += x ;    // 1 += x ; }    // 1 += x ;    // 1 += x ; }    // 1 += x ;    // 1 += x ; }    // 1 += x ;    // 1 += x ; }    // 1 += x ;    // 1 += x ;    // 1 += x ; }    // 1 += x ;    // 1 += x ;    // 1 += x ;    // 1 += x ; }    // 1 += x ;    // 1 += x ;    // 1 += x ;    // 1 += x ;    // 1 += x ;    // 1 += x ;    // 1 += x ;    // 1 += x ;    // 1 += x ;    // 1 += x ;    // 1 += x ;    // 1 += x ;    // 1 += x ;    // 1 += x ;    // 1 += x ;    // 1 += x ;    // 1 += x ;    // 1 += x ;    // 1 += x ;    // 1 += x ;    // 1 += x ;    // 1 += x ;    // 1 += x ;    // 1 += x ;    // 1 += x ;    // 1 += x ;    // 1 += x ;    //

# END OF TRANSLATION


   
    }
    }
    }
    }
    }
    }
    }
    }
    }
    }
    }
    }
    }
    }
    }
    }
    }
    }
    }
    }
    }
    }
    }
    }
    }
    }
    }    }
    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }

# END OF TRANSLATION




 



 


 


    int i = 0 ; }
 

    int i = 0 ; }
 
    int i = 0 ; }
    int i = 0 ;
 
    int i = 0 ; }
    int i = 0 ; }
    int i = 0 ;
    int i = 0 ;
    int i = 0 ;
    int i = 0 ;
    int i = 0 ;
    int i = 0 ;
    int i = 0 ;
    int i = 0 ;
    int j = 0 ;
    int i = 0 ;
    int i = 0 ;
    int i = 0 ;
    int j = 0 ;
    int i = 0 ;
    int i = 0 ;
    int i = 0 ;
    int j = 0 ;
    int i = 0 ;
    int i = 0 ;
    int j = 0 ;
    int i = 0 ;
    int i = 0 ;
    int j = 0 ;
    int i = 0 ;
    int i = 0 ;
    int i = 0 ; }
    int i = 0 ;    int j = 0 ;    int i = 0 ;    int i = 0 ;    int j = 0 ;    int i = 0 ;    int i = 0 ;    int j = 0 ;    int i = 0 ;    int j = 0 ;    int i = 0 ;    int i = 0 ;    int j = 0 ;    int i = 0 ;    int j = 0 ;    int i = 0 ;    int j = 0 ;    int i = 0 ;    int i = 0 ;    int j = 0 ;    int i = 0 ;    int j = 0 ;    int i = 0 ;    int j = 0 ;    int i = 0 ;    int j = 0 ;    int i = 0 ;    int j = 0 ;    int j = 0 ;    int i = 0 ;    int j = 0 ;    int i = 0 ;    int j = 0 ;    int j = 0 ;    int i = 0 ;    int j = 0 ;    int j = 0 ;    int i = 0 ;    int j = 0 ;    int j = 0 ;    int i = 0 ;    int j = 0 ;    int j = 0 ;    int j = 0 ;    int i = 0 ;    int j = 0 ;    int j = 0 ;    int j = 0 ;    int j = 0 ;    int i = 0 ;    int j = 0 ;    int j = 0 ;    int j = 0 ;    int j = 0 ;    int j = 0 ;    int i = 0 ;    int j = 0 ;    int j = 0 ;    int j = 0 ;    int j = 0 ;    int j

# END OF TRANSLATION






    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    //  // 


# END OF TRANSLATION


   
    {
    String .equals ( temp , 0 ) ; }
    }
    {
    String .equals ( temp , 0 ) ; }
    {
    String .equals ( temp , 0 ) ; }
    {
    String .equals ( temp , 0 ) ; }
    {
    String .equals ( temp , 0 ) ; }
    {
    String .equals ( temp , 0 ) ; }    {
    String .equals ( temp , 0 ) ; }    {
    String .equals ( temp , 0 ) ; }    {
    String .equals ( temp , 0 ) ; }    {
    String .equals ( temp , 0 ) ; }    {
    String .equals ( temp , 0 ) ; }    {
    String .equals ( temp , 0 ) ; }    {
    String .equals ( temp , 0 ) ; }    {
    String .equals ( temp , 0 ) ; }    {
    String .equals ( temp , 0 ) ; }    {
    String .equals ( temp , 0 ) ; }    {
    String .equals ( temp , 0 ) ; }    {
    String .equals ( temp , 0 ) ; }    {
    String .equals ( temp , 0 ) ; }    {
    String .equals ( temp , 0 ) ; }    {
    String .equals ( temp , 0 ) ; }    {
    String .equals ( temp , 0 ) ; }    {
    String .equals ( temp , 0 ) ; }    {
    String .equals ( temp , 0 ) ; }    {
    String .equals ( temp , 0 ) ; }    {
    String .equals ( temp , 0 ) ; }    {
    String .equals ( temp , 0 ) ; }    {
    String .equals ( temp , 0 ) ; }    {
    String .equals ( temp , 0 ) ; }    {
    String .equals ( temp , 0 ) ; }    {
    String .equals ( temp , 0 ) ; }    {
    String .equals ( temp , 0 ) ; }    {
    String .equals ( temp , 0 ) ; }    {
    String .equals ( temp , 0 ) ; }    {
    String .equals ( temp , 0 ) ; }    {
    String .equals ( temp , 0 ) ; }    {
    String .equals ( temp , 0 ) ; }    {
    String .equals ( temp , 0 ) ; }    {
    String .equals ( temp , 0 ) ; }    {
    String .equals ( temp , 0 ) ; }    {
    String .equals ( temp , 0 ) ; }    {
    String .equals ( temp , 0 ) ; }    {
    String .equals ( temp , 0 ) ; }    {
    String .equals ( temp , 0 ) ; }    {
    String .equals ( temp , 0 ) ; }    {
    String .equals ( temp , 0 ) ; }

# END OF TRANSLATION







   
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 


# END OF TRANSLATION
















    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    //  // 


# END OF TRANSLATION

```


# END OF TRANSLATION




 


    . charAt ( i ) ; } else {
    . charAt ( i ) ; } ; } ; } else {
    . charAt ( i ) ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; } ; }

# END OF TRANSLATION






   
    }
   
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    //  // 


# END OF TRANSLATION







 

    str2 = str2 .equals ( str1 ) ;
 
    str2 = str2 ) ;
    str2 = str2 .equals ( str2 ) ;
    str2 = str2 ) ;
    str2 = str2 ) ;
    str2 = str2 .equals ( str2 ) ;
    str2 = str2 ) ;
    str2 = str2 ) ;    str2 = str2 ;    str2 = str2 ;    str2 = str2 ;    str2 = str2 ;    str2 = str2 ;    str2 = str2 ;    str2 = str2 ;    str2 = str2 ;    str2 = str2 ;    str2 = str2 ;    str2 = str2 ;    str2 = str2 ;    str2 = str2 ;    str2 = str2 ;    str2 = str2 ;    str2 = str2 ;    str2 = str2 ;    str2 = str2 ;    str2 = str2 ;    str2 = str2 ;    str2 = str2 ;    str2 = str2 ;    str2 = str2 ;    str2 = str2 ;    str2 = str2 ;    str2 = str2 ;    str2 = str2 ;    str2 = str2 ;    str2 = str2 ;    str2 = str2 ;    str2 = str2 ;    str2 = str2 ;    str2 = str2 ;    str2 = str2 ;    str2 = str2 ;    str2 = str2 ;    str2 = str2 ;    str2 = str2 ;    str2 = str2 ;    str2 = str2 ;    str2 = str2 ;    str2 = str2 ;    str2 = str2 ;    str2 = str2 ;    str2 = str2 ;    str2 = str2 ;    str2 = str2 ;    str2 = str2 ;    str2 = str2 ;    str2 = str2 ;    str2 = str2 ;    str2 = str2 ;    str2 = str2 ;    str2 = str2 ;    str2 = str2 ;    str2 = str2 ;    str2 = str2 ;    str2 = str2 ;    str2 = str2 ;    str2 = str2 ;    str2 = str2 ;    str2 = str2 ;    str2 = str2 ;    str2 = str2 ;    str2 = str2 ;    str2 = str2 ;    str2 = str2 ;    str2 = str2 ;    str2 = str2 ;    str2 = str2 ;    str2 = str2 ;    str2 = str2 ;    str2 = str2 ;    str2 = str2 ;    str2 = str2 ;    str2 = str2 ;    str2 = str2 ;    str2 = str2 ;    str2 = str2 ;    str2 = str2 ;    str2 = str2 ;    str2 = str2 ;    str2 = str2 ;    str2 = str2 ;    str2 = str2 ;    str2 = str2 ;    str2 = str2 ;    str2 = str2 ;    str2 = str2 ;    str2 = str2 ;    str2 = str2 ;    str2 = str2 ;    str2 = str2 ;    str2 = str2 ;    str2 = str2 ;    str2 = str2 ;    str2 = str2 ;    str2 = str2 ;    str2 = str2 ;    str2 = str2 ;    str2 = str2 ;    str2 = str2 ;    str2 = str2 ;    str2 = str2 ;    str2 = str2 ;    str2 = str2 ;    str2 = str2 ;    str2 = str2 ;    str2 = str2 ;    str2 = str2 ;   

# END OF TRANSLATION



   
    if ( sum .containsKey ( sum .containsKey ( sum .containsKey ( sum .containsKey ) {
    if ( sum .containsKey ( sum .containsKey ) {
    if ( sum .containsKey ( sum .containsKey ) {
    if ( sum .containsKey ) {
    if ( sum .containsKey ) {
    if ( sum .containsKey ) {
    if ( sum .containsKey ) {
    if ( sum .containsKey ) {
    if ( sum .containsKey ) {
    if ( sum .containsKey ) {
    if ( sum .containsKey ) {
    if ( sum .containsKey ) {
    if ( sum .containsKey ) {
    if ( sum .containsKey ) {
    if ( sum .containsKey ) {    if ( sum .containsKey ) {    if ( sum .containsKey ) {    if ( sum .containsKey ) {    if ( sum .containsKey ) {    if ( sum .containsKey ) {    if ( sum .containsKey ) {    if ( sum .containsKey ) {    if ( sum .containsKey ) {    if ( sum .containsKey ) {    if ( sum .containsKey ) {    if ( sum .containsKey ) {    if ( sum .containsKey ) {    if ( sum .containsKey ) {    if ( sum .containsKey ) {    if ( sum .containsKey ) {    if ( sum .containsKey ) {    if ( sum .containsKey ) {    if ( sum .containsKey ) {    if ( sum .containsKey ) {    if ( sum .containsKey ) {    if ( sum .containsKey ) {    if ( sum .containsKey ) {    if ( sum .containsKey ) {    if ( sum .containsKey ) {    if ( sum .containsKey ) {    if ( sum .containsKey ) {    if ( sum .containsKey ) {    if ( sum .containsKey ) {    if ( sum .containsKey ) {    if ( sum .containsKey ) {    if ( sum .containsKey ) {    if ( sum .containsKey ) {    if ( sum .containsKey ) {    if ( sum .containsKey ) {    if ( sum .containsKey ) {    if ( sum .containsKey ) {    if ( sum .containsKey ) {    if ( sum .containsKey ) {    if ( sum .containsKey ) {    if ( sum .containsKey ) {    if ( sum .containsKey ) {    if ( sum .containsKey ) {    if ( sum .containsKey ) {    if ( sum .containsKey ) {    if ( sum .containsKey ) {    if ( sum .containsKey ) {    if ( sum .containsKey ) {    if ( sum .containsKey ) {    if ( sum .containsKey ) {    if ( sum .containsKey ) {    if ( sum .containsKey ) {    if ( sum .containsKey ) {    if ( sum .containsKey ) {    if ( sum .containsKey ) {    if ( sum .containsKey ) {    if ( sum .containsKey ) {    if ( sum .containsKey ) {    if ( sum .containsKey ) {    if ( sum .containsKey ) {    if ( sum .containsKey ) {    if ( sum .containsKey ) {

# END OF TRANSLATION




 


    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    //  // 


# END OF TRANSLATION




 

    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 


# END OF TRANSLATION





    // 

    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    //  // 
    //  // 


# END OF TRANSLATION









   
    // 2 .get ( i ) ;
    // 2 .get ( i ) ;
    // 2 .get ( i ) ; }
    // 2 .get ( i ) ; }
    // 2 .get ( i ) ; }
    // 2 .get ( i ) ; }
    // 2 .get ( i ) ; }
    // 2 .get ( i ) ; }
    // 2 .get ( i ) ; }
    // 2 .get ( i ) ; }
    // 2 .get ( i ) ; }
    // 2 .get ( i ) ; }
    // 2 .get ( i ) ; }
    // 2 .get ( i ) ; }
    // 2 ) ; }
    // 2 .get ( i ) ; }
    // 2 ) ; }
    // 2 .get ( i ) ; }
    // 2 ) ; }
    // 2 .get ( i ) ; }
    // 2 ) ; }
    // 2 ) ; }
    // 2 ) ; }
    // 2 ) ; }
    // 2 .get ( i ) ; }
    // 2 ) ; }
    // 2 ) ;    // 2 ) ; }
    // 2 ) ; }
    // 2 ) ; }
    // 2 ) ;    // 2 ) ;    // 2 ) ; }    // 2 ) ;    // 2 ) ; }
    // 2 ) ;    // 2 ) ;    // 2 ) ;    // 2 ) ; }

# END OF TRANSLATION



 
    }
    }
    }
    }
    }
    }
    }
    }
    }
    }
    }
    }
    }
    }
    }
    }
    }
    }
    }
    }
    }
    }
    }
    }
    }
    }
    }
    }
    }
    }
    }
    }
    }
    }
    }
    }
    }
    }
    }    }    }    }
    }    }    }
    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }   

# END OF TRANSLATION






    // 

    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 


# END OF TRANSLATION





 

   
    // 20 ; }
    // 2 ) ; }
    // 20 ; }
    // 2 ) ; }
    // 2 ) ; }
    // 20 ; }
    // 2 ) ; }
    // 2 ) ; }
    // 2 ) ; }
    // 2 ) ; }
    // 2 ) ; }
    // 2 ) ; }
    // 2 ) ; }
    // 2 ) ; }
    // 2 ) ; }
    // 2 ) ; }
    // 2 ) ; }
    // 2 ) ; }
    // 2 ) ; }
    // 2 ) ; }
    // 2 ) ; }
    // 2 ) ; }
    // 2 ) ; }
    // 2 ) ; }
    // 2 ) ; }
    // 2 ) ; }
    // 2 ) ; }
    // 2 ) ; }
    // 2 ) ; }
    // 2 ) ; }
    // 2 ) ; }
    // 2 ) ; }
    // 2 ) ; }
    // 2 ) ; }
    // 2 ) ; }
    // 2 ) ; }
    // 2 ) ; }
    // 2 ) ; }
    // 2 ) ; }
    // 2 ) ; }
    // 2 ) ; }
    // 2 ) ; }
    // 2 ) ; }
    // 2 ) ; }
    // 2 ) ; }
    // 2 ) ; }
    // 2 ) ; }
    // 2 ) ; }
    // 2 ) ; }
    // 2 ) ; }
    // 2 ) ; }
    // 2 ) ; }
    // 2 ) ; }
    // 2 ) ; }
    // 2 ) ; } ;    // 2 ) ; }
    // 2 ) ; }
    // 2 ) ; }
    // 2 ) ;    // 2 ) ; }
    // 2 ) ;    // 2 ) ; }
    // 2 ) ; } ;    // 2 ) ; }
    // 2 ) ;    // 2 ) ; }
    // 2 ) ;    // 2 ) ; }    // 2 ) ;    // 2 ) ; }    // 2 ) ;    // 2 ) ; }
    // 2 ) ;    // 2 ) ; }
    // 2 ) ;    // 2 ) ; }
    // 2 ) ;    // 2 ) ; }
    // 2 ) ;    // 2 ) ;    // 2 ) ; }
    // 2 ) ;    // 2 ) ;    // 2 ) ;    // 2 ) ; }
    // 2 ) ;    // 2 ) ;    // 2 ) ;    // 2 ) ;    // 2 ) ;    // 2 ) ;    // 2 ) ;    // 2 ) ;    // 2 ) ;    // 2 ) ;    // 2 ) ;    // 2 ) ;    // 2 ) ;    // 2 ) ;    // 2 ) ;    // 

# END OF TRANSLATION


   
   
   
    Integer .parseInto ( 3 , 1 , 3 , 0 , 4 ) ;
    }
    }
    }
    }
    }
    }
    }
    }
    }
    }
    }
    }
    }
    }
    }
    }
    }
    }
    }
    }
    }
    }
    }
    }
    }
    }
    }
    }
    }
    }
    }
    }
    }
    }
    }
    }
    }
    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }   

# END OF TRANSLATION






    // 

    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    //  // 


# END OF TRANSLATION





 



 


 

 


 

 


 10 ; } ; }


 




 

 
 
 10 ; } ; } ; }



 



 
    int length = t = t ;
 
 
    int length = t ;
 
    int length = t ;
    int length = t ;
 
    int length = t ;
    int length ;
    int length = t ;
    int length ; }
    int length = t ; } ; }
    int length = t ;
    int length ;
    int length = t ; }
    int length ;
    int length = t ; }
    int length = t ;
    int length ; }
    int length = t ;
    int length ;
    int length = length ; }
    int length ; }
    int length = length ; }
    int length ; }
    int length = length ; }
    int length ;
    int length ; }
    int length = length ; }
    int length ; }
    int length ;
    int length ; }
    int length ; }
    int length = length ; }
    int length ;
    int length ; }
    int length ; }
    int length ;    int length ; }
    int length ;    int length ; }
    int length ;    int length ;    int length ;    int length ;    int length ;    int length ;    int length ;    int length ;    int length ;    int length ;    int length ;    int length ;    int length ;    int length ;    int length ;    int length ;    int length ;    int length ;    int length ;    int length ;    int length ;    int length ;    int length ;    int length ;    int length ;    int length ;    int length ;    int length ;    int length ;    int length ;    int length ;    int length ;    int length ;    int length ;    int length ;    int length ;    int length ;    int length ;    int length ;    int length ;    int length ;    int length ;    int length ;    int length ;    int length ;    int length ;    int length ;    int length ;    int length ;    int length ;    int length ;    int length ;    int length ;    int length ;    int length ;    int

# END OF TRANSLATION





    // 

    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 


# END OF TRANSLATION

 int i = 0 ; }
 int i = 0 ; }
 int i = 0 ; }
 int i = 0 ; }
 int i = 0 ; }
 int i = 0 ; }
 int i = 0 ; }
 int i = 0 ; i = 0 ; }
 int i = 0 ; }
 int i = 0 ; }
 int i = 0 ; }



 



 

 0 ; int i = 0 ; i = 0 ; }
 
 
 
 
 
 
 
 
 
 0 ; int i = 0 ; i = 0 ; }
 
int i = 0 ; }
 
 
 0 ; }

 
 
 0 ; int i = 0 ; i = 0 ; }
 
 0 ; }
int i = 0 ; }
 
int i = 0 ; i = 0 ; int i = 0 ; }
 
 
 0 ; }

 
 0 ; }

 
 
 0 ; int i = 0 ; i = 0 ; i = 0 ; }
 
 0 ; }
int i = 0 ; i = 0 ; int i = 0 ; i = 0 ; }
int i = 0 ; }
 
int i = 0 ; i = 0 ; int i = 0 ; i = 0 ; }
int i = 0 ; i = 0 ; }
 
int i = 0 ; i = 0 ; i = 0 ; int i = 0 ; i = 0 ; i = 0 ; }
 0 ; }
int i = 0 ; i = 0 ; i = 0 ; int i = 0 ; i = 0 ; i = 0 ; }
 0 ; i = 0 ; i = 0 ; int i = 0 ; i = 0 ; i = 0 ; i = 0 ; i = 0 ; i = 0 ; int i = 0 ; i = 0 ; i = 0 ; i = 0 ; i = 0 ; i = 0 ; i = 0 ; i = 0 ; i = 0 ; i = 0 ; i = 0 ; i = 0 ; i = 0 ; i = 0 ; i = 0 ; i = 0 ; i = 0 ; i = 0 ; i = 0 ; i = 0 ; i = 0 ; i = 0 ; i = 0 ; i = 0 ; i = 0 ; i = 0 ; i = 0 ; i = 0 ; i = 0 ; i = 0 ; i = 0 ; i = 0 ; i = 0 ; i = 0 ; i = 0 ; i = 0 ; i = 0 ; i = 0 ; i = 0 ; i = 0 ; i = 0 ; i = 0 ; i = 0 ; i = 0 ; i = 0 ; i = 0 ; i = 0 ; i = 0 ; i = 0 ; i = 0 ; i = 0 ; i = 0 ; i = 0 ; i = 0 ; i = 0 ; i = 0 ; i = 0 ; i = 0 ; i = 0 ; i = 0 ; i = 0 ; i = 0 ; i = 0 ; i = 0 ; i = 0 ; i = 0 ; i = 0 ; i = 0 ; i = 0 ; i = 0 ; i = 0 ; i = 0 ; i = 0 ; i = 0 ; i = 0 ;

# END OF TRANSLATION





    // 

    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    //  // 


# END OF TRANSLATION




 

   
   
    // 10 , ' ) ;
    // 10 , ' ) ;
    // 10 , ' ) ; 
    // 1 , '1' ) ; 
    // 1 , ' ) ; 
    // 1 , ' ) ; 
    // 2 , ' ) ; 
    // 2 , ' ) ; 


# END OF TRANSLATION






# END OF TRANSLATION




    // 10 ; }
    // 10 ; }
    // 10 ; }
    // 10 ; }
    // 1 ; 
    // 1 ; 
    // 1 ; 
    // 1 ; 
    // 2 ;  // 2 ;  // 2 ;  // 2 ;  // 2 ;  // 1 ;  // 2 ;  // 1 ;  // 2 ;  // 2 ;  // 1 ;  // 2 ;  // 1 ;  // 2 ;  // 2 ;  // 3 ;  // 1 ;  // 2 ;  // 1 ;  // 2 ;  // 2 ;  // 3 ;  // 1 ;  // 2 ;  // 2 ;  // 1 ;  // 2 ;  // 2 ;  // 1 ;  // 2 ;  // 2 ;  // 3 ;  // 1 ;  // 2 ;  // 2 ;  // 1 ;  // 2 ;  // 2 ;  // 3 ;  // 2 ;  // 1 ;  // 2 ;  // 2 ;  // 1 ;  // 2 ;  // 2 ;  // 3 ;  // 2 ;  // 1 ;  // 2 ;  // 2 ;  // 1 ;  // 2 ;  // 2 ;  // 3 ;  // 2 ;  // 2 ;  // 1 ;  // 2 ;  // 2 ;  // 1 ;  // 2 ;  // 2 ;  // 3 ;  // 2 ;  // 2 ;  // 1 ;  // 2 ;  // 2 ;  // 2 ;  // 3 ;  // 2 ;  // 1 ;  // 2 ;  // 2 ;  // 2 ;  // 2 ;  // 3 ;  // 2 ;  // 2 ;  // 1 ;  // 2 ;  // 2 ;  // 2 ;  // 2 ;  // 3 ;  // 2 ;  // 2 ;  // 2 ;  // 2 ;  // 1 ;  // 2 ;  // 2 ;  // 3 ;  // 2 ;  // 2 ;  // 2 ;  // 2 ;  // 2 ;  // 3 ;  // 2 ;  // 2 ;  // 2 ;  // 2 ;  // 2 ;  // 2 ;  // 3 ;  // 2 ;  // 2 ;  // 2 ;  // 2 ;  // 2 ;  // 2 ;  // 2 ;  // 3 ;  // 2 ;  // 2 ;  // 2 ;  // 2 ;  // 2 ;  // 2 ;  // 2 ;  // 3 ;  // 2 ;  // 2 ;  // 2 ;  // 2 ;  // 2 ;  // 2 ;  // 2 ;  // 3 ;  // 2 ;  // 2 ;  // 2 ;  // 2 ;  // 2 ;  // 2 ;  // 2 ;  // 2 ;  // 2 ;  // 2 ;  // 2 ;  // 2 ;  // 3 ;  // 2 ;  // 2 ;  // 2 ;  // 2 ;  // 2 ;  // 2 ;  // 2 ;

# END OF TRANSLATION





    .mapToInt ( String ) {
    .mapToInt ( String ) .mapToInt ( String ) .mapToInt ( String ) .mapToInt ( String ) .mapToInt ( String ) .mapToInt ( String ) .mapToInt ( String ) .mapToInt ( String ) .mapToInt ( String ) .mapToInt ( String ) .mapToInt ( String ) .mapToInt ( String ) .mapToInt ( String ) .mapToInt ( String ) .mapToInt ( String ) .mapToInt ( String ) .mapToInt ( String ) .mapToInt ( String ) .mapToInt ( String ) .mapToInt ( String ) .mapToInt ( String ) .mapToInt ( String ) .mapToInt ( String ) .mapToInt ( String ) .mapToInt ( String ) .mapToInt ( String ) .mapToInt ( String ) .mapToInt ( String ) .mapToInt ( String ) .mapToInt ( String ) .mapToInt ( String ) .mapToInt ( String ) .mapToInt ( String ) .mapToInt ( String ) .mapToInt ( String ) .mapToInt ( String ) .mapToInt ( String ) .mapToInt ( String ) .mapToInt ( String ) .mapToInt ( String ) .mapToInt ( String ) .mapToInt ( String ) .mapToInt ( String ) .mapToInt ( String ) .mapToInt ( String ) .mapToInt ( String ) .mapToInt ( String ) .mapToInt ( String ) .mapToInt ( String ) .mapToInt ( String ) .mapToInt ( String ) .mapToInt ( String ) .mapToInt ( String ) .mapToInt ( String ) .mapToInt ( String ) .mapToInt ( String ) .mapToInt ( String ) .mapToInt ( String ) .mapToInt ( String ) .mapToInt ( String ) .mapToInt ( String ) .mapToInt ( String ) .mapToInt ( String ) .mapToInt ( String ) .mapToInt ( String ) .mapToInt ( String ) .mapToInt ( String ) .mapToInt ( String ) .mapToInt ( String ) .mapToInt ( String ) .mapToInt ( String ) .mapToInt ( String ) .mapToInt ( String ) .mapToInt ( String ) .mapToInt ( String ) .mapToInt ( String ) .mapToInt ( String ) .mapToInt ( String ) .mapToInt ( String ) .mapToInt ( String ) .mapToInt ( String ) .mapToInt ( String ) .mapToInt ( String ) .mapToInt ( String ) .mapToInt ( String ) .mapToInt ( String ) .mapToInt ( String ) .mapToInt ( String ) .mapToInt ( String ) .mapToInt ( String ) .mapToInt ( String ) .mapToInt ( String ) .mapToInt ( String ) .mapToInt ( String ) .mapToInt ( String ) .mapToInt ( String ) .mapToInt ( String ) .mapToInt ( String ) .mapToInt ( String ) .mapToInt ( String ) .mapToInt ( String ) .mapToInt ( String ) .mapToInt ( String ) .mapToInt ( String ) .mapToInt ( String ) .mapToInt ( String ) .mapToInt ( String ) .mapToInt ( String ) .mapToInt ( String ) .mapToInt ( String ) .mapToInt ( String ) .mapToInt ( String ) .mapToInt ( String ) .mapToInt ( String ) .mapToInt ( String ) .

# END OF TRANSLATION


    .getAsInt ( n ) .mapToInt ( n ) .getAsInt ( n ) ; }
    .getAsInt ( n ) ; }
    .filter ( n ) .filter ( n ) .mapToInt ( n ) ; }
    .getAsInt ( n ) ; }
    .getAsInt ( n ) ; }
    .filter ( n ) ; }
    .filter ( n ) ; }
    .filter ( n ) ;
    .filter ( n ) ; }    .getAsInt ( n ) ; }
    .filter ( n ) ;    .filter ( n ) ;    .filter ( n ) ;    .filter ( n ) ; }    .filter ( n ) ;    .filter ( n ) ;    .filter ( n ) ;    .filter ( n ) ;    .filter ( n ) ;    .filter ( n ) ;    .filter ( n ) ;    .filter ( n ) ;    .filter ( n ) ;    .filter ( n ) ;    .filter ( n ) ;    .filter ( n ) ;    .filter ( n ) ;    .filter ( n ) ;    .filter ( n ) ;    .filter ( n ) ;    .filter ( n ) ;    .filter ( n ) ;    .filter ( n ) ;    .filter ( n ) ;    .filter ( n ) ;    .filter ( n ) ;    .filter ( n ) ;    .filter ( n ) ;    .filter ( n ) ;    .filter ( n ) ;    .filter ( n ) ;    .filter ( n ) ;    .filter ( n ) ;    .filter ( n ) ;    .filter ( n ) ;    .filter ( n ) ;    .filter ( n ) ;    .filter ( n ) ;    .filter ( n ) ;    .filter ( n ) ;    .filter ( n ) ;    .filter ( n ) ;    .filter ( n ) ;    .filter ( n ) ;    .filter ( n ) ;    .filter ( n ) ;    .filter ( n ) ;    .filter ( n ) ;    .filter ( n ) ;    .filter ( n ) ;    .filter ( n ) ;    .filter ( n ) ;    .filter ( n ) ;    .filter ( n ) ;    .filter ( n ) ;    .filter ( n ) ;    .filter ( n ) ;    .filter ( n ) ;    .filter ( n ) ;    .filter ( n ) ;    .filter ( n ) ;    .filter ( n ) ;    .filter ( n ) ;    .filter ( n ) ;    .filter ( n ) ;    .filter ( n ) ;    .filter ( n ) ;    .filter ( n ) ;    .filter ( n ) ;    .filter ( n ) ;    .filter ( n ) ;    .filter ( n ) ;    .filter ( n ) ;    .filter ( n ) ;    .filter ( n ) ;    .filter ( n ) ;    .filter ( n ) ;    .filter ( n ) ;    .filter ( n ) ;    .filter ( n ) ;    .filter ( n ) ;    .filter ( n ) ;    .filter (

# END OF TRANSLATION

```




   
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //

# END OF TRANSLATION

```




   
   
   
    int balance = 0 ;
    int balance = 0 ;
    int balance = 0 ;
    int balance = 0 ;
    int balance = 0 ;
    int balance = 0 ;
    int balance = 0 ;
    int balance = 0 ;
    int balance = 0 ;
    int balance = 0 ;
    int balance = 0 ;
    int balance = 0 ;
    int balance = 0 ;
    int balance = 0 ;
    int balance = 0 ;
    int balance = 0 ;    int balance = 0 ;    int balance = 0 ;    int balance = 0 ;    int balance = 0 ;    int balance = 0 ;    int balance = 0 ;    int balance = 0 ;    int balance = 0 ;    int balance = 0 ;    int balance = 0 ;    int balance = 0 ;    int balance = 0 ;    int balance = 0 ;    int balance = 0 ;    int balance = 0 ;    int balance = 0 ;    int balance = 0 ;    int balance = 0 ;    int balance = 0 ;    int balance = 0 ;    int balance = 0 ;    int balance = 0 ;    int balance = 0 ;    int balance = 0 ;    int balance = 0 ;    int balance = 0 ;    int balance = 0 ;    int balance = 0 ;    int balance = 0 ;    int balance = 0 ;    int balance = 0 ;    int balance = 0 ;    int balance = 0 ;    int balance = 0 ;    int balance = 0 ;    int balance = 0 ;    int balance = 0 ;    int balance = 0 ;    int balance = 0 ;    int balance = 0 ;    int balance = 0 ;    int balance = 0 ;    int balance = 0 ;    int balance = 0 ;    int balance = 0 ;    int balance = 0 ;    int balance = 0 ;    int balance = 0 ;    int balance = 0 ;    int balance = 0 ;    int balance = 0 ;    int balance = 0 ;    int balance = 0 ;    int balance = 0 ;    int balance = 0 ;    int balance = 0 ;    int balance = 0 ;    int balance = 0 ;    int balance = 0 ;    int balance = 0 ;    int balance = 0 ;    int balance = 0 ;    int balance = 0 ;    int balance = 0 ;    int balance = 0 ;    int balance = 0 ;    int balance = 0 ;    int balance = 0 ;    int balance = 0 ;    int balance = 0 ;    int balance = 0 ;    int balance = 0 ;    int balance = 0 ;    int balance = 0 ;    int balance = 0 ;    int balance = 0 ;    int balance = 0 ;    int balance = 0 ;    int balance = 0 ;    int balance = 0 ;    int balance = 0 ;    int balance = 0 ;    int balance = 0 ;    int balance = 0 ;    int balance = 0 ;    int balance = 0 ;    int balance = 0 ;    int balance = 0 ;    int balance = 0 ;    int balance = 0 ;    int balance = 0 ;    int balance = 0 ;    int balance = 0 ;    int balance = 0 ;    int balance = 0 ;    int balance = 0 ;    int balance = 0 ;    int balance = 0 ;    int balance = 0 ;    int balance = 0 ;    int balance = 0 ;    int balance = 0 ;    int balance = 0 ;    int balance = 0 ;    int balance = 0 ;    int balance = 0 ;    int balance = 0 ;    int balance = 0 ;    int balance = 0 ;    int balance = 0 ;    int balance = 0 ;    int balance = 0 ;    int balance = 0 ;    int balance = 0 ;    int balance = 0 ;    int balance = 0 ;    int balance = 0 ;    int balance = 0 ;    int balance = 0 ;    int balance = 0 ;    int balance = 0 ;    int balance = 0 ;    int

# END OF TRANSLATION




 

    .filter ( w ) .filter ( w ) .filter ( w ) ;
 
    .filter ( w ) ;
 
    .filter ( w ) ;
    .filter ( w ) ;
    .filter ( w ) ;
    .filter ( w ) ;
    .filter ( w ) ;
    .filter ( w ) ;
    .filter ( w ) ;
    .filter ( w ) ;    .filter ( w ) ;    .filter ( w ) ;    .filter ( w ) ;    .filter ( w ) ;    .filter ( w ) ;    .filter ( w ) ;    .filter ( w ) ;    .filter ( w ) ;    .filter ( w ) ;    .filter ( w ) ;    .filter ( w ) ;    .filter ( w ) ;    .filter ( w ) ;    .filter ( w ) ;    .filter ( w ) ;    .filter ( w ) ;    .filter ( w ) ;    .filter ( w ) ;    .filter ( w ) ;    .filter ( w ) ;    .filter ( w ) ;    .filter ( w ) ;    .filter ( w ) ;    .filter ( w ) ;    .filter ( w ) ;    .filter ( w ) ;    .filter ( w ) ;    .filter ( w ) ;    .filter ( w ) ;    .filter ( w ) ;    .filter ( w ) ;    .filter ( w ) ;    .filter ( w ) ;    .filter ( w ) ;    .filter ( w ) ;    .filter ( w ) ;    .filter ( w ) ;    .filter ( w ) ;    .filter ( w ) ;    .filter ( w ) ;    .filter ( w ) ;    .filter ( w ) ;    .filter ( w ) ;    .filter ( w ) ;    .filter ( w ) ;    .filter ( w ) ;    .filter ( w ) ;    .filter ( w ) ;    .filter ( w ) ;    .filter ( w ) ;    .filter ( w ) ;    .filter ( w ) ;    .filter ( w ) ;    .filter ( w ) ;    .filter ( w ) ;    .filter ( w ) ;    .filter ( w ) ;    .filter ( w ) ;    .filter ( w ) ;    .filter ( w ) ;    .filter ( w ) ;    .filter ( w ) ;    .filter ( w ) ;    .filter ( w ) ;    .filter ( w ) ;    .filter ( w ) ;    .filter ( w ) ;    .filter ( w ) ;    .filter ( w ) ;    .filter ( w ) ;    .filter ( w ) ;    .filter ( w ) ;    .filter ( w ) ;    .filter ( w ) ;    .filter ( w ) ;    .filter ( w ) ;    .filter ( w ) ;    .filter ( w ) ;    .filter ( w ) ;    .filter ( w ) ;    .filter ( w ) ;    .filter ( w ) ;    .filter ( w ) ;    .filter ( w ) ;    .filter ( w ) ;    .filter ( w ) ;    .filter ( w ) ;    .filter ( w ) ;    .filter ( w ) ;    .filter ( w ) ;    .filter ( w ) ;    .filter ( w ) ;    .filter ( w ) ;    .filter ( w ) ;    .filter ( w ) ;    .filter ( w ) ;    .filter ( w ) ;    .filter ( w ) ;    .filter ( w ) ;    .filter ( w ) ;    .filter ( w ) ;    .filter ( w ) ;    .filter ( w ) ;    .filter ( w ) ;    .filter ( w ) ;    .filter ( w ) ;    .

# END OF TRANSLATION





    .filter ( n ) {
    .filter ( n ) ;
    .filter ( n ) ;
    .filter ( n ) ;
    .filter ( n ) ;
    .filter ( n ) ;
    .filter ( n ) ;
    .filter ( n ) ;
    .filter ( n ) ;
    .filter ( n ) ;    .filter ( n ) ;    .filter ( n ) ;    .filter ( n ) ;    .filter ( n ) ;    .filter ( n ) ;    .filter ( n ) ;    .filter ( n ) ;    .filter ( n ) ;    .filter ( n ) ;    .filter ( n ) ;    .filter ( n ) ;    .filter ( n ) ;    .filter ( n ) ;    .filter ( n ) ;    .filter ( n ) ;    .filter ( n ) ;    .filter ( n ) ;    .filter ( n ) ;    .filter ( n ) ;    .filter ( n ) ;    .filter ( n ) ;    .filter ( n ) ;    .filter ( n ) ;    .filter ( n ) ;    .filter ( n ) ;    .filter ( n ) ;    .filter ( n ) ;    .filter ( n ) ;    .filter ( n ) ;    .filter ( n ) ;    .filter ( n ) ;    .filter ( n ) ;    .filter ( n ) ;    .filter ( n ) ;    .filter ( n ) ;    .filter ( n ) ;    .filter ( n ) ;    .filter ( n ) ;    .filter ( n ) ;    .filter ( n ) ;    .filter ( n ) ;    .filter ( n ) ;    .filter ( n ) ;    .filter ( n ) ;    .filter ( n ) ;    .filter ( n ) ;    .filter ( n ) ;    .filter ( n ) ;    .filter ( n ) ;    .filter ( n ) ;    .filter ( n ) ;    .filter ( n ) ;    .filter ( n ) ;    .filter ( n ) ;    .filter ( n ) ;    .filter ( n ) ;    .filter ( n ) ;    .filter ( n ) ;    .filter ( n ) ;    .filter ( n ) ;    .filter ( n ) ;    .filter ( n ) ;    .filter ( n ) ;    .filter ( n ) ;    .filter ( n ) ;    .filter ( n ) ;    .filter ( n ) ;    .filter ( n ) ;    .filter ( n ) ;    .filter ( n ) ;    .filter ( n ) ;    .filter ( n ) ;    .filter ( n ) ;    .filter ( n ) ;    .filter ( n ) ;    .filter ( n ) ;    .filter ( n ) ;    .filter ( n ) ;    .filter ( n ) ;    .filter ( n ) ;    .filter ( n ) ;    .filter ( n ) ;    .filter ( n ) ;    .filter ( n ) ;    .filter ( n ) ;    .filter ( n ) ;    .filter ( n ) ;    .filter ( n ) ;    .filter ( n ) ;    .filter ( n ) ;    .filter ( n ) ;    .filter ( n ) ;    .filter ( n ) ;    .filter ( n ) ;    .filter ( n ) ;    .filter ( n ) ;    .filter ( n ) ;    .filter ( n ) ;    .filter ( n ) ;    .filter ( n ) ;    .filter ( n ) ;    .filter ( n ) ;    .filter ( n ) ;    .filter ( n ) ;    .filter ( n ) ;    .filter ( n ) ;    .filter ( n ) ;    .filter ( n ) ;    .filter ( n ) ;    .filter ( n ) ;    .filter ( n ) ;    .filter (

# END OF TRANSLATION





 
   
   
   
   
   
    ( int ) ;
    ( int ) ;
    ( int ) ;
    ( int ) ;
    ( int ) ;
    ( int ) ;
    ( int ) ;
    ( int ) ;
    ( int ) ;
    ( int ) ;
    ( int ) ;    ( int ) ;    ( int ) ;    ( int ) ;    ( int ) ;    ( int ) ;    ( int ) ;    ( int ) ;    ( int ) ;    ( int ) ;    ( int ) ;    ( int ) ;    ( int ) ;    ( int ) ;    ( int ) ;    ( int ) ;    ( int ) ;    ( int ) ;    ( int ) ;    ( int ) ;    ( int ) ;    ( int ) ;    ( int ) ;    ( int ) ;    ( int ) ;    ( int ) ;    ( int ) ;    ( int ) ;    ( int ) ;    ( int ) ;    ( int ) ;    ( int ) ;    ( int ) ;    ( int ) ;    ( int ) ;    ( int ) ;    ( int ) ;    ( int ) ;    ( int ) ;    ( int ) ;    ( int ) ;    ( int ) ;    ( int ) ;    ( int ) ;    ( int ) ;    ( int ) ;    ( int ) ;    ( int ) ;    ( int ) ;    ( int ) ;    ( int ) ;    ( int ) ;    ( int ) ;    ( int ) ;    ( int ) ;    ( int ) ;    ( int ) ;    ( int ) ;    ( int ) ;    ( int ) ;    ( int ) ;    ( int ) ;    ( int ) ;    ( int ) ;    ( int ) ;    ( int ) ;    ( int ) ;    ( int ) ;    ( int ) ;    ( int ) ;    ( int ) ;    ( int ) ;    ( int ) ;    ( int ) ;    ( int ) ;    ( int ) ;    ( int ) ;    ( int ) ;    ( int ) ;    ( int ) ;    ( int ) ;    ( int ) ;    ( int ) ;    ( int ) ;    ( int ) ;    ( int ) ;    ( int ) ;    ( int ) ;    ( int ) ;    ( int ) ;    ( int ) ;    ( int ) ;    ( int ) ;    ( int ) ;    ( int ) ;    ( int ) ;    ( int ) ;    ( int ) ;    ( int ) ;    ( int ) ;    ( int ) ;    ( int ) ;    ( int ) ;    ( int ) ;    ( int ) ;    ( int ) ;    ( int ) ;    ( int ) ;    ( int ) ;    ( int ) ;    ( int ) ;    ( int ) ;    ( int ) ;    ( int ) ;    ( int ) ;    ( int ) ;    ( int ) ;    ( int ) ;    ( int ) ;    ( int ) ;    ( int ) ;    ( int ) ;    ( int ) ;    ( int ) ;    ( int ) ;    ( int ) ;    ( int ) ;    ( int ) ;    ( int ) ;    ( int ) ;    ( int ) ;    ( int ) ;    ( int ) ;    ( int ) ;    ( int ) ;    ( int ) ;    ( int ) ;    ( int ) ;    ( int ) ;    ( int ) ;    ( int ) ;    ( int ) ;    ( int ) ;    ( int ) ;    ( int ) ;    ( int ) ;    ( int ) ;    ( int ) ;    ( int ) ;    ( int ) ;    ( int ) ;    ( int ) ;    ( int ) ;    ( int ) ;    ( int

# END OF TRANSLATION





 

    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    //  // 


# END OF TRANSLATION




 


   
 
 
    ( ) ;
 
    ( ) ;
    ( ) ; 
    ( ) ; 
    ( ) ; 
    ( ) ;  ) ; 
    ( ) ; 
    ( ) ;  ) ; 


# END OF TRANSLATION






    ( String ) {
    .sorting ( String ) ;
    .sorting ( String ) ;
    .reverse ( String ) ;
    .reverse ( String ) ;
    .reverse ( String ) ;    .reverse ( String ) ;    .reverse ( String ) ;    .reverse ( String ) ;    .reverse ( String ) ;    .reverse ( String ) ;    .reverse ( String ) ;    .reverse ( String ) ;    .reverse ( String ) ;    .reverse ( String ) ;    .reverse ( String ) ;    .reverse ( String ) ;    .reverse ( String ) ;    .reverse ( String ) ;    .reverse ( String ) ;    .reverse ( String ) ;    .reverse ( String ) ;    .reverse ( String ) ;    .reverse ( String ) ;    .reverse ( String ) ;    .reverse ( String ) ;    .reverse ( String ) ;    .reverse ( String ) ;    .reverse ( String ) ;    .reverse ( String ) ;    .reverse ( String ) ;    .reverse ( String ) ;    .reverse ( String ) ;    .reverse ( String ) ;    .reverse ( String ) ;    .reverse ( String ) ;    .reverse ( String ) ;    .reverse ( String ) ;    .reverse ( String ) ;    .reverse ( String ) ;    .reverse ( String ) ;    .reverse ( String ) ;    .reverse ( String ) ;    .reverse ( String ) ;    .reverse ( String ) ;    .reverse ( String ) ;    .reverse ( String ) ;    .reverse ( String ) ;    .reverse ( String ) ;    .reverse ( String ) ;    .reverse ( String ) ;    .reverse ( String ) ;    .reverse ( String ) ;    .reverse ( String ) ;    .reverse ( String ) ;    .reverse ( String ) ;    .reverse ( String ) ;    .reverse ( String ) ;    .reverse ( String ) ;    .reverse ( String ) ;    .reverse ( String ) ;    .reverse ( String ) ;    .reverse ( String ) ;    .reverse ( String ) ;    .reverse ( String ) ;    .reverse ( String ) ;    .reverse ( String ) ;    .reverse ( String ) ;    .reverse ( String ) ;    .reverse ( String ) ;    .reverse ( String ) ;    .reverse ( String ) ;    .reverse ( String ) ;    .reverse ( String ) ;    .reverse ( String ) ;    .reverse ( String ) ;    .reverse ( String ) ;    .reverse ( String ) ;    .reverse ( String ) ;    .reverse ( String ) ;    .reverse ( String ) ;    .reverse ( String ) ;    .reverse ( String ) ;    .reverse ( String ) ;    .reverse ( String ) ;    .reverse ( String ) ;    .reverse ( String ) ;    .reverse ( String ) ;    .reverse ( String ) ;    .reverse ( String ) ;    .reverse ( String ) ;    .reverse ( String ) ;    .reverse ( String ) ;    .reverse ( String ) ;    .reverse ( String ) ;    .reverse ( String ) ;    .reverse ( String ) ;    .reverse ( String ) ;    .reverse ( String ) ;    .reverse ( String ) ;    .reverse ( String ) ;    .reverse ( String ) ;    .reverse ( String ) ;    .reverse ( String ) ;    .reverse (

# END OF TRANSLATION






 


    ( String ) ;
    ( String ) ;
    ( String ) ;
    ( String ) ;
    ( String ) ;
    ( String ) ;
    ( String ) ;
    ( String ) ;
    ( String ) ;    ( String ) ;    ( String ) ;    ( String ) ;    ( String ) ;    ( String ) ;    ( String ) ;    ( String ) ;    ( String ) ;    ( String ) ;    ( String ) ;    ( String ) ;    ( String ) ;    ( String ) ;    ( String ) ;    ( String ) ;    ( String ) ;    ( String ) ;    ( String ) ;    ( String ) ;    ( String ) ;    ( String ) ;    ( String ) ;    ( String ) ;    ( String ) ;    ( String ) ;    ( String ) ;    ( String ) ;    ( String ) ;    ( String ) ;    ( String ) ;    ( String ) ;    ( String ) ;    ( String ) ;    ( String ) ;    ( String ) ;    ( String ) ;    ( String ) ;    ( String ) ;    ( String ) ;    ( String ) ;    ( String ) ;    ( String ) ;    ( String ) ;    ( String ) ;    ( String ) ;    ( String ) ;    ( String ) ;    ( String ) ;    ( String ) ;    ( String ) ;    ( String ) ;    ( String ) ;    ( String ) ;    ( String ) ;    ( String ) ;    ( String ) ;    ( String ) ;    ( String ) ;    ( String ) ;    ( String ) ;    ( String ) ;    ( String ) ;    ( String ) ;    ( String ) ;    ( String ) ;    ( String ) ;    ( String ) ;    ( String ) ;    ( String ) ;    ( String ) ;    ( String ) ;    ( String ) ;    ( String ) ;    ( String ) ;    ( String ) ;    ( String ) ;    ( String ) ;    ( String ) ;    ( String ) ;    ( String ) ;    ( String ) ;    ( String ) ;    ( String ) ;    ( String ) ;    ( String ) ;    ( String ) ;    ( String ) ;    ( String ) ;    ( String ) ;    ( String ) ;    ( String ) ;    ( String ) ;    ( String ) ;    ( String ) ;    ( String ) ;    ( String ) ;    ( String ) ;    ( String ) ;    ( String ) ;    ( String ) ;    ( String ) ;    ( String ) ;    ( String ) ;    ( String ) ;    ( String ) ;    ( String ) ;    ( String ) ;    ( String ) ;    ( String ) ;    ( String ) ;    ( String ) ;    ( String ) ;    ( String ) ;    ( String ) ;    ( String ) ;    ( String ) ;    ( String ) ;    ( String ) ;    ( String ) ;    ( String ) ;    ( String ) ;    ( String ) ;    ( String ) ;    ( String ) ;    ( String ) ;    ( String ) ;    ( String ) ;    ( String ) ;    ( String ) ;    ( String ) ;    ( String ) ;    ( String ) ;    ( String ) ;    ( String ) ;    ( String ) ;    ( String ) ;    ( String ) ;    ( String ) ;    ( String ) ;    ( String ) ;    ( String ) ;    ( String ) ;    ( String ) ;    ( String ) ;    ( String ) ;    ( String ) ;    ( String ) ;    ( String ) ;    ( String ) ;    ( String ) ;    ( String ) ;

# END OF TRANSLATION




    . . .filter ( n ) .filter ( n ) .collect ( ) ;
    .filter ( n ) ;
    .filter ( n ) ;
    .collect ( n ) ;
    .filter ( n ) ;
    .filter ( n ) ;
    .filter ( n ) ;    .collect ( n ) ;    .filter ( n ) ;    .filter ( n ) ;    .filter ( n ) ;    .collect ( n ) ;    .filter ( n ) ;    .filter ( n ) ;    .filter ( n ) ;    .filter ( n ) ;    .filter ( n ) ;    .filter ( n ) ;    .filter ( n ) ;    .filter ( n ) ;    .filter ( n ) ;    .filter ( n ) ;    .filter ( n ) ;    .filter ( n ) ;    .filter ( n ) ;    .filter ( n ) ;    .filter ( n ) ;    .filter ( n ) ;    .filter ( n ) ;    .filter ( n ) ;    .filter ( n ) ;    .filter ( n ) ;    .filter ( n ) ;    .filter ( n ) ;    .filter ( n ) ;    .filter ( n ) ;    .filter ( n ) ;    .filter ( n ) ;    .filter ( n ) ;    .filter ( n ) ;    .filter ( n ) ;    .filter ( n ) ;    .filter ( n ) ;    .filter ( n ) ;    .filter ( n ) ;    .filter ( n ) ;    .filter ( n ) ;    .filter ( n ) ;    .filter ( n ) ;    .filter ( n ) ;    .filter ( n ) ;    .filter ( n ) ;    .filter ( n ) ;    .filter ( n ) ;    .filter ( n ) ;    .filter ( n ) ;    .filter ( n ) ;    .filter ( n ) ;    .filter ( n ) ;    .filter ( n ) ;    .filter ( n ) ;    .filter ( n ) ;    .filter ( n ) ;    .filter ( n ) ;    .filter ( n ) ;    .filter ( n ) ;    .filter ( n ) ;    .filter ( n ) ;    .filter ( n ) ;    .filter ( n ) ;    .filter ( n ) ;    .filter ( n ) ;    .filter ( n ) ;    .filter ( n ) ;    .filter ( n ) ;    .filter ( n ) ;    .filter ( n ) ;    .filter ( n ) ;    .filter ( n ) ;    .filter ( n ) ;    .filter ( n ) ;    .filter ( n ) ;    .filter ( n ) ;    .filter ( n ) ;    .filter ( n ) ;    .filter ( n ) ;    .filter ( n ) ;    .filter ( n ) ;    .filter ( n ) ;    .filter ( n ) ;    .filter ( n ) ;    .filter ( n ) ;    .filter ( n ) ;    .filter ( n ) ;    .filter ( n ) ;    .filter ( n ) ;    .filter ( n ) ;    .filter ( n ) ;    .filter ( n ) ;    .filter ( n ) ;    .filter ( n ) ;    .filter ( n ) ;    .filter ( n ) ;    .filter ( n ) ;    .filter ( n ) ;    .filter ( n ) ;    .filter ( n ) ;    .filter ( n ) ;    .filter ( n ) ;    .filter ( n ) ;    .filter ( n ) ;    .filter ( n ) ;    .filter ( n ) ;    .filter ( n ) ;    .filter ( n ) ;    .filter ( n ) ;    .filter ( n ) ;    .filter ( n ) ;

# END OF TRANSLATION





    . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .

# END OF TRANSLATION





    .get ( i ) .get ( i ) .get ( i ) .get ( i ) .get ( i ) .get ( i ) .get ( i ) .get ( i ) .get ( i ) .get ( i ) .get ( i ) .get ( i ) .get ( i ) .get ( i ) .get ( i ) .get ( i ) .get ( i ) .get ( i ) .get ( i ) .get ( i ) .get ( i ) .get ( i ) .get ( i ) .get ( i ) .get ( i ) .get ( i ) .get ( i ) .get ( i ) .get ( i ) .get ( i ) .get ( i ) .get ( i ) .get ( i ) .get ( i ) .get ( i ) .get ( i ) .get ( i ) .get ( i ) .get ( i ) .get ( i ) .get ( i ) .get ( i ) .get ( i ) .get ( i ) .get ( i ) .get ( i ) .get ( i ) .get ( i ) .get ( i ) .get ( i ) .get ( i ) .get ( i ) .get ( i ) .get ( i ) .get ( i ) .get ( i ) .get ( i ) .get ( i ) .get ( i ) .get ( i ) .get ( i ) .get ( i ) .get ( i ) .get ( i ) .get ( i ) .get ( i ) .get ( i ) .get ( i ) .get ( i ) .get ( i ) .get ( i ) .get ( i ) .get ( i ) .get ( i ) .get ( i ) .get ( i ) .get ( i ) .get ( i ) .get ( i ) .get ( i ) .get ( i ) .get ( i ) .get ( i ) .get ( i ) .get ( i ) .get ( i ) .get ( i ) .get ( i ) .get ( i ) .get ( i ) .get ( i ) .get ( i ) .get ( i ) .get ( i ) .get ( i ) .get ( i ) .get ( i ) .get ( i ) .get ( i ) .get ( i ) .get ( i ) .get ( i ) .get ( i ) .get ( i ) .get ( i ) .get ( i ) .get ( i ) .get ( i ) .get ( i ) .get ( i ) .get ( i ) .get ( i ) .get ( i ) .get ( i ) .get ( i ) .get ( i ) .get ( i ) .get ( i ) .get ( i ) .get ( i ) .get ( i ) .get ( i ) .get ( i ) .get ( i ) .get ( i ) .get ( i ) .get ( i ) .get ( i ) .get ( i ) .get ( i ) .get ( i ) .get ( i ) .get ( i ) .get ( i ) .get ( i ) .get ( i ) .get ( i ) .get ( i ) .get ( i ) .get ( i ) .get ( i ) .get ( i ) .get ( i ) .get ( i ) .get ( i ) .get ( i ) .get ( i ) .get ( i ) .get ( i ) .get ( i ) .get ( i ) .get ( i ) .get ( i ) .get ( i ) .get ( i ) .get ( i ) .get ( i ) .get ( i ) .get ( i ) .get ( i ) .get ( i ) .get ( i

# END OF TRANSLATION





    .map ( n ) .map ( n ) .map ( n ) .filter ( n ) .filter ( n ) .map ( n ) .filter ( n ) .map ( n ) .filter ( n ) .map ( n ) .filter ( n ) .map ( n ) .filter ( n ) .filter ( n ) .map ( n ) .filter ( n ) .map ( n ) .filter ( n ) .filter ( n ) .map ( n ) .filter ( n ) .filter ( n ) .map ( n ) .filter ( n ) .filter ( n ) .map ( n ) .filter ( n ) .filter ( n ) .filter ( n ) .filter ( n ) .map ( n ) .filter ( n ) .filter ( n ) .filter ( n ) .filter ( n ) .filter ( n ) .filter ( n ) .filter ( n ) .filter ( n ) .filter ( n ) .map ( n ) .filter ( n ) .filter ( n ) .filter ( n ) .filter ( n ) .filter ( n ) .filter ( n ) .filter ( n ) .filter ( n ) .filter ( n ) .filter ( n ) .filter ( n ) .filter ( n ) .filter ( n ) .filter ( n ) .filter ( n ) .filter ( n ) .filter ( n ) .filter ( n ) .filter ( n ) .filter ( n ) .filter ( n ) .filter ( n ) .filter ( n ) .filter ( n ) .filter ( n ) .filter ( n ) .filter ( n ) .filter ( n ) .filter ( n ) .filter ( n ) .filter ( n ) .filter ( n ) .filter ( n ) .filter ( n ) .filter ( n ) .filter ( n ) .filter ( n ) .filter ( n ) .filter ( n ) .filter ( n ) .filter ( n ) .filter ( n ) .filter ( n ) .filter ( n ) .filter ( n ) .filter ( n ) .filter ( n ) .filter ( n ) .filter ( n ) .filter ( n ) .filter ( n ) .filter ( n ) .filter ( n ) .filter ( n ) .filter ( n ) .filter ( n ) .filter ( n ) .filter ( n ) .filter ( n ) .filter ( n ) .filter ( n ) .filter ( n ) .filter ( n ) .filter ( n ) .filter ( n ) .filter ( n ) .filter ( n ) .filter ( n ) .filter ( n ) .filter ( n ) .filter ( n ) .filter ( n ) .filter ( n ) .filter ( n ) .filter ( n ) .filter ( n ) .filter ( n ) .filter ( n ) .filter ( n ) .filter ( n ) .filter ( n ) .filter ( n ) .filter ( n ) .filter ( n ) .filter ( n ) .filter ( n ) .filter ( n ) .filter ( n ) .filter ( n ) .filter ( n ) .filter ( n ) .filter ( n ) .filter ( n ) .filter ( n ) .filter ( n ) .filter ( n ) .filter ( n ) .filter ( n ) .filter ( n ) .filter ( n ) .filter ( n ) .filter ( n ) .filter ( n ) .filter ( n ) .filter ( n ) .filter ( n ) .filter ( n ) .filter ( n ) .filter ( n ) .filter ( n ) .filter ( n ) .filter ( n ) .filter ( n ) .filter ( n ) .filter ( n ) .filter ( n ) .filter ( n ) .filter ( n ) .filter ( n ) .filter

# END OF TRANSLATION





 


    .toLower ( ) .toUpperform ( ) .toLower ( ) .toUpper ( ) .toUpper ( ) .toLower ( ) .toUpper ( ) .toLower ( ) .toUpper ( ) .toUpper ( ) .toLower ( ) .toUpper ( ) .toUpper ( ) .toLower ( ) .toUpper ( ) .toLower ( ) .toUpper ( ) .toUpper ( ) .toLower ( ) .toUpper ( ) .toUpper ( ) .toLower ( ) .toUpper ( ) .toUpper ( ) .toLower ( ) .toUpper ( ) .toUpper ( ) .toLower ( ) .toUpper ( ) .toUpper ( ) .toUpper ( ) .toLower ( ) .toUpper ( ) .toUpper ( ) .toLower ( ) .toUpper ( ) .toUpper ( ) .toUpper ( ) .toUpper ( ) .toLower ( ) .toUpper ( ) .toUpper ( ) .toUpper ( ) .toLower ( ) .toUpper ( ) .toUpper ( ) .toUpper ( ) .toUpper ( ) .toLower ( ) .toUpper ( ) .toUpper ( ) .toUpper ( ) .toUpper ( ) .toUpper ( ) .toUpper ( ) .toUpper ( ) .toUpper ( ) .toLower ( ) .toUpper ( ) .toUpper ( ) .toUpper ( ) .toUpper ( ) .toUpper ( ) .toUpper ( ) .toUpper ( ) .toUpper ( ) .toUpper ( ) .toUpper ( ) .toUpper ( ) .toUpper ( ) .toUpper ( ) .toUpper ( ) .toUpper ( ) .toUpper ( ) .toUpper ( ) .toUpper ( ) .toUpper ( ) .toUpper ( ) .toUpper ( ) .toUpper ( ) .toUpper ( ) .toUpper ( ) .toUpper ( ) .toUpper ( ) .toUpper ( ) .toUpper ( ) .toUpper ( ) .toUpper ( ) .toUpper ( ) .toUpper ( ) .toUpper ( ) .toUpper ( ) .toUpper ( ) .toUpper ( ) .toUpper ( ) .toUpper ( ) .toUpper ( ) .toUpper ( ) .toUpper ( ) .toUpper ( ) .toUpper ( ) .toUpper ( ) .toUpper ( ) .toUpper ( ) .toUpper ( ) .toUpper ( ) .toUpper ( ) .toUpper ( ) .toUpper ( ) .toUpper ( ) .toUpper ( ) .toUpper ( ) .toUpper ( ) .toUpper ( ) .toUpper ( ) .toUpper ( ) .toUpper ( ) .toUpper ( ) .toUpper ( ) .toUpper ( ) .toUpper ( ) .toUpper ( ) .toUpper ( ) .toUpper ( ) .toUpper ( ) .toUpper ( ) .toUpper ( ) .toUpper ( ) .toUpper ( ) .toUpper ( ) .toUpper ( ) .toUpper ( ) .toUpper ( ) .toUpper ( ) .toUpper ( ) .toUpper ( ) .toUpper ( ) .toUpper ( ) .toUpper ( ) .toUpper ( ) .toUpper ( )

# END OF TRANSLATION




 

    .map ( index ) ;
 
    .map ( index ) ;
    .map ( index ) ;
    .map ( index ) ;
    .map ( index ) ;
    .map ( index ) ;
    .map ( index ) ;
    .map ( index ) ;
    .map ( index ) ;    .map ( index ) ;    .map ( index ) ;    .map ( index ) ;    .map ( index ) ;    .map ( index ) ;    .map ( index ) ;    .map ( index ) ;    .map ( index ) ;    .map ( index ) ;    .map ( index ) ;    .map ( index ) ;    .map ( index ) ;    .map ( index ) ;    .map ( index ) ;    .map ( index ) ;    .map ( index ) ;    .map ( index ) ;    .map ( index ) ;    .map ( index ) ;    .map ( index ) ;    .map ( index ) ;    .map ( index ) ;    .map ( index ) ;    .map ( index ) ;    .map ( index ) ;    .map ( index ) ;    .map ( index ) ;    .map ( index ) ;    .map ( index ) ;    .map ( index ) ;    .map ( index ) ;    .map ( index ) ;    .map ( index ) ;    .map ( index ) ;    .map ( index ) ;    .map ( index ) ;    .map ( index ) ;    .map ( index ) ;    .map ( index ) ;    .map ( index ) ;    .map ( index ) ;    .map ( index ) ;    .map ( index ) ;    .map ( index ) ;    .map ( index ) ;    .map ( index ) ;    .map ( index ) ;    .map ( index ) ;    .map ( index ) ;    .map ( index ) ;    .map ( index ) ;    .map ( index ) ;    .map ( index ) ;    .map ( index ) ;    .map ( index ) ;    .map ( index ) ;    .map ( index ) ;    .map ( index ) ;    .map ( index ) ;    .map ( index ) ;    .map ( index ) ;    .map ( index ) ;    .map ( index ) ;    .map ( index ) ;    .map ( index ) ;    .map ( index ) ;    .map ( index ) ;    .map ( index ) ;    .map ( index ) ;    .map ( index ) ;    .map ( index ) ;    .map ( index ) ;    .map ( index ) ;    .map ( index ) ;    .map ( index ) ;    .map ( index ) ;    .map ( index ) ;    .map ( index ) ;    .map ( index ) ;    .map ( index ) ;    .map ( index ) ;    .map ( index ) ;    .map ( index ) ;    .map ( index ) ;    .map ( index ) ;    .map ( index ) ;    .map ( index ) ;    .map ( index ) ;    .map ( index ) ;    .map ( index ) ;    .map ( index ) ;    .map ( index ) ;    .map ( index ) ;    .map ( index ) ;    .map ( index ) ;    .map ( index ) ;    .map ( index ) ;    .map ( index ) ;    .map ( index ) ;    .map ( index ) ;    .map ( index ) ;    .map ( index ) ;    .map ( index ) ;    .map ( index ) ;    .map ( index ) ;    .map ( index ) ;    .map ( index ) ;    .map ( index ) ;    .map ( index ) ;    .

# END OF TRANSLATION


```




    . .map ( a ) .filter ( b ) .filter ( b ) .map ( a ) .filter ( b ) .filter ( b ) .map ( a ) .filter ( b ) .collect ( b ) .collect ( b ) .filter ( b ) .collect ( b ) .filter ( b ) .map ( a ) .filter ( b ) .collect ( b ) .filter ( b ) .collect ( b ) .filter ( b ) .filter ( b ) .map ( b ) .filter ( b ) .collect ( b ) .filter ( b ) .filter ( b ) .filter ( b ) .filter ( b ) .collect ( b ) .filter ( b ) .filter ( b ) .filter ( b ) .filter ( b ) .filter ( b ) .filter ( b ) .collect ( b ) .filter ( b ) .filter ( b ) .filter ( b ) .filter ( b ) .filter ( b ) .filter ( b ) .filter ( b ) .filter ( b ) .filter ( b ) .filter ( b ) .filter ( b ) .filter ( b ) .filter ( b ) .filter ( b ) .filter ( b ) .filter ( b ) .filter ( b ) .filter ( b ) .filter ( b ) .filter ( b ) .filter ( b ) .filter ( b ) .filter ( b ) .filter ( b ) .filter ( b ) .filter ( b ) .filter ( b ) .filter ( b ) .filter ( b ) .filter ( b ) .filter ( b ) .filter ( b ) .filter ( b ) .filter ( b ) .filter ( b ) .filter ( b ) .filter ( b ) .filter ( b ) .filter ( b ) .filter ( b ) .filter ( b ) .filter ( b ) .filter ( b ) .filter ( b ) .filter ( b ) .filter ( b ) .filter ( b ) .filter ( b ) .filter ( b ) .filter ( b ) .filter ( b ) .filter ( b ) .filter ( b ) .filter ( b ) .filter ( b ) .filter ( b ) .filter ( b ) .filter ( b ) .filter ( b ) .filter ( b ) .filter ( b ) .filter ( b ) .filter ( b ) .filter ( b ) .filter ( b ) .filter ( b ) .filter ( b ) .filter ( b ) .filter ( b ) .filter ( b ) .filter ( b ) .filter ( b ) .filter ( b ) .filter ( b ) .filter ( b ) .filter ( b ) .filter ( b ) .filter ( b ) .filter ( b ) .filter ( b ) .filter ( b ) .filter ( b ) .filter ( b ) .filter ( b ) .filter ( b ) .filter ( b ) .filter ( b ) .filter ( b ) .filter ( b ) .filter ( b ) .filter ( b ) .filter ( b ) .filter ( b ) .filter ( b ) .filter ( b ) .filter ( b ) .filter ( b ) .filter ( b ) .filter ( b ) .filter ( b ) .filter ( b ) .filter ( b ) .filter ( b ) .filter ( b ) .filter ( b ) .filter ( b ) .filter ( b ) .filter ( b ) .filter ( b ) .filter ( b ) .filter ( b ) .filter ( b ) .filter ( b ) .filter ( b ) .filter ( b ) .filter ( b ) .filter ( b ) .filter ( b ) .filter ( b ) .filter ( b ) .filter ( b ) .filter ( b ) .filter ( b ) .filter ( b ) .filter ( b ) .filter ( b ) .filter ( b ) .filter ( b

# END OF TRANSLATION




    . . .filter ( e ) .filter ( e ) .filter ( e ) .filter ( e ) .filter ( e ) .filter ( e ) .filter ( e ) .filter ( e ) .filter ( e ) .filter ( e ) .filter ( e ) .filter ( e ) .filter ( e ) .filter ( e ) .filter ( e ) .filter ( e ) .filter ( e ) .filter ( e ) .filter ( e ) .filter ( e ) .filter ( e ) .filter ( e ) .filter ( e ) .filter ( e ) .filter ( e ) .filter ( e ) .filter ( e ) .filter ( e ) .filter ( e ) .filter ( e ) .filter ( e ) .filter ( e ) .filter ( e ) .filter ( e ) .filter ( e ) .filter ( e ) .filter ( e ) .filter ( e ) .filter ( e ) .filter ( e ) .filter ( e ) .filter ( e ) .filter ( e ) .filter ( e ) .filter ( e ) .filter ( e ) .filter ( e ) .filter ( e ) .filter ( e ) .filter ( e ) .filter ( e ) .filter ( e ) .filter ( e ) .filter ( e ) .filter ( e ) .filter ( e ) .filter ( e ) .filter ( e ) .filter ( e ) .filter ( e ) .filter ( e ) .filter ( e ) .filter ( e ) .filter ( e ) .filter ( e ) .filter ( e ) .filter ( e ) .filter ( e ) .filter ( e ) .filter ( e ) .filter ( e ) .filter ( e ) .filter ( e ) .filter ( e ) .filter ( e ) .filter ( e ) .filter ( e ) .filter ( e ) .filter ( e ) .filter ( e ) .filter ( e ) .filter ( e ) .filter ( e ) .filter ( e ) .filter ( e ) .filter ( e ) .filter ( e ) .filter ( e ) .filter ( e ) .filter ( e ) .filter ( e ) .filter ( e ) .filter ( e ) .filter ( e ) .filter ( e ) .filter ( e ) .filter ( e ) .filter ( e ) .filter ( e ) .filter ( e ) .filter ( e ) .filter ( e ) .filter ( e ) .filter ( e ) .filter ( e ) .filter ( e ) .filter ( e ) .filter ( e ) .filter ( e ) .filter ( e ) .filter ( e ) .filter ( e ) .filter ( e ) .filter ( e ) .filter ( e ) .filter ( e ) .filter ( e ) .filter ( e ) .filter ( e ) .filter ( e ) .filter ( e ) .filter ( e ) .filter ( e ) .filter ( e ) .filter ( e ) .filter ( e ) .filter ( e ) .filter ( e ) .filter ( e ) .filter ( e ) .filter ( e ) .filter ( e ) .filter ( e ) .filter ( e ) .filter ( e ) .filter ( e ) .filter ( e ) .filter ( e ) .filter ( e ) .filter ( e ) .filter ( e ) .filter ( e ) .filter ( e ) .filter ( e ) .filter ( e ) .filter ( e ) .filter ( e ) .filter ( e ) .filter ( e ) .filter ( e ) .filter ( e ) .filter ( e ) .filter ( e ) .filter ( e ) .filter ( e ) .filter ( e ) .filter ( e ) .filter ( e ) .filter ( e ) .filter

# END OF TRANSLATION





 


    }

    }
   
    }
    }
    }
    }
    }
    }
    }
    }
    }
    }
    }
    }
    }
    }
    }
    }
    }
    }
    }
    }
    }
    }
    }
    }
    }
    }
    }
    }    }
    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }    }

# END OF TRANSLATION

```




    .filter ( n ) ;
 
    .filter ( n ) ;
    .filter ( n ) ;
    .filter ( n ) ;
    .filter ( n ) ;
    .filter ( n ) ;
    .filter ( n ) ;
    .filter ( n ) ;
    .filter ( n ) ;
    .filter ( n ) ;
    .filter ( n ) ;    .filter ( n ) ;    .filter ( n ) ;    .filter ( n ) ;    .filter ( n ) ;    .filter ( n ) ;    .filter ( n ) ;    .filter ( n ) ;    .filter ( n ) ;    .filter ( n ) ;    .filter ( n ) ;    .filter ( n ) ;    .filter ( n ) ;    .filter ( n ) ;    .filter ( n ) ;    .filter ( n ) ;    .filter ( n ) ;    .filter ( n ) ;    .filter ( n ) ;    .filter ( n ) ;    .filter ( n ) ;    .filter ( n ) ;    .filter ( n ) ;    .filter ( n ) ;    .filter ( n ) ;    .filter ( n ) ;    .filter ( n ) ;    .filter ( n ) ;    .filter ( n ) ;    .filter ( n ) ;    .filter ( n ) ;    .filter ( n ) ;    .filter ( n ) ;    .filter ( n ) ;    .filter ( n ) ;    .filter ( n ) ;    .filter ( n ) ;    .filter ( n ) ;    .filter ( n ) ;    .filter ( n ) ;    .filter ( n ) ;    .filter ( n ) ;    .filter ( n ) ;    .filter ( n ) ;    .filter ( n ) ;    .filter ( n ) ;    .filter ( n ) ;    .filter ( n ) ;    .filter ( n ) ;    .filter ( n ) ;    .filter ( n ) ;    .filter ( n ) ;    .filter ( n ) ;    .filter ( n ) ;    .filter ( n ) ;    .filter ( n ) ;    .filter ( n ) ;    .filter ( n ) ;    .filter ( n ) ;    .filter ( n ) ;    .filter ( n ) ;    .filter ( n ) ;    .filter ( n ) ;    .filter ( n ) ;    .filter ( n ) ;    .filter ( n ) ;    .filter ( n ) ;    .filter ( n ) ;    .filter ( n ) ;    .filter ( n ) ;    .filter ( n ) ;    .filter ( n ) ;    .filter ( n ) ;    .filter ( n ) ;    .filter ( n ) ;    .filter ( n ) ;    .filter ( n ) ;    .filter ( n ) ;    .filter ( n ) ;    .filter ( n ) ;    .filter ( n ) ;    .filter ( n ) ;    .filter ( n ) ;    .filter ( n ) ;    .filter ( n ) ;    .filter ( n ) ;    .filter ( n ) ;    .filter ( n ) ;    .filter ( n ) ;    .filter ( n ) ;    .filter ( n ) ;    .filter ( n ) ;    .filter ( n ) ;    .filter ( n ) ;    .filter ( n ) ;    .filter ( n ) ;    .filter ( n ) ;    .filter ( n ) ;    .filter ( n ) ;    .filter ( n ) ;    .filter ( n ) ;    .filter ( n ) ;    .filter ( n ) ;    .filter ( n ) ;    .filter ( n ) ;    .filter

# END OF TRANSLATION





 

    . get ( i ) ;
 
    . get ( i ) ;
    . get ( i ) ;
    . get ( i ) ;
    . get ( i ) ;
    . get ( i ) ;
    . get ( i ) ;
    . get ( i ) ;
    . get ( i ) ;
    . get ( i ) ;    . get ( i ) ;    . get ( i ) ;    . get ( i ) ;    . get ( i ) ;    . get ( i ) ;    . get ( i ) ;    . get ( i ) ;    . get ( i ) ;    . get ( i ) ;    . get ( i ) ;    . get ( i ) ;    . get ( i ) ;    . get ( i ) ;    . get ( i ) ;    . get ( i ) ;    . get ( i ) ;    . get ( i ) ;    . get ( i ) ;    . get ( i ) ;    . get ( i ) ;    . get ( i ) ;    . get ( i ) ;    . get ( i ) ;    . get ( i ) ;    . get ( i ) ;    . get ( i ) ;    . get ( i ) ;    . get ( i ) ;    . get ( i ) ;    . get ( i ) ;    . get ( i ) ;    . get ( i ) ;    . get ( i ) ;    . get ( i ) ;    . get ( i ) ;    . get ( i ) ;    . get ( i ) ;    . get ( i ) ;    . get ( i ) ;    . get ( i ) ;    . get ( i ) ;    . get ( i ) ;    . get ( i ) ;    . get ( i ) ;    . get ( i ) ;    . get ( i ) ;    . get ( i ) ;    . get ( i ) ;    . get ( i ) ;    . get ( i ) ;    . get ( i ) ;    . get ( i ) ;    . get ( i ) ;    . get ( i ) ;    . get ( i ) ;    . get ( i ) ;    . get ( i ) ;    . get ( i ) ;    . get ( i ) ;    . get ( i ) ;    . get ( i ) ;    . get ( i ) ;    . get ( i ) ;    . get ( i ) ;    . get ( i ) ;    . get ( i ) ;    . get ( i ) ;    . get ( i ) ;    . get ( i ) ;    . get ( i ) ;    . get ( i ) ;    . get ( i ) ;    . get ( i ) ;    . get ( i ) ;    . get ( i ) ;    . get ( i ) ;    . get ( i ) ;    . get ( i ) ;    . get ( i ) ;    . get ( i ) ;    . get ( i ) ;    . get ( i ) ;    . get ( i ) ;    . get ( i ) ;    . get ( i ) ;    . get ( i ) ;    . get ( i ) ;    . get ( i ) ;    . get ( i ) ;    . get ( i ) ;    . get ( i ) ;    . get ( i ) ;    . get ( i ) ;    . get ( i ) ;    . get ( i ) ;    . get ( i ) ;    . get ( i ) ;    . get ( i ) ;    . get ( i ) ;    . get ( i ) ;    . get ( i ) ;    . get ( i ) ;    . get ( i ) ;    . get ( i ) ;    . get ( i ) ;    . get ( i ) ;    . get ( i ) ;    . get ( i ) ;    . get (

# END OF TRANSLATION




   
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  //  // 

# END OF TRANSLATION

