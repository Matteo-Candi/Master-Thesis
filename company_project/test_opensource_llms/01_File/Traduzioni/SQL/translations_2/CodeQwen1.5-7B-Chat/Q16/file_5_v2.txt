system
You are an expert in translating code from SQL to PySpark; translate the given code at your best even if there are problems; do not return any message outside the code and make it as readable as possible breaking it in smaller parts; minimize the code complexity and volume; ensure to not make any syntax error and close all parenthesis; define all variables and import all libraries used; ensure the user can copy and run the code without modifications; translate from SQL to PySpark every part of the input code reproducing the same operations; do not use SQL syntax in the PySpark code and do not use spark.sql(); make PySpark code more efficient than the SQL one; proper column operations and the correct syntax for casting and aliasing.
user
Translate the following code from SQL to PySpark:
INSERT INTO ddwh02_sm.twrk_fbil_billing_l_flash fbil (fbil_id_comp_company, fbil_cd_accg_doc_code, fbil_nr_accg_doc_fiscal_year, fbil_cd_cmm_doc_code, fbil_cd_cmm_doc_pos_code, fbil_id_pvan_vcl, fbil_cd_sls_ord_code, fbil_cd_sls_ord_pos_code, fbil_id_cmm_doc_id, fbil_id_cmm_doc_pos_id, fbil_id_bdty_billing_doc_tp, fbil_id_time_cmm_doc_date, fbil_id_cust_payer, fbil_id_cust_sold, fbil_id_cuty_customer_type, fbil_id_divi_division, fbil_id_hmup_hmu_product, fbil_id_prat_pr_attributes, fbil_id_prp_prpp_product, fbil_id_time_return_date, fbil_id_time_sales_order_date, fbil_id_sls_ord_id, fbil_id_sls_ord_pos_id, fbil_id_time_start_billing_dat, fbil_cd_currency, fbil_id_batch_id, fbil_fl_itc_flg, fbil_id_cust_payee, fbil_id_cust_billtoparner, fbil_id_cust_saleschannel, fbil_id_cust_soldtoparner, fbil_id_cust_ownership_group, fbil_id_addr_ownership_group, fbil_cd_business_area_code, fbil_cd_codice_resa, fbil_cd_dlr_code, fbil_cd_dlr_ord_ref, fbil_cd_dlr_ord_tp, fbil_cd_doc_nbr, fbil_cd_doc_tp, fbil_cd_draft_inv_code, fbil_cd_eng_nbr, fbil_cd_machine_tp, fbil_cd_market_legacy, fbil_cd_price_tyres_1, fbil_cd_price_tyres_2, fbil_cd_price_list, fbil_cd_price_tech_tp, fbil_cd_product_cl, fbil_cd_product_line, fbil_cd_product_tp, fbil_cd_progressive_ord, fbil_cd_ref_doc_nbr, fbil_cd_serial_nbr, fbil_cd_shipment_progressive, fbil_cd_sls_ord, fbil_cd_source_ord, fbil_cd_source_ord_sequence, fbil_cd_std_card_mdl, fbil_cd_std_card_tyres, fbil_cd_std_card_vrs, fbil_cd_tech_tp, fbil_id_time_itc_inv_date, fbil_fl_inv_reject_reason, fbil_id_time_draft_inv_date, fbil_id_coun_country, fbil_cd_source_system, fbil_in_wholesale_qty, fbil_in_wholesale_net_qty, fbil_in_wholesale_rev_qty, fbil_id_time_accounting_date)
SELECT -1 AS fbil_id_comp_company,
       '-1' AS fbil_cd_accg_doc_code,
       to_number (TO_CHAR (inol.inol_dt_document_date, 'YYYY')) AS fbil_nr_accg_doc_fiscal_year,
       inol.inol_cd_document_number AS fbil_cd_cmm_doc_code,
       inol.inol_cd_progressive_order AS fbil_cd_cmm_doc_pos_code,
       NVL (inol.inol_id_vele_vcl_legacy,
            -1) AS fbil_id_pvan_vcl,
           inol.inol_cd_sales_order AS fbil_cd_sls_ord_code,
           inol.inol_cd_progressive_order AS fbil_cd_sls_ord_pos_code,
           NVL (inol.inol_id_inoh_invoice_orders_he,
                -1) AS fbil_id_cmm_doc_id,
               NVL (inol.inol_id_invoice_orders_lines,
                    -1) AS fbil_id_cmm_doc_pos_id,
                   inol_cd_document_type AS fbil_id_bdty_billing_doc_tp,
                   NVL (to_number (TO_CHAR (inol.inol_dt_document_date, 'J')),
                        5373484) AS fbil_id_time_cmm_doc_date,
                       NVL (inol.inol_id_cust_customer,
                            -1) AS fbil_id_cust_payer,
                           NVL (inol.inol_id_cust_customer,
                                -1) AS fbil_id_cust_sold,
                               -2 AS fbil_id_cuty_customer_type,
                               NVL (vele.vele_id_ledi_legacy_division,
                                    -1) AS fbil_id_divi_division,
                                   NVL (vele.vele_id_hmup_plank_key,
                                        -1) AS fbil_id_hmup_hmu_product,
                                       NVL (tdim_pvan.pvan_id_prat_pr_attributes,
                                            -1) AS fbil_id_prat_pr_attributes,
                                           NVL (tdim_pvan.pvan_id_prpp_prp_product,
                                                -1) AS fbil_id_prp_prpp_product,
                                               5373484 AS fbil_id_time_return_date,
                                               NVL (to_number (TO_CHAR (slor.slor_dt_document_date, 'J')),
                                                    5373484) AS fbil_id_time_sales_order_date,
                                                   NVL (slor.slor_id_sales_order,
                                                        -1) AS fbil_id_sls_ord_id,
                                                       NVL (sops.sops_id_sales_order_pos,
                                                            -1) AS fbil_id_sls_ord_pos_id,
                                                           NVL (to_number (TO_CHAR (vele.vele_dt_dealer_invoice_date, 'J')),
                                                                5373484) AS fbil_id_time_start_billing_dat,
                                                               inoh.inoh_cd_currency_code AS fbil_cd_currency,
                                                               1 AS fbil_id_batch_id,
                                                               NULL AS fbil_fl_itc_flg,
                                                               NVL (inoh.inoh_id_cust_customer,
                                                                    -1) AS fbil_id_cust_payee,
                                                                   NVL (inoh.inoh_id_cust_customer,
                                                                        -1) AS fbil_id_cust_billtoparner,
                                                                       NVL (inoh.inoh_id_cust_customer,
                                                                            -1) AS fbil_id_cust_saleschannel,
                                                                           NVL (inoh.inoh_id_cust_customer,
                                                                                -1) AS fbil_id_cust_soldtoparner,
                                                                               NVL (inoh.inoh_id_cust_customer,
                                                                                    -1) AS fbil_id_cust_ownership_group,
                                                                                   -2 AS fbil_id_addr_ownership_group,
                                                                                   inol.inol_cd_business_area_code AS fbil_cd_business_area_code,
                                                                                   slor.slor_cd_codice_resa AS fbil_cd_codice_resa,
                                                                                   inol.inol_cd_dealer_code AS fbil_cd_dlr_code,
                                                                                   inoh.inoh_cd_dealer_order_reference AS fbil_cd_dlr_ord_ref,
                                                                                   inol.inol_cd_dealer_order_type AS fbil_cd_dlr_ord_tp,
                                                                                   inol.inol_cd_document_number AS fbil_cd_doc_nbr,
                                                                                   inol.inol_cd_document_type AS fbil_cd_doc_tp,
                                                                                   inol.inol_cd_draft_number AS fbil_cd_draft_inv_code,
                                                                                   inol.inol_cd_engine_number AS fbil_cd_eng_nbr,
                                                                                   inol.inol_cd_machine_type AS fbil_cd_machine_tp,
                                                                                   inol.inol_cd_legacy_mkt AS fbil_cd_market_legacy,
                                                                                   inol.inol_cd_tyres_price_1 AS fbil_cd_price_tyres_1,
                                                                                   inol.inol_cd_tyres_price_2 AS fbil_cd_price_tyres_2,
                                                                                   inol.inol_cd_price_list AS fbil_cd_price_list,
                                                                                   inol.inol_cd_tech_type_price AS fbil_cd_price_tech_tp,
                                                                                   inol.inol_cd_product_class AS fbil_cd_product_cl,
                                                                                   inol.inol_cd_product_line AS fbil_cd_product_line,
                                                                                   inol.inol_cd_product_type AS fbil_cd_product_tp,
                                                                                   inol.inol_cd_progressive_order AS fbil_cd_progressive_ord,
                                                                                   inol.inol_cd_reference_document_num AS fbil_cd_ref_doc_nbr,
                                                                                   inol.inol_cd_serial_number AS fbil_cd_serial_nbr,
                                                                                   inol.inol_cd_shipment_progressive AS fbil_cd_shipment_progressive,
                                                                                   inol.inol_cd_sales_order AS fbil_cd_sls_ord,
                                                                                   inol.inol_cd_source_order AS fbil_cd_source_ord,
                                                                                   inol.inol_cd_source_order_sequence AS fbil_cd_source_ord_sequence,
                                                                                   inol.inol_cd_standard_card_model AS fbil_cd_std_card_mdl,
                                                                                   inol.inol_cd_standard_card_tyres AS fbil_cd_std_card_tyres,
                                                                                   inol.inol_cd_standard_card_version AS fbil_cd_std_card_vrs,
                                                                                   inol.inol_cd_tech_tp AS fbil_cd_tech_tp,
                                                                                   5373484 AS fbil_id_time_itc_inv_date,
                                                                                   inol.inol_fl_invoice_reject_reason AS fbil_fl_inv_reject_reason,
                                                                                   NVL (to_number (TO_CHAR (inol.inol_dt_draft_date, 'J')),
                                                                                        5373484) AS fbil_id_time_draft_inv_date,
                                                                                       NVL (inol.inol_id_mark_std_legacy_mkt,
                                                                                            -1) AS fbil_id_coun_country,
                                                                                           inol.inol_cd_source_system AS fbil_cd_source_system,
                                                                                           CASE
                                                                                               WHEN inol.inol_cd_document_type IN ('1') THEN 1
                                                                                               ELSE 0
                                                                                           END AS fbil_in_wholesale_qty,
                                                                                           CASE
                                                                                               WHEN inol.inol_cd_document_type IN ('1') THEN 1
                                                                                               ELSE 0
                                                                                           END - CASE
                                                                                                     WHEN inol.inol_cd_document_type IN ('6') THEN 1
                                                                                                     ELSE 0
                                                                                                 END AS fbil_in_wholesale_net_qty,
                                                                                                 CASE WHEN inol.inol_cd_document_type IN ('6') th
FROM ddwh01_dw.td_inol_invoice_orders_lines inol
INNER JOIN ddwh02_dim.twrk_pvan_delta_flash_leg delta ON delta.vele_id_vehicle_legacy_id_pk = inol.inol_id_vele_vcl_legacy
INNER JOIN ddwh01_dw.tm_vele_vehicle_legacy vele ON vele.vele_id_vehicle_legacy_id_pk = inol.inol_id_vele_vcl_legacy
LEFT
    OUTER JOIN
  (SELECT *
   FROM
     (SELECT s.*,
             MAX (s.sops_id_sales_order_pos) OVER (PARTITION BY s.sops_cd_sales_order,
                                                                s.sops_cd_legacy_mkt,
                                                                s.sops_cd_dealer_code,
                                                                s.sops_cd_source_order,
                                                                s.sops_cd_source_order_sequence,
                                                                s.sops_cd_source_system,
                                                                s.sops_cd_product_line,
                                                                s.sops_id_vele_vcl_legacy) AS max_id_sops
      FROM ddwh01_dw.td_sops_sales_order_position s
      WHERE sops_cd_source_system not like '%SAP%')
   WHERE sops_id_sales_order_pos = max_id_sops) sops ON inol.inol_cd_sales_order = sops.sops_cd_sales_order
AND inol.inol_cd_legacy_mkt = sops.sops_cd_legacy_mkt
AND inol.inol_cd_dealer_code = sops.sops_cd_dealer_code
AND inol.inol_cd_source_order = sops.sops_cd_source_order
AND inol.inol_cd_source_order_sequence = sops.sops_cd_source_order_sequence
AND inol.inol_cd_source_system = sops.sops_cd_source_system
AND inol.inol_cd_product_line = sops.sops_cd_product_line
AND inol.inol_id_vele_vcl_legacy = sops.sops_id_vele_vcl_legacy
LEFT
    OUTER JOIN ddwh01_dw.tt_slor_sales_order slor ON sops.sops_id_slor_sales_order = slor.slor_id_sales_order
LEFT
    OUTER JOIN ddwh01_dw.tt_inoh_invoice_orders_header inoh ON inoh.inoh_id_invoice_orders_header = inol.inol_id_inoh_invoice_orders_he
LEFT
    OUTER JOIN tdim_pvan_vehicle tdim_pvan ON tdim_pvan.pvan_id_vcl = inol.inol_id_vele_vcl_legacy
WHERE inol.inol_fl_delete_line IS NULL ;
assistant
Here's the translated PySpark code:

```python
from pyspark.sql import SparkSession
from pyspark.sql.functions import to_number, col, when, max, over, lit

# Create Spark session
spark = SparkSession.builder.appName('Translate SQL to PySpark').getOrCreate()

# Load data
inol_df = spark.table('ddwh01_dw.td_inol_invoice_orders_lines')
vele_df = spark.table('ddwh01_dw.tm_vele_vehicle_legacy')
sops_df = spark.table('ddwh01_dw.td_sops_sales_order_position')
slor_df = spark.table('ddwh01_dw.tt_slor_sales_order')
inoh_df = spark.table('ddwh01_dw.tt_inoh_invoice_orders_header')
tdim_pvan_df = spark.table('tdim_pvan_vehicle')

# Perform necessary transformations
sops_df = sops_df.withColumn('max_id_sops', max('sops_id_sales_order_pos').over(Window.partitionBy('sops_cd_sales_order', 'sops_cd_legacy_mkt', 'sops_cd_dealer_code', 'sops_cd_source_order', 'sops_cd_source_order_sequence', 'sops_cd_source_system', 'sops_cd_product_line', 'sops_id_vele_vcl_legacy')))
sops_df = sops_df.filter(col('sops_id_sales_order_pos') == col('max_id_sops'))
sops_df = sops_df.drop('max_id_sops')

inoh_df = inoh_df.withColumn('inol_id_inoh_invoice_orders_he', lit(-1))

inol_df = inol_df.join(vele_df, on='inol_id_vele_vcl_legacy')
inol_df = inol_df.join(sops_df, inol_df['inol_cd_sales_order'] == sops_df['sops_cd_sales_order'] &
                               inol_df['inol_cd_legacy_mkt'] == sops_df['sops_cd_legacy_mkt'] &
                               inol_df['inol_cd_dealer_code'] == sops_df['sops_cd_dealer_code'] &
                               inol_df['inol_cd_source_order'] == sops_df['sops_cd_source_order'] &
                               inol_df['inol_cd_source_order_sequence'] == sops_df['sops_cd_source_order_sequence'] &
                               inol_df['inol_cd_source_system'] == sops_df['sops_cd_source_system'] &
                               inol_df['inol_cd_product_line'] == sops_df['sops_cd_product_line'] &
                               inol_df['inol_id_vele_vcl_legacy'] == sops_df['sops_id_vele_vcl_legacy'], 'left_outer')
inol_df = inol_df.join(slor_df, on='sops_id_slor_sales_order', 'left_outer')
inol_df = inol_df.join(inoh_df, on='inoh_id_invoice_orders_header', 'left_outer')
inol_df = inol_df.join(tdim_pvan_df, on='pvan_id_vcl', 'left_outer')

inol_df = inol_df.withColumn('fbil_id_comp_company', lit(-1))
inol_df = inol_df.withColumn('fbil_cd_accg_doc_code', lit('-1'))
inol_df = inol_df.withColumn('fbil_nr_accg_doc_fiscal_year', to_number(col('inol_dt_document_date').cast('string').substr(1, 4)))
inol_df = inol_df.withColumn('fbil_cd_cmm_doc_code', col('inol_cd_document_number'))
inol_df = inol_df.withColumn('fbil_cd_cmm_doc_pos_code', col('inol_cd_progressive_order'))
inol_df = inol_df.withColumn('fbil_id_pvan_vcl', when(col('inol_id_vele_vcl_legacy').isNull(), lit(-1)).otherwise(col('inol_id_vele_vcl_legacy')))
inol_df = inol_df.withColumn('fbil_cd_sls_ord_code', col('inol_cd_sales_order'))
inol_df = inol_df.withColumn('fbil_cd_sls_ord_pos_code', col('inol_cd_progressive_order'))
inol_df = inol_df.withColumn('fbil_id_cmm_doc_id', when(col('inol_id_inoh_invoice_orders_he').isNull(), lit(-1)).otherwise(col('inol_id_inoh_invoice_orders_he')))
inol_df = inol_df.withColumn('fbil_id_cmm_doc_pos_id', when(col('inol_id_invoice_orders_lines').isNull(), lit(-1)).otherwise(col('inol_id_invoice_orders_lines')))
inol_df = inol_df.withColumn('fbil_id_bdty_billing_doc_tp', col('inol_cd_document_type'))
inol_df = inol_df.withColumn('fbil_id_time_cmm_doc_date', when(col('inol_dt_document_date').isNull(), lit(5373484)).otherwise(to_number(col('inol_dt_document_date').cast('string').substr(1, 8))))
inol_df = inol_df.withColumn('fbil_id_cust_payer', when(col('inol_id_cust_customer').isNull(), lit(-1)).otherwise(col('inol_id_cust_customer')))
inol_df = inol_df.withColumn('fbil_id_cust_sold', when(col('inol_id_cust_customer').isNull(), lit(-1)).otherwise(col('inol_id_cust_customer')))
inol_df = inol_df.withColumn('fbil_id_cuty_customer_type', lit(-2))
inol_df = inol_df.withColumn('fbil_id_divi_division', when(col('vele_id_ledi_legacy_division').isNull(), lit(-1)).otherwise(col('vele_id_ledi_legacy_division')))
inol_df = inol_df.withColumn('fbil_id_hmup_hmu_product', when(col('vele_id_hmup_plank_key').isNull(), lit(-1)).otherwise(col('vele_id_hmup_plank_key')))
inol_df = inol_df.withColumn('fbil_id_prat_pr_attributes', when(col('pvan_id_prat_pr_attributes').isNull(), lit(-1)).otherwise(col('pvan_id_prat_pr_attributes')))
inol_df = inol_df.withColumn('fbil_id_prp_prpp_product', when(col('pvan_id_prpp_prp_product').isNull(), lit(-1)).otherwise(col('pvan_id_prpp_prp_product')))
inol_df = inol_df.withColumn('fbil_id_time_return_date', lit(5373484))
inol_df = inol_df.withColumn('fbil_id_time_sales_order_date', when(col('slor_dt_document_date').isNull(), lit(5373484)).otherwise(to_number(col('slor_dt_document_date').cast('string').substr(1, 8))))
inol_df = inol_df.withColumn('fbil_id_sls_ord_id', when(col('slor_id_sales_order').isNull(), lit(-1)).otherwise(col('slor_id_sales_order')))
inol_df = inol_df.withColumn('fbil_id_sls_ord_pos_id', when(col('sops_id_sales_order_pos').isNull(), lit(-1)).otherwise(col('sops_id_sales_order_pos')))
inol_df = inol_df.withColumn('fbil_id_time_start_billing_dat', when(col('vele_dt_dealer_invoice_date').isNull(), lit(5373484)).otherwise(to_number(col('vele_dt_dealer_invoice_date').cast('string').substr(1, 8))))
inol_df = inol_df.withColumn('fbil_cd_currency', col('inoh_cd_currency_code'))
inol_df = inol_df.withColumn('fbil_id_batch_id', lit(1))
inol_df = inol_df.withColumn('fbil_fl_itc_flg', lit(None))
inol_df = inol_df.withColumn('fbil_id_cust_payee', when(col('inoh_id_cust_customer').isNull(), lit(-1)).otherwise(col('inoh_id_cust_customer')))
inol_df = inol_df.withColumn('fbil_id_cust_billtoparner', when(col('inoh_id_cust_customer').isNull(), lit(-1)).otherwise(col('inoh_id_cust_customer')))
inol_df = inol_df.withColumn('fbil_id_cust_saleschannel', when(col('inoh_id_cust_customer').isNull(), lit(-1)).otherwise(col('inoh_id_cust_customer')))
inol_df = inol_df.withColumn('fbil_id_cust_soldtoparner', when(col('inoh_id_cust_customer').isNull(), lit(-1)).otherwise(col('inoh_id_cust_customer')))
inol_df = inol_df.withColumn('fbil_id_cust_ownership_group', when(col('inoh_id_cust_customer').isNull(), lit(-1)).otherwise(col('inoh_id_cust_customer')))
inol_df = inol_df.withColumn('fbil_id_addr_ownership_group', lit(-2))
inol_df = inol_df.withColumn('fbil_cd_business_area_code', col('inol_cd_business_area_code'))
inol_df = inol_df.withColumn('fbil_cd_codice_resa', col('slor_cd_codice_resa'))
inol_df = inol_df.withColumn('fbil_cd_dlr_code', col('inol_cd_dealer_code'))
inol_df = inol_df.withColumn('fbil_cd_dlr_ord_ref', col('inoh_cd_dealer_order_reference'))
inol_df = inol_df.withColumn('fbil_cd_dlr_ord_tp', col('inol_cd_dealer_order_type'))
inol_df = inol_df.withColumn('fbil_cd_doc_nbr', col('inol_cd_document_number'))
inol_df = inol_df.withColumn('fbil_cd_doc_tp', col('inol_cd_document_type'))
inol_df = inol_df.withColumn('fbil_cd_draft_inv_code', col('inol_cd_draft_number'))
inol_df = inol_df.withColumn('fbil_cd_eng_nbr', col('inol_cd_engine_number'))
inol_df = inol_df.withColumn('fbil_cd_machine_tp', col('inol_cd_machine_type'))
inol_df = inol_df.withColumn('fbil_cd_market_legacy', col('inol_cd_legacy_mkt'))
inol_df = inol_df.withColumn('fbil_cd_price_tyres_1', col('inol_cd_tyres_price_1'))
inol_df = inol_df.withColumn('fbil_cd_price_tyres_2', col('inol_cd_tyres_price_2'))
inol_df = inol_df.withColumn('fbil_cd_price_list', col('inol_cd_price_list'))
inol_df = inol_df.withColumn('fbil_cd_price_tech_tp', col('inol_cd_tech_type_price'))
inol_df = inol_df.withColumn('fbil_cd_product_cl', col('inol_cd_product_class'))
inol_df = inol_df.withColumn('fbil_cd_product_line', col('inol_cd_product_line'))
inol_df = inol_df.withColumn('fbil_cd_product_tp', col('inol_cd_product_type'))
inol_df = inol_df.withColumn('fbil_cd_progressive_ord', col('inol_cd_progressive_order'))
inol_df = inol_df.withColumn('fbil_cd_ref_doc_nbr', col('inol_cd_reference_document_num'))
inol_df = inol_df.withColumn('fbil_cd_serial_nbr', col('inol_cd_serial_number'))
inol_df = inol_df.withColumn('fbil_cd_shipment_progressive', col('inol_cd_shipment_progressive'))
inol_df = inol_df.withColumn('fbil_cd_sls_ord', col('inol_cd_sales_order'))
inol_df = inol_df.withColumn('fbil_cd_source_ord', col('inol_cd_source_order'))
inol_df = inol_df.withColumn('fbil_cd_source_ord_sequence', col('inol_cd_source_order_sequence'))
inol_df = inol_df.withColumn('fbil_cd_std_card_mdl', col('inol_cd_standard_card_model'))
inol_df = inol_df.withColumn('fbil_cd_std_card_tyres', col('inol_cd_standard_card_tyres'))
inol_df = inol_df.withColumn('fbil_cd_std_card_vrs', col('inol_cd_standard_card_version'))
inol_df = inol_df.withColumn('fbil_cd_tech_tp', col('inol_cd_tech_tp'))
inol_df = inol_df.withColumn('fbil_id_time_itc_inv_date', lit(5373484))
inol_df = inol_df.withColumn('fbil_fl_inv_reject_reason', col('inol_fl_invoice_reject_reason'))
inol_df = inol_df.withColumn('fbil_id_time_draft_inv_date', when(col('inol_dt_draft_date').isNull(), lit(5373484)).otherwise(to_number(col('inol_dt_draft_date').cast('string').substr(1, 8))))
inol_df = inol_df.withColumn('fbil_id_coun_country', when(col('inol_cd_mark_std_legacy_mkt').isNull(), lit(-1)).otherwise(col('inol_cd_mark_std_legacy_mkt')))
inol_df = inol_df.withColumn('fbil_cd_source_system', col('inol_cd_source_system'))
inol_df = inol_df.withColumn('fbil_in_wholesale_qty', when(col('inol_cd_document_type').isin('1'), lit(1)).otherwise(lit(0)))
inol_df = inol_df.withColumn('fbil_in_wholesale_net_qty', when(col('inol_cd_document_type').isin('1'), lit(1)).otherwise(lit(0)))
inol_df = inol_df.withColumn('fbil_in_wholesale_net_qty', col('fbil_in_wholesale_net_qty') - when(col('inol_cd_document_type').isin('6'), lit(1)).otherwise(lit(0)))
inol_df = inol_df.withColumn('fbil_id_time_accounting_date', lit(5373484))

# Write to the new table
inol_df.write.mode('overwrite').saveAsTable('ddwh02_sm.twrk_fbil_billing_l_flash')
```

Please note that this PySpark code assumes that the tables `ddwh01_dw.td_inol_invoice_orders_lines`, `ddwh01_dw.tm_vele_vehicle_legacy`, `ddwh01_dw.td_sops_sales_order_position`, `ddwh01_dw.tt_slor_sales_order`, `ddwh01_dw.tt_inoh_invoice_orders_header`, and `tdim_pvan_vehicle` exist in your Spark environment and are accessible.