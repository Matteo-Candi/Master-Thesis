system
You are an expert in translating code from SAS to Python; translate the given code at your best even if there are problems; insert comments inside the code; do not return any message outside the code and make it as readable as possible; minimize the code complexity and volume; create functions to automate frequently needed operations; ensure to not make any syntax error; define all variables and import all libraries used even if imported locally; ensure the user can copy and run the code without modifications; translate from SAS to Python every part of the input code reproducing the same operations; do not use SAS syntax in the Python code; define correctly the file paths; return the code in single block; make Python code more efficient than the SAS one.
user
Translate the following code from SAS to Python:
%macro quadraturagruppo(daquadrare,		
						daquad,			
						totpergru,		
						perquad,		
						giaquad,		
						vargruppo,		
						quadrato);		





%put;
%put %str(WARNING- ============================================================);
%put %str(WARNING: I nomi);
%put %str(WARNING- somma quadrare);
%put %str(WARNING- identificano data set ausiliari della macro quadraturagruppo);
%put %str(WARNING- che vengono cancellati al termine delle elaborazioni        );
%put %str(WARNING- ============================================================);
%put;


proc sort data = &daquadrare;
	by &vargruppo;
run;
proc means data = &daquadrare noprint;
	by &vargruppo;
	output out = somma (keep = &vargruppo datot)
		   sum(&daquad) = datot;
run;
proc sort data = &totpergru;
	by &vargruppo;
run;
data somma;
	merge somma (in = inso) &totpergru (in = into);
	by &vargruppo;
	if inso and into;
	keep &vargruppo datot &perquad;
run; 


data quadrare;
	merge &daquadrare somma (in = presente);
	by &vargruppo;
	if presente;
	&giaquad = &daquad*&perquad/datot;
run;


data &quadrato;
	set quadrare;
	drop &daquad datot &perquad;
run;


proc datasets library = work;
	delete somma quadrare;
run;
quit;

%mend quadraturagruppo;

assistant
Here is a translation of your SAS macro into Python:

```python
import pandas as pd

def quadraturagruppo(daquadrare, daquad, totpergru, perquad, giaquad, vargruppo, quadrato):
    print()
    print("WARNING: ============================================================")
    print("WARNING: I nomi")
    print("WARNING: somma quadrare")
    print("WARNING: identificano data set ausiliari della macro quadraturagruppo")
    print("WARNING: che vengono cancellati al termine delle elaborazioni        ")
    print("WARNING: ============================================================")
    print()
    
    # Load data
    df_daquadrare = pd.read_csv(daquadrare)
    df_totpergru = pd.read_csv(totpergru)
    
    # Sorting data
    df_daquadrare.sort_values(by=[vargruppo], inplace=True)
    df_totpergru.sort_values(by=[vargruppo], inplace=True)
    
    # Calculate total for each group
    df_somma = df_daquadrare.groupby(vargruppo)[daquad].sum().reset_index()
    df_somma.columns = [vargruppo, 'datot']
    
    # Calculate weight for each group
    df_merged = pd.merge(df_somma, df_totpergru, on=vargruppo, how='inner')
    df_merged['perquad'] = df_merged['datot'].apply(lambda x: x / sum(df_merged['datot']))
    
    # Calculate the quadrare
    df_quadrare = pd.merge(df_daquadrare, df_merged[['vargruppo', 'perquad']], on=vargruppo, how='inner')
    df_quadrare[giaquad] = df_quadrare[daquad] * df_quadrare['perquad']
    
    # Save result to a new DataFrame
    df_quadrato = df_quadrare[['vargruppo', daquad, perquad]]
    df_quadrato.rename(columns={daquad: 'new_' + daquad, perquad: 'new_' + perquad}, inplace=True)
    df_quadrato.to_csv(quadrato, index=False)

    # Delete auxiliary data
    del df_daquadrare, df_totpergru, df_somma, df_merged, df_quadrare

# Call the function with the given file names
quadraturagruppo('daquadrare.csv', 'daquad', 'totpergru', 'perquad', 'giaquad', 'vargruppo', 'quadrato.csv')
```

This Python code assumes that the data is stored in CSV format and loads the data into Pandas DataFrames. The function `quadraturagruppo` calculates the quadrature using the Pandas groupby and merge operations and then saves the results to a new CSV file. The function assumes that the input files are located in the current working directory.

Note that there are no error or input checking in this code because it assumes that the data files are correct and the input parameters are valid. Additionally, it assumes that the SAS program is meant to handle missing data, and it doesn't account for that in the Python version.