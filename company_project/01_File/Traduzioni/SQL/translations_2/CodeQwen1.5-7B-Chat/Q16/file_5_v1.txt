system
You are an expert in translating code from SQL to PySpark error-free, maintaining all functionality; the code is commented but not exaplined; do not use spark.sql() function and define properly columns; PySpark code is more efficient than SQL one while keeping it readable and concise.
user
Translate the following code from SQL to PySpark:
INSERT INTO ddwh02_sm.twrk_fbil_billing_l_flash fbil (fbil_id_comp_company, fbil_cd_accg_doc_code, fbil_nr_accg_doc_fiscal_year, fbil_cd_cmm_doc_code, fbil_cd_cmm_doc_pos_code, fbil_id_pvan_vcl, fbil_cd_sls_ord_code, fbil_cd_sls_ord_pos_code, fbil_id_cmm_doc_id, fbil_id_cmm_doc_pos_id, fbil_id_bdty_billing_doc_tp, fbil_id_time_cmm_doc_date, fbil_id_cust_payer, fbil_id_cust_sold, fbil_id_cuty_customer_type, fbil_id_divi_division, fbil_id_hmup_hmu_product, fbil_id_prat_pr_attributes, fbil_id_prp_prpp_product, fbil_id_time_return_date, fbil_id_time_sales_order_date, fbil_id_sls_ord_id, fbil_id_sls_ord_pos_id, fbil_id_time_start_billing_dat, fbil_cd_currency, fbil_id_batch_id, fbil_fl_itc_flg, fbil_id_cust_payee, fbil_id_cust_billtoparner, fbil_id_cust_saleschannel, fbil_id_cust_soldtoparner, fbil_id_cust_ownership_group, fbil_id_addr_ownership_group, fbil_cd_business_area_code, fbil_cd_codice_resa, fbil_cd_dlr_code, fbil_cd_dlr_ord_ref, fbil_cd_dlr_ord_tp, fbil_cd_doc_nbr, fbil_cd_doc_tp, fbil_cd_draft_inv_code, fbil_cd_eng_nbr, fbil_cd_machine_tp, fbil_cd_market_legacy, fbil_cd_price_tyres_1, fbil_cd_price_tyres_2, fbil_cd_price_list, fbil_cd_price_tech_tp, fbil_cd_product_cl, fbil_cd_product_line, fbil_cd_product_tp, fbil_cd_progressive_ord, fbil_cd_ref_doc_nbr, fbil_cd_serial_nbr, fbil_cd_shipment_progressive, fbil_cd_sls_ord, fbil_cd_source_ord, fbil_cd_source_ord_sequence, fbil_cd_std_card_mdl, fbil_cd_std_card_tyres, fbil_cd_std_card_vrs, fbil_cd_tech_tp, fbil_id_time_itc_inv_date, fbil_fl_inv_reject_reason, fbil_id_time_draft_inv_date, fbil_id_coun_country, fbil_cd_source_system, fbil_in_wholesale_qty, fbil_in_wholesale_net_qty, fbil_in_wholesale_rev_qty, fbil_id_time_accounting_date)
SELECT -1 AS fbil_id_comp_company,
       '-1' AS fbil_cd_accg_doc_code,
       to_number (TO_CHAR (inol.inol_dt_document_date, 'YYYY')) AS fbil_nr_accg_doc_fiscal_year,
       inol.inol_cd_document_number AS fbil_cd_cmm_doc_code,
       inol.inol_cd_progressive_order AS fbil_cd_cmm_doc_pos_code,
       NVL (inol.inol_id_vele_vcl_legacy,
            -1) AS fbil_id_pvan_vcl,
           inol.inol_cd_sales_order AS fbil_cd_sls_ord_code,
           inol.inol_cd_progressive_order AS fbil_cd_sls_ord_pos_code,
           NVL (inol.inol_id_inoh_invoice_orders_he,
                -1) AS fbil_id_cmm_doc_id,
               NVL (inol.inol_id_invoice_orders_lines,
                    -1) AS fbil_id_cmm_doc_pos_id,
                   inol_cd_document_type AS fbil_id_bdty_billing_doc_tp,
                   NVL (to_number (TO_CHAR (inol.inol_dt_document_date, 'J')),
                        5373484) AS fbil_id_time_cmm_doc_date,
                       NVL (inol.inol_id_cust_customer,
                            -1) AS fbil_id_cust_payer,
                           NVL (inol.inol_id_cust_customer,
                                -1) AS fbil_id_cust_sold,
                               -2 AS fbil_id_cuty_customer_type,
                               NVL (vele.vele_id_ledi_legacy_division,
                                    -1) AS fbil_id_divi_division,
                                   NVL (vele.vele_id_hmup_plank_key,
                                        -1) AS fbil_id_hmup_hmu_product,
                                       NVL (tdim_pvan.pvan_id_prat_pr_attributes,
                                            -1) AS fbil_id_prat_pr_attributes,
                                           NVL (tdim_pvan.pvan_id_prpp_prp_product,
                                                -1) AS fbil_id_prp_prpp_product,
                                               5373484 AS fbil_id_time_return_date,
                                               NVL (to_number (TO_CHAR (slor.slor_dt_document_date, 'J')),
                                                    5373484) AS fbil_id_time_sales_order_date,
                                                   NVL (slor.slor_id_sales_order,
                                                        -1) AS fbil_id_sls_ord_id,
                                                       NVL (sops.sops_id_sales_order_pos,
                                                            -1) AS fbil_id_sls_ord_pos_id,
                                                           NVL (to_number (TO_CHAR (vele.vele_dt_dealer_invoice_date, 'J')),
                                                                5373484) AS fbil_id_time_start_billing_dat,
                                                               inoh.inoh_cd_currency_code AS fbil_cd_currency,
                                                               1 AS fbil_id_batch_id,
                                                               NULL AS fbil_fl_itc_flg,
                                                               NVL (inoh.inoh_id_cust_customer,
                                                                    -1) AS fbil_id_cust_payee,
                                                                   NVL (inoh.inoh_id_cust_customer,
                                                                        -1) AS fbil_id_cust_billtoparner,
                                                                       NVL (inoh.inoh_id_cust_customer,
                                                                            -1) AS fbil_id_cust_saleschannel,
                                                                           NVL (inoh.inoh_id_cust_customer,
                                                                                -1) AS fbil_id_cust_soldtoparner,
                                                                               NVL (inoh.inoh_id_cust_customer,
                                                                                    -1) AS fbil_id_cust_ownership_group,
                                                                                   -2 AS fbil_id_addr_ownership_group,
                                                                                   inol.inol_cd_business_area_code AS fbil_cd_business_area_code,
                                                                                   slor.slor_cd_codice_resa AS fbil_cd_codice_resa,
                                                                                   inol.inol_cd_dealer_code AS fbil_cd_dlr_code,
                                                                                   inoh.inoh_cd_dealer_order_reference AS fbil_cd_dlr_ord_ref,
                                                                                   inol.inol_cd_dealer_order_type AS fbil_cd_dlr_ord_tp,
                                                                                   inol.inol_cd_document_number AS fbil_cd_doc_nbr,
                                                                                   inol.inol_cd_document_type AS fbil_cd_doc_tp,
                                                                                   inol.inol_cd_draft_number AS fbil_cd_draft_inv_code,
                                                                                   inol.inol_cd_engine_number AS fbil_cd_eng_nbr,
                                                                                   inol.inol_cd_machine_type AS fbil_cd_machine_tp,
                                                                                   inol.inol_cd_legacy_mkt AS fbil_cd_market_legacy,
                                                                                   inol.inol_cd_tyres_price_1 AS fbil_cd_price_tyres_1,
                                                                                   inol.inol_cd_tyres_price_2 AS fbil_cd_price_tyres_2,
                                                                                   inol.inol_cd_price_list AS fbil_cd_price_list,
                                                                                   inol.inol_cd_tech_type_price AS fbil_cd_price_tech_tp,
                                                                                   inol.inol_cd_product_class AS fbil_cd_product_cl,
                                                                                   inol.inol_cd_product_line AS fbil_cd_product_line,
                                                                                   inol.inol_cd_product_type AS fbil_cd_product_tp,
                                                                                   inol.inol_cd_progressive_order AS fbil_cd_progressive_ord,
                                                                                   inol.inol_cd_reference_document_num AS fbil_cd_ref_doc_nbr,
                                                                                   inol.inol_cd_serial_number AS fbil_cd_serial_nbr,
                                                                                   inol.inol_cd_shipment_progressive AS fbil_cd_shipment_progressive,
                                                                                   inol.inol_cd_sales_order AS fbil_cd_sls_ord,
                                                                                   inol.inol_cd_source_order AS fbil_cd_source_ord,
                                                                                   inol.inol_cd_source_order_sequence AS fbil_cd_source_ord_sequence,
                                                                                   inol.inol_cd_standard_card_model AS fbil_cd_std_card_mdl,
                                                                                   inol.inol_cd_standard_card_tyres AS fbil_cd_std_card_tyres,
                                                                                   inol.inol_cd_standard_card_version AS fbil_cd_std_card_vrs,
                                                                                   inol.inol_cd_tech_tp AS fbil_cd_tech_tp,
                                                                                   5373484 AS fbil_id_time_itc_inv_date,
                                                                                   inol.inol_fl_invoice_reject_reason AS fbil_fl_inv_reject_reason,
                                                                                   NVL (to_number (TO_CHAR (inol.inol_dt_draft_date, 'J')),
                                                                                        5373484) AS fbil_id_time_draft_inv_date,
                                                                                       NVL (inol.inol_id_mark_std_legacy_mkt,
                                                                                            -1) AS fbil_id_coun_country,
                                                                                           inol.inol_cd_source_system AS fbil_cd_source_system,
                                                                                           CASE
                                                                                               WHEN inol.inol_cd_document_type IN ('1') THEN 1
                                                                                               ELSE 0
                                                                                           END AS fbil_in_wholesale_qty,
                                                                                           CASE
                                                                                               WHEN inol.inol_cd_document_type IN ('1') THEN 1
                                                                                               ELSE 0
                                                                                           END - CASE
                                                                                                     WHEN inol.inol_cd_document_type IN ('6') THEN 1
                                                                                                     ELSE 0
                                                                                                 END AS fbil_in_wholesale_net_qty,
                                                                                                 CASE WHEN inol.inol_cd_document_type IN ('6') th
FROM ddwh01_dw.td_inol_invoice_orders_lines inol
INNER JOIN ddwh02_dim.twrk_pvan_delta_flash_leg delta ON delta.vele_id_vehicle_legacy_id_pk = inol.inol_id_vele_vcl_legacy
INNER JOIN ddwh01_dw.tm_vele_vehicle_legacy vele ON vele.vele_id_vehicle_legacy_id_pk = inol.inol_id_vele_vcl_legacy
LEFT
    OUTER JOIN
  (SELECT *
   FROM
     (SELECT s.*,
             MAX (s.sops_id_sales_order_pos) OVER (PARTITION BY s.sops_cd_sales_order,
                                                                s.sops_cd_legacy_mkt,
                                                                s.sops_cd_dealer_code,
                                                                s.sops_cd_source_order,
                                                                s.sops_cd_source_order_sequence,
                                                                s.sops_cd_source_system,
                                                                s.sops_cd_product_line,
                                                                s.sops_id_vele_vcl_legacy) AS max_id_sops
      FROM ddwh01_dw.td_sops_sales_order_position s
      WHERE sops_cd_source_system not like '%SAP%')
   WHERE sops_id_sales_order_pos = max_id_sops) sops ON inol.inol_cd_sales_order = sops.sops_cd_sales_order
AND inol.inol_cd_legacy_mkt = sops.sops_cd_legacy_mkt
AND inol.inol_cd_dealer_code = sops.sops_cd_dealer_code
AND inol.inol_cd_source_order = sops.sops_cd_source_order
AND inol.inol_cd_source_order_sequence = sops.sops_cd_source_order_sequence
AND inol.inol_cd_source_system = sops.sops_cd_source_system
AND inol.inol_cd_product_line = sops.sops_cd_product_line
AND inol.inol_id_vele_vcl_legacy = sops.sops_id_vele_vcl_legacy
LEFT
    OUTER JOIN ddwh01_dw.tt_slor_sales_order slor ON sops.sops_id_slor_sales_order = slor.slor_id_sales_order
LEFT
    OUTER JOIN ddwh01_dw.tt_inoh_invoice_orders_header inoh ON inoh.inoh_id_invoice_orders_header = inol.inol_id_inoh_invoice_orders_he
LEFT
    OUTER JOIN tdim_pvan_vehicle tdim_pvan ON tdim_pvan.pvan_id_vcl = inol.inol_id_vele_vcl_legacy
WHERE inol.inol_fl_delete_line IS NULL ;
assistant
Here is the equivalent PySpark code:

```python
from pyspark.sql import functions as F

# Assuming that the dataframes inol, vele, sops, slor, inoh and tdim_pvan are already created and loaded into PySpark

# Performing the join operations
df_inol = df_inol.join(delta, df_inol.inol_id_vele_vcl_legacy == delta.vele_id_vehicle_legacy_id_pk, 'left')
df_inol = df_inol.join(vele, df_inol.inol_id_vele_vcl_legacy == vele.vele_id_vehicle_legacy_id_pk, 'left')

# Creating a subquery to get the max_id_sops
sops_subquery = (df_sops
                 .groupBy("sops_cd_sales_order", "sops_cd_legacy_mkt", "sops_cd_dealer_code", "sops_cd_source_order", "sops_cd_source_order_sequence", "sops_cd_source_system", "sops_cd_product_line", "sops_id_vele_vcl_legacy")
                 .agg(F.max("sops_id_sales_order_pos").alias("max_id_sops"))
                 .withColumn("rnk", F.row_number().over(Window.partitionBy("sops_cd_sales_order", "sops_cd_legacy_mkt", "sops_cd_dealer_code", "sops_cd_source_order", "sops_cd_source_order_sequence", "sops_cd_source_system", "sops_cd_product_line", "sops_id_vele_vcl_legacy").orderBy(F.desc("max_id_sops"))))

# Joining with the subquery
df_inol = df_inol.join(sops_subquery.filter(sops_subquery.rnk == 1), ["sops_cd_sales_order", "sops_cd_legacy_mkt", "sops_cd_dealer_code", "sops_cd_source_order", "sops_cd_source_order_sequence", "sops_cd_source_system", "sops_cd_product_line", "sops_id_vele_vcl_legacy"], 'left')

# Joining with other tables
df_inol = df_inol.join(slor, df_inol.sops_id_slor_sales_order == slor.slor_id_sales_order, 'left')
df_inol = df_inol.join(inoh, df_inol.inoh_id_invoice_orders_header == df_inol.inol_id_inoh_invoice_orders_he, 'left')
df_inol = df_inol.join(tdim_pvan, df_inol.inol_id_vele_vcl_legacy == tdim_pvan.pvan_id_vcl, 'left')

# Applying the conditions
df_inol = df_inol.filter(df_inol.inol_fl_delete_line.isNull())

# Creating the final DataFrame
final_df = df_inol.select(
    -1,
    '-1',
    F.to_number(F.to_char(df_inol.inol_dt_document_date, 'YYYY')).alias('fbil_nr_accg_doc_fiscal_year'),
    df_inol.inol_cd_document_number.alias('fbil_cd_cmm_doc_code'),
    df_inol.inol_cd_progressive_order.alias('fbil_cd_cmm_doc_pos_code'),
    F.coalesce(df_inol.inol_id_vele_vcl_legacy, -1).alias('fbil_id_pvan_vcl'),
    df_inol.inol_cd_sales_order.alias('fbil_cd_sls_ord_code'),
    df_inol.inol_cd_progressive_order.alias('fbil_cd_sls_ord_pos_code'),
    F.coalesce(df_inol.inol_id_inoh_invoice_orders_he, -1).alias('fbil_id_cmm_doc_id'),
    F.coalesce(df_inol.inol_id_invoice_orders_lines, -1).alias('fbil_id_cmm_doc_pos_id'),
    df_inol.inol_cd_document_type.alias('fbil_id_bdty_billing_doc_tp'),
    F.coalesce(F.to_number(F.to_char(df_inol.inol_dt_document_date, 'J')), 5373484).alias('fbil_id_time_cmm_doc_date'),
    F.coalesce(df_inol.inol_id_cust_customer, -1).alias('fbil_id_cust_payer'),
    F.coalesce(df_inol.inol_id_cust_customer, -1).alias('fbil_id_cust_sold'),
    -2.alias('fbil_id_cuty_customer_type'),
    F.coalesce(vele.vele_id_ledi_legacy_division, -1).alias('fbil_id_divi_division'),
    F.coalesce(vele.vele_id_hmup_plank_key, -1).alias('fbil_id_hmup_hmu_product'),
    F.coalesce(tdim_pvan.pvan_id_prat_pr_attributes, -1).alias('fbil_id_prat_pr_attributes'),
    F.coalesce(tdim_pvan.pvan_id_prpp_prp_product, -1).alias('fbil_id_prp_prpp_product'),
    5373484.alias('fbil_id_time_return_date'),
    F.coalesce(F.to_number(F.to_char(slor.slor_dt_document_date, 'J')), 5373484).alias('fbil_id_time_sales_order_date'),
    F.coalesce(slor.slor_id_sales_order, -1).alias('fbil_id_sls_ord_id'),
    F.coalesce(sops.sops_id_sales_order_pos, -1).alias('fbil_id_sls_ord_pos_id'),
    F.coalesce(F.to_number(F.to_char(vele.vele_dt_dealer_invoice_date, 'J')), 5373484).alias('fbil_id_time_start_billing_dat'),
    inoh.inoh_cd_currency_code.alias('fbil_cd_currency'),
    1.alias('fbil_id_batch_id'),
    None.alias('fbil_fl_itc_flg'),
    F.coalesce(inoh.inoh_id_cust_customer, -1).alias('fbil_id_cust_payee'),
    F.coalesce(inoh.inoh_id_cust_customer, -1).alias('fbil_id_cust_billtoparner'),
    F.coalesce(inoh.inoh_id_cust_customer, -1).alias('fbil_id_cust_saleschannel'),
    F.coalesce(inoh.inoh_id_cust_customer, -1).alias('fbil_id_cust_soldtoparner'),
    F.coalesce(inoh.inoh_id_cust_customer, -1).alias('fbil_id_cust_ownership_group'),
    -2.alias('fbil_id_addr_ownership_group'),
    df_inol.inol_cd_business_area_code.alias('fbil_cd_business_area_code'),
    slor.slor_cd_codice_resa.alias('fbil_cd_codice_resa'),
    df_inol.inol_cd_dealer_code.alias('fbil_cd_dlr_code'),
    inoh.inoh_cd_dealer_order_reference.alias('fbil_cd_dlr_ord_ref'),
    df_inol.inol_cd_dealer_order_type.alias('fbil_cd_dlr_ord_tp'),
    df_inol.inol_cd_document_number.alias('fbil_cd_doc_nbr'),
    df_inol.inol_cd_document_type.alias('fbil_cd_doc_tp'),
    df_inol.inol_cd_draft_number.alias('fbil_cd_draft_inv_code'),
    df_inol.inol_cd_engine_number.alias('fbil_cd_eng_nbr'),
    df_inol.inol_cd_machine_type.alias('fbil_cd_machine_tp'),
    df_inol.inol_cd_legacy_mkt.alias('fbil_cd_market_legacy'),
    df_inol.inol_cd_tyres_price_1.alias('fbil_cd_price_tyres_1'),
    df_inol.inol_cd_tyres_price_2.alias('fbil_cd_price_tyres_2'),
    df_inol.inol_cd_price_list.alias('fbil_cd_price_list'),
    df_inol.inol_cd_tech_type_price.alias('fbil_cd_price_tech_tp'),
    df_inol.inol_cd_product_class.alias('fbil_cd_product_cl'),
    df_inol.inol_cd_product_line.alias('fbil_cd_product_line'),
    df_inol.inol_cd_product_type.alias('fbil_cd_product_tp'),
    df_inol.inol_cd_progressive_order.alias('fbil_cd_progressive_ord'),
    df_inol.inol_cd_reference_document_num.alias('fbil_cd_ref_doc_nbr'),
    df_inol.inol_cd_serial_number.alias('fbil_cd_serial_nbr'),
    df_inol.inol_cd_shipment_progressive.alias('fbil_cd_shipment_progressive'),
    df_inol.inol_cd_sales_order.alias('fbil_cd_sls_ord'),
    df_inol.inol_cd_source_order.alias('fbil_cd_source_ord'),
    df_inol.inol_cd_source_order_sequence.alias('fbil_cd_source_ord_sequence'),
    df_inol.inol_cd_standard_card_model.alias('fbil_cd_std_card_mdl'),
    df_inol.inol_cd_standard_card_tyres.alias('fbil_cd_std_card_tyres'),
    df_inol.inol_cd_standard_card_version.alias('fbil_cd_std_card_vrs'),
    df_inol.inol_cd_tech_tp.alias('fbil_cd_tech_tp'),
    5373484.alias('fbil_id_time_itc_inv_date'),
    df_inol.inol_fl_invoice_reject_reason.alias('fbil_fl_inv_reject_reason'),
    F.coalesce(F.to_number(F.to_char(df_inol.inol_dt_draft_date, 'J')), 5373484).alias('fbil_id_time_draft_inv_date'),
    F.coalesce(df_inol.inol_id_mark_std_legacy_mkt, -1).alias('fbil_id_coun_country'),
    df_inol.inol_cd_source_system.alias('fbil_cd_source_system'),
    F.when(df_inol.inol_cd_document_type == '1', 1).otherwise(0).alias('fbil_in_wholesale_qty'),
    F.when(df_inol.inol_cd_document_type == '1', 1).otherwise(0).alias('fbil_in_wholesale_net_qty') - F.when(df_inol.inol_cd_document_type == '6', 1).otherwise(0).alias('fbil_in_wholesale_rev_qty'),
    F.to_number(F.to_char(df_inol.inol_dt_accounting_date, 'J')).alias('fbil_id_time_accounting_date')
)

# Writing the final DataFrame to the table
final_df.write.insertInto('ddwh02_sm.twrk_fbil_billing_l_flash', overwrite=True)
```

Please replace `df_inol`, `vele`, `sops`, `slor`, `inoh` and `tdim_pvan` with your actual DataFrames.

This code assumes that you have already created and loaded the DataFrames `df_inol`, `vele`, `sops`, `slor`, `inoh` and `tdim_pvan` into PySpark. The code performs the same operations as the SQL query, but in a more efficient and PySpark-friendly manner.