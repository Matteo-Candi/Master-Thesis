system
You are an expert in translating code from SQL to PySpark; translate the given SQL code to PySpark as best as you can, even if there are problems; insert comments inside the code; do not add any other documentation or explanation outside the code; make the code as readable as possible; minimize its complexity and volume by reducing the number of independent paths, operators, and operands; do not make any mistakes; all the variables have to be defined; ensure the user can copy and run the code without modifications; translate from SQL to PySpark every file provided.
user
Translate the following code from SQL to PySpark:
CREATE OR REPLACE
FORCE EDITIONABLE VIEW "DDWH02_SM"."VW_EKPO_PURCH_DOC_ITEM_AGCE" ("EKPO_ID_PURCH_DOC_ITEM_GPP",
                                                                  "EKPO_DT_LAST_MODIFY",
                                                                  "EKPO_ID_EKKO_PURCH_DOC_HEADER",
                                                                  "EKPO_CD_CONCAT_EBELN_EBELP",
                                                                  "EKPO_CD_PLANT",
                                                                  "EKPO_CD_PO_NBR",
                                                                  "EKPO_NR_ITEM_NBR_PO",
                                                                  "EKPO_NR_TARGET_QUANTITY",
                                                                  "EKPO_NR_FIRST_LEAD_TIME",
                                                                  "EKPO_NR_MIN_FABR_QTY",
                                                                  "EKPO_NR_MIN_FABR_QTY_UNIT",
                                                                  "EKPO_NR_STAND_PO_QUANTITY",
                                                                  "EKPO_NR_STAND_PO_QTY_UNIT",
                                                                  "EKPO_NR_TCE_AMOUNT",
                                                                  "EKPO_NR_TCE_AMOUNT_CUR",
                                                                  "EKPO_NR_TOOLING_ESTIMATE",
                                                                  "EKPO_NR_TOOLING_ESTIMATE_CUR",
                                                                  "EKPO_NR_NET_PRICE_PO",
                                                                  "EKPO_NR_NET_ORDER_VALUE",
                                                                  "EKPO_CD_MATERIAL_GRP",
                                                                  "EKPO_CD_MATERIAL_NBR",
                                                                  "EKPO_CD_PO_UNIT_OF_MEASURE",
                                                                  "EKPO_CD_REVISION_LVL",
                                                                  "EKPO_CD_QUOTA_ARRANGEMENT",
                                                                  "EKPO_CD_MADE_IN_COUNTRY_1",
                                                                  "EKPO_CD_PROGRAM_ID",
                                                                  "EKPO_FL_DELETION_PO",
                                                                  "EKPO_CD_PRINC_PURCH_AGREEMT",
                                                                  "EKPO_NR_ITEM_PURCH_AGREEMENT",
                                                                  "EKPO_CD_MATERIAL_NBR_VENDOR",
                                                                  "EKPO_NR_PRICE_UNIT",
                                                                  "EKPO_CD_SHORT_TEXT",
                                                                  "EKPO_DT_STARTING_DT",
                                                                  "EKPO_NR_DEPTH_MM",
                                                                  "EKPO_DT_END_DT",
                                                                  "EKPO_NR_HEIGHT_MM",
                                                                  "EKPO_CD_INDICE_CONTO_LAVORO",
                                                                  "EKPO_CD_IN_PAIR_MATERIAL_1",
                                                                  "EKPO_CD_IN_PAIR_MATERIAL_2",
                                                                  "EKPO_CD_IN_PAIR_MATERIAL_3",
                                                                  "EKPO_CD_IN_PAIR_MATERIAL_4",
                                                                  "EKPO_CD_IN_PAIR_MATERIAL_5",
                                                                  "EKPO_CD_IN_PAIR_MATERIAL_6",
                                                                  "EKPO_FL_IN_PAIR_WITH",
                                                                  "EKPO_NR_MIN_ORDER_QTY",
                                                                  "EKPO_FL_OVERSEAS",
                                                                  "EKPO_FL_WMF_FLAG",
                                                                  "EKPO_NR_PACKAGING_UNIT_MOQ",
                                                                  "EKPO_NR_PACK_WEIGHT_KG",
                                                                  "EKPO_CD_PACK_TYPE",
                                                                  "EKPO_CD_PPAP_STATUS",
                                                                  "EKPO_NR_PROCUR_MULTI",
                                                                  "EKPO_NR_PROCUR_MULTI_UNIT",
                                                                  "EKPO_CD_REVISION_LVL_2",
                                                                  "EKPO_NR_SAMPLE_LEAD_TIME",
                                                                  "EKPO_FL_STACKABLE",
                                                                  "EKPO_CD_TIPO_CONTO_LAVORO",
                                                                  "EKPO_CD_TYRE_BRAND",
                                                                  "EKPO_CD_TYRE_SIZE",
                                                                  "EKPO_FL_VPI_INDICATOR",
                                                                  "EKPO_NR_WIDTH_MM",
                                                                  "EKPO_CD_MADE_IN_COUNTRY_2",
                                                                  "EKPO_CD_MADE_IN_COUNTRY_3",
                                                                  "EKPO_CD_MADE_IN_COUNTRY_4",
                                                                  "EKPO_CD_MADE_IN_COUNTRY_5",
                                                                  "EKPO_CD_TYRE_SPECIFICATION",
                                                                  "EKPO_CD_TYRE_TYPE",
                                                                  "EKPO_NR_PO_QUANTITY",
                                                                  "EKPO_CD_REASON_CODE",
                                                                  "EKPO_CD_COMPANY_CODE",
                                                                  "EKPO_CD_ITEM_CATEG_PO",
                                                                  "EKPO_NR_PURCH_DOC_YEAR",
                                                                  "EKPO_CD_PURCH_DOCTYPE",
                                                                  "EKPO_CD_WPS_PREFIX",
                                                                  "EKPO_CD_PURCH_DOC_NBR_R3_GPP",
                                                                  "EKPO_CD_MATERIAL_MFG",
                                                                  "EKPO_DS_PLANT_SEGMENT",
                                                                  "PLBR_DS_PLANT_SEGMENT",
                                                                  "ODAG_PARTNUMBER",
                                                                  "ODAG_PROGRAM",
                                                                  "EKPO_DT_RETENTION_YEAR",
                                                                  "ODAG_PODOCUMENT",
                                                                  "EKPO_NR_NET_WEIGHT",
                                                                  "EKPO_NR_GROSS_WEIGHT",
                                                                  "EKPO_CD_UNIT_OF_WEIGHT",
                                                                  "EKPO_CD_PLANT_R3_STC",
                                                                  "EKPO_CD_PO_NBR10",
                                                                  "EKPO_NR_ITEM_NBR_PO5",
                                                                  "EKPO_CD_MATERIAL_NBR_TRIM",
                                                                  "EKPO_CD_MATERIAL_MFG_TRIM",
                                                                  "EKPO_CD_PURCH_DOC_NBR_R3_GPP10",
                                                                  "EKPO_KEY_STC") AS
SELECT EKPO_ID_PURCH_DOC_ITEM_GPP,
       EKPO_DT_LAST_MODIFY,
       EKPO_ID_EKKO_PURCH_DOC_HEADER,
       EKPO_CD_CONCAT_EBELN_EBELP,
       EKPO_CD_PLANT,
       EKPO_CD_PO_NBR,
       EKPO_NR_ITEM_NBR_PO,
       EKPO_NR_TARGET_QUANTITY,
       EKPO_NR_FIRST_LEAD_TIME,
       EKPO_NR_MIN_FABR_QTY,
       EKPO_NR_MIN_FABR_QTY_UNIT,
       EKPO_NR_STAND_PO_QUANTITY,
       EKPO_NR_STAND_PO_QTY_UNIT,
       EKPO_NR_TCE_AMOUNT,
       EKPO_NR_TCE_AMOUNT_CUR,
       EKPO_NR_TOOLING_ESTIMATE,
       EKPO_NR_TOOLING_ESTIMATE_CUR,
       EKPO_NR_NET_PRICE_PO,
       EKPO_NR_NET_ORDER_VALUE,
       EKPO_CD_MATERIAL_GRP,
       EKPO_CD_MATERIAL_NBR,
       EKPO_CD_PO_UNIT_OF_MEASURE,
       EKPO_CD_REVISION_LVL,
       EKPO_CD_QUOTA_ARRANGEMENT,
       EKPO_CD_MADE_IN_COUNTRY_1,
       EKPO_CD_PROGRAM_ID,
       EKPO_FL_DELETION_PO,
       EKPO_CD_PRINC_PURCH_AGREEMT,
       EKPO_NR_ITEM_PURCH_AGREEMENT,
       EKPO_CD_MATERIAL_NBR_VENDOR,
       EKPO_NR_PRICE_UNIT,
       EKPO_CD_SHORT_TEXT,
       EKPO_DT_STARTING_DT,
       EKPO_NR_DEPTH_MM,
       EKPO_DT_END_DT,
       EKPO_NR_HEIGHT_MM,
       EKPO_CD_INDICE_CONTO_LAVORO,
       EKPO_CD_IN_PAIR_MATERIAL_1,
       EKPO_CD_IN_PAIR_MATERIAL_2,
       EKPO_CD_IN_PAIR_MATERIAL_3,
       EKPO_CD_IN_PAIR_MATERIAL_4,
       EKPO_CD_IN_PAIR_MATERIAL_5,
       EKPO_CD_IN_PAIR_MATERIAL_6,
       EKPO_FL_IN_PAIR_WITH,
       EKPO_NR_MIN_ORDER_QTY,
       EKPO_FL_OVERSEAS,
       EKPO_FL_WMF_FLAG,
       EKPO_NR_PACKAGING_UNIT_MOQ,
       EKPO_NR_PACK_WEIGHT_KG,
       EKPO_CD_PACK_TYPE,
       EKPO_CD_PPAP_STATUS,
       EKPO_NR_PROCUR_MULTI,
       EKPO_NR_PROCUR_MULTI_UNIT,
       EKPO_CD_REVISION_LVL_2,
       EKPO_NR_SAMPLE_LEAD_TIME,
       EKPO_FL_STACKABLE,
       EKPO_CD_TIPO_CONTO_LAVORO,
       EKPO_CD_TYRE_BRAND,
       EKPO_CD_TYRE_SIZE,
       EKPO_FL_VPI_INDICATOR,
       EKPO_NR_WIDTH_MM,
       EKPO_CD_MADE_IN_COUNTRY_2,
       EKPO_CD_MADE_IN_COUNTRY_3,
       EKPO_CD_MADE_IN_COUNTRY_4,
       EKPO_CD_MADE_IN_COUNTRY_5,
       EKPO_CD_TYRE_SPECIFICATION,
       EKPO_CD_TYRE_TYPE,
       EKPO_NR_PO_QUANTITY,
       EKPO_CD_REASON_CODE,
       EKPO_CD_COMPANY_CODE,
       EKPO_CD_ITEM_CATEG_PO,
       TO_NUMBER(TO_CHAR(EKKO_DT_PURCH_DOC_DATE, 'YYYY')) AS EKPO_NR_PURCH_DOC_YEAR,
       EKPO_CD_PURCH_DOCTYPE,
       EKPO_CD_WPS_PREFIX,
       CASE
           WHEN EKPO_CD_PURCH_DOC_NBR_R3_GPP = '-1' THEN EKPO_CD_PO_NBR
           ELSE EKPO_CD_PURCH_DOC_NBR_R3_GPP
       END AS EKPO_CD_PURCH_DOC_NBR_R3_GPP,
       CASE
           WHEN EKPO_CD_PLANT IN ('CR01',
                                  'TY01',
                                  'CX01') THEN EKPO_CD_WPS_PREFIX || EKPO_CD_MATERIAL_MFG
           WHEN EKPO_CD_PLANT IN ('AU01',
                                  'LP01',
                                  'LP02',
                                  'AU05') THEN 'SO' || EKPO_CD_MATERIAL_MFG
           ELSE EKPO_CD_MATERIAL_MFG
       END AS EKPO_CD_MATERIAL_MFG,
       EKPO_DS_PLANT_SEGMENT,
       PLBR_DS_PLANT_SEGMENT,
       EKPO_CD_MATERIAL_NBR AS ODAG_PARTNUMBER,
       EKPO_CD_PROGRAM_ID AS ODAG_PROGRAM,
       TO_CHAR(COALESCE(EKKO_DT_CONTRACT_END_DATE, EKKO_DT_RECORD_CREATED_ON), 'YYYY') AS EKPO_DT_RETENTION_YEAR,
       EKPO_CD_PO_NBR || '-' || EKPO_NR_ITEM_NBR_PO AS ODAG_PODOCUMENT,
       EKPO_NR_NET_WEIGHT / 1000 AS EKPO_NR_NET_WEIGHT,
       EKPO_NR_GROSS_WEIGHT / 1000 AS EKPO_NR_GROSS_WEIGHT,
       EKPO_CD_UNIT_OF_WEIGHT,
       COALESCE(PF.TRGE_CD_DESTINATION_DATA, EKPO_CD_PLANT) AS EKPO_CD_PLANT_R3_STC,
       to_Char(substr('0000000000' || EKPO_CD_PO_NBR, -10)) AS EKPO_CD_PO_NBR10,
       to_Char(substr('00000' || EKPO_NR_ITEM_NBR_PO, -5)) AS EKPO_NR_ITEM_NBR_PO5,
       TO_CHAR
  (REPLACE (LTRIM(REPLACE(EKPO_CD_MATERIAL_NBR, '0', ' ')),
            ' ',
            0)) AS EKPO_CD_MATERIAL_NBR_TRIM,
               TO_CHAR
  (REPLACE (LTRIM(REPLACE(CASE
                              WHEN EKPO_CD_PLANT IN ('CR01', 'TY01', 'CX01') THEN EKPO_CD_WPS_PREFIX || EKPO_CD_MATERIAL_MFG
                              WHEN EKPO_CD_PLANT IN ('AU01', 'LP01', 'LP02', 'AU05') THEN 'SO' || EKPO_CD_MATERIAL_MFG
                              ELSE EKPO_CD_MATERIAL_MFG
                          END, '0', ' ')),
            ' ',
            0)) AS EKPO_CD_MATERIAL_MFG_TRIM,
                       to_Char(substr('0000000000' || CASE
                                                          WHEN EKPO_CD_PURCH_DOC_NBR_R3_GPP = '-1' THEN EKPO_CD_PO_NBR
                                                          ELSE EKPO_CD_PURCH_DOC_NBR_R3_GPP
                                                      END, -10)) AS EKPO_CD_PURCH_DOC_NBR_R3_GPP10,
                       TO_CHAR(CASE
                                   WHEN EKPO_CD_PLANT = 'CX01' THEN
                                        REPLACE (LTRIM(REPLACE(EKPO_CD_WPS_PREFIX || EKPO_CD_MATERIAL_MFG, '0', ' ')), ' ', 0)
                                   WHEN EKPO_CD_PLANT IN ('AU01', 'LP01', 'LP02', 'AU05') THEN NVL
                                          (SUBSTR
                                             (REPLACE (LTRIM(REPLACE('SO' || EKPO_CD_MATERIAL_MFG, '0', ' ')), ' ', 0),0, INSTR
                                                (REPLACE (LTRIM(REPLACE('SO' || EKPO_CD_MATERIAL_MFG, '0', ' ')), ' ', 0), '+SC')-1), REPLACE (LTRIM(REPLACE('SO' || EKPO_CD_MATERIAL_MFG, '0', ' ')), ' ', 0))
                                   WHEN EKPO_CD_PLANT IN ('CR01', 'TY01') THEN NVL(substr(REPLACE(LTRIM(REPLACE(EKPO_CD_WPS_PREFIX || EKPO_CD_MATERIAL_MFG, '0', ' ')), ' ', 0), 0, INSTR(REPLACE(LTRIM(REPLACE(EKPO_CD_WPS_PREFIX || EKPO_CD_MATERIAL_MFG, '0', ' ')), ' ', 0), '+SC')-1), REPLACE(LTRIM(REPLACE(EKPO_CD_WPS_PREFIX || EKPO_CD_MATERIAL_MFG, '0', ' ')), ' ', 0))
                                   WHEN EKPO_CD_PLANT IN ('AW01', 'JE01', 'MO01', 'PL01') THEN
                                        REPLACE (LTRIM(REPLACE(EKPO_CD_MATERIAL_MFG, '0', ' ')), ' ', 0)
                                   WHEN EKPO_CD_PLANT IN ('CU01', 'SA01') THEN
                                        REPLACE
                                          (REPLACE (LTRIM(REPLACE(EKPO_CD_MATERIAL_MFG, '0', ' ')), ' ', 0),'+SC', 'P')
                                   ELSE NVL(substr(REPLACE(LTRIM(REPLACE(EKPO_CD_MATERIAL_MFG, '0', ' ')), ' ', 0), 0, INSTR(REPLACE(LTRIM(REPLACE(EKPO_CD_MATERIAL_MFG, '0', ' ')), ' ', 0), '+SC')-1), REPLACE(LTRIM(REPLACE(EKPO_CD_MATERIAL_MFG, '0', ' ')), ' ', 0))
                               END) || '|' || COALESCE(PF.TRGE_CD_DESTINATION_DATA, EKPO_CD_PLANT) AS EKPO_KEY_STC
FROM ddwh01_dw.TT_EKPO_PURCH_DOC_ITEM_GPP
INNER JOIN ddwh01_dw.TD_PLBR_PLANT_BRANCHES ON EKPO_CD_PLANT = PLBR_CD_PLANT
AND PLBR_DS_PLANT_SEGMENT IN ('AG',
                              'CE',
                              '-1',
                              'AM',
                              'AS')
AND (EKPO_CD_PLANT NOT IN ('FA01',
                           'FB01',
                           'IA01')
     OR EKPO_CD_PLANT NOt like '00%')
INNER JOIN ddwh01_dw.TT_EKKO_PURCH_DOC_HEADER_GPP ON EKPO_CD_PO_NBR = EKKO_CD_PURCH_DOC_NBR
LEFT JOIN
  (SELECT DISTINCT TRGE_CD_SOURCE_DATA_1,
                   TRGE_CD_DESTINATION_DATA
   FROM DDWH01_DW.TD_TRGE_TRANSCODING_GENERAL
   WHERE TRGE_CD_DEFAULT_NAME = 'WERKS'
     AND TRGE_CD_LOGICAL_SYSTEM IN ('ERP',
                                    'URP',
                                    'NH3',
                                    'DWH')) PF ON EKPO_CD_PLANT = PF.TRGE_CD_SOURCE_DATA_1;
assistant
Here is the equivalent PySpark code for the given SQL code:

```python
from pyspark.sql import SparkSession
from pyspark.sql.functions import col, to_date, to_char, concat, when, ltrim, replace, coalesce, substring, instr, length, trim

spark = SparkSession.builder.appName("DDWH02_SM").getOrCreate()

# Create DataFrame for TT_EKPO_PURCH_DOC_ITEM_GPP
ekpo_df = spark.table("ddwh01_dw.TT_EKPO_PURCH_DOC_ITEM_GPP")

# Create DataFrame for TD_PLBR_PLANT_BRANCHES
plbr_df = spark.table("ddwh01_dw.TD_PLBR_PLANT_BRANCHES")

# Create DataFrame for TD_EKKO_PURCH_DOC_HEADER_GPP
ekko_df = spark.table("ddwh01_dw.TD_EKKO_PURCH_DOC_HEADER_GPP")

# Create DataFrame for TD_TRGE_TRANSCODING_GENERAL
pf_df = spark.table("DDWH01_DW.TD_TRGE_TRANSCODING_GENERAL")

# Perform the join operations
joined_df = (ekpo_df
             .join(plbr_df, (ekpo_df.EKPO_CD_PLANT == plbr_df.PLBR_CD_PLANT) &
                             (plbr_df.PLBR_DS_PLANT_SEGMENT.isin(['AG', 'CE', '-1', 'AM', 'AS'])) &
                             ((ekpo_df.EKPO_CD_PLANT.isin(['FA01', 'FB01', 'IA01'])) |
                              (~ekpo_df.EKPO_CD_PLANT.like('00%'))),
             "inner")
             .join(ekko_df, ekpo_df.EKPO_CD_PO_NBR == ekko_df.EKKO_CD_PURCH_DOC_NBR, "left")
             .join(pf_df, ekpo_df.EKPO_CD_PLANT == pf_df.TRGE_CD_SOURCE_DATA_1, "left"))

# Perform the transformations
transformed_df = (joined_df
                 .withColumn("EKPO_NR_PURCH_DOC_YEAR", to_char(to_date(col("EKKO_DT_PURCH_DOC_DATE"), "YYYY")))
                 .withColumn("EKPO_CD_PURCH_DOC_NBR_R3_GPP",
                            when(col("EKPO_CD_PURCH_DOC_NBR_R3_GPP") == "-1", col("EKPO_CD_PO_NBR")).otherwise(col("EKPO_CD_PURCH_DOC_NBR_R3_GPP")))
                 .withColumn("EKPO_CD_MATERIAL_MFG",
                            when(col("EKPO_CD_PLANT").isin(["CR01", "TY01", "CX01"]),
                                 concat(col("EKPO_CD_WPS_PREFIX"), col("EKPO_CD_MATERIAL_MFG"))).otherwise(col("EKPO_CD_MATERIAL_MFG")))
                 .withColumn("EKPO_DS_PLANT_SEGMENT", col("PLBR_DS_PLANT_SEGMENT"))
                 .withColumn("ODAG_PARTNUMBER", col("EKPO_CD_MATERIAL_NBR"))
                 .withColumn("ODAG_PROGRAM", col("EKPO_CD_PROGRAM_ID"))
                 .withColumn("EKPO_DT_RETENTION_YEAR",
                            to_char(coalesce(col("EKKO_DT_CONTRACT_END_DATE"), col("EKKO_DT_RECORD_CREATED_ON")), "YYYY"))
                 .withColumn("ODAG_PODOCUMENT", concat(col("EKPO_CD_PO_NBR"), "-", col("EKPO_NR_ITEM_NBR_PO")))
                 .withColumn("EKPO_NR_NET_WEIGHT", col("EKPO_NR_NET_WEIGHT") / 1000)
                 .withColumn("EKPO_NR_GROSS_WEIGHT", col("EKPO_NR_GROSS_WEIGHT") / 1000)
                 .withColumn("EKPO_CD_UNIT_OF_WEIGHT", col("EKPO_CD_UNIT_OF_WEIGHT"))
                 .withColumn("EKPO_CD_PLANT_R3_STC",
                            when(col("EKPO_CD_PLANT") == "CX01",
                                 trim(replace(concat(col("EKPO_CD_WPS_PREFIX"), col("EKPO_CD_MATERIAL_MFG")), '0', ' '))).otherwise(
                                 when(col("EKPO_CD_PLANT").isin(["AU01", "LP01", "LP02", "AU05"]),
                                      trim(replace(concat("SO", col("EKPO_CD_MATERIAL_MFG")), '0', ' '))).otherwise(
                                      when(col("EKPO_CD_PLANT").isin(["CR01", "TY01"]),
                                           trim(replace(concat(col("EKPO_CD_WPS_PREFIX"), col("EKPO_CD_MATERIAL_MFG")), '0', ' '))).otherwise(
                                           when(col("EKPO_CD_PLANT").isin(["AW01", "JE01", "MO01", "PL01"]),
                                                trim(replace(col("EKPO_CD_MATERIAL_MFG"), '0', ' '))).otherwise(
                                                    trim(replace(concat(col("EKPO_CD_MATERIAL_MFG"),
                                                                       when(col("EKPO_CD_PLANT") == "CU01" or col("EKPO_CD_PLANT") == "SA01",
                                                                              concat(trim(replace(col("EKPO_CD_MATERIAL_MFG"), '0', ' ')), "P")).otherwise(
                                                                                   trim(replace(col("EKPO_CD_MATERIAL_MFG"), '0', ' '))))))))
                 .withColumn("EKPO_CD_PURCH_DOC_NBR_R3_GPP10",
                            when(col("EKPO_CD_PURCH_DOC_NBR_R3_GPP") == "-1",
                                 trim(replace(col("EKPO_CD_PO_NBR"), '0', ' '))).otherwise(
                                 trim(replace(col("EKPO_CD_PURCH_DOC_NBR_R3_GPP"), '0', ' '))))
                 .withColumn("EKPO_KEY_STC",
                            concat(trim(replace(concat(col("EKPO_CD_WPS_PREFIX"), col("EKPO_CD_MATERIAL_MFG")), '0', ' ')),
                                 "|",
                                 coalesce(pf_df.TRGE_CD_DESTINATION_DATA, col("EKPO_CD_PLANT"))))

# Select the required columns
selected_df = transformed_df.select(
    "EKPO_ID_PURCH_DOC_ITEM_GPP",
    "EKPO_DT_LAST_MODIFY",
    "EKPO_ID_EKKO_PURCH_DOC_HEADER",
    "EKPO_CD_CONCAT_EBELN_EBELP",
    "EKPO_CD_PLANT",
    "EKPO_CD_PO_NBR",
    "EKPO_NR_ITEM_NBR_PO",
    "EKPO_NR_TARGET_QUANTITY",
    "EKPO_NR_FIRST_LEAD_TIME",
    "EKPO_NR_MIN_FABR_QTY",
    "EKPO_NR_MIN_FABR_QTY_UNIT",
    "EKPO_NR_STAND_PO_QUANTITY",
    "EKPO_NR_STAND_PO_QTY_UNIT",
    "EKPO_NR_TCE_AMOUNT",
    "EKPO_NR_TCE_AMOUNT_CUR",
    "EKPO_NR_TOOLING_ESTIMATE",
    "EKPO_NR_TOOLING_ESTIMATE_CUR",
    "EKPO_NR_NET_PRICE_PO",
    "EKPO_NR_NET_ORDER_VALUE",
    "EKPO_CD_MATERIAL_GRP",
    "EKPO_CD_MATERIAL_NBR",
    "EKPO_CD_PO_UNIT_OF_MEASURE",
    "EKPO_CD_REVISION_LVL",
    "EKPO_CD_QUOTA_ARRANGEMENT",
    "EKPO_CD_MADE_IN_COUNTRY_1",
    "EKPO_CD_PROGRAM_ID",
    "EKPO_FL_DELETION_PO",
    "EKPO_CD_PRINC_PURCH_AGREEMT",
    "EKPO_NR_ITEM_PURCH_AGREEMENT",
    "EKPO_CD_MATERIAL_NBR_VENDOR",
    "EKPO_NR_PRICE_UNIT",
    "EKPO_CD_SHORT_TEXT",
    "EKPO_DT_STARTING_DT",
    "EKPO_NR_DEPTH_MM",
    "EKPO_DT_END_DT",
    "EKPO_NR_HEIGHT_MM",
    "EKPO_CD_INDICE_CONTO_LAVORO",
    "EKPO_CD_IN_PAIR_MATERIAL_1",
    "EKPO_CD_IN_PAIR_MATERIAL_2",
    "EKPO_CD_IN_PAIR_MATERIAL_3",
    "EKPO_CD_IN_PAIR_MATERIAL_4",
    "EKPO_CD_IN_PAIR_MATERIAL_5",
    "EKPO_CD_IN_PAIR_MATERIAL_6",
    "EKPO_FL_IN_PAIR_WITH",
    "EKPO_NR_MIN_ORDER_QTY",
    "EKPO_FL_OVERSEAS",
    "EKPO_FL_WMF_FLAG",
    "EKPO_NR_PACKAGING_UNIT_MOQ",
    "EKPO_NR_PACK_WEIGHT_KG",
    "EKPO_CD_PACK_TYPE",
    "EKPO_CD_PPAP_STATUS",
    "EKPO_NR_PROCUR_MULTI",
    "EKPO_NR_PROCUR_MULTI_UNIT",
    "EKPO_CD_REVISION_LVL_2",
    "EKPO_NR_SAMPLE_LEAD_TIME",
    "EKPO_FL_STACKABLE",
    "EKPO_CD_TIPO_CONTO_LAVORO",
    "EKPO_CD_TYRE_BRAND",
    "EKPO_CD_TYRE_SIZE",
    "EKPO_FL_VPI_INDICATOR",
    "EKPO_NR_WIDTH_MM",
    "EKPO_CD_MADE_IN_COUNTRY_2",
    "EKPO_CD_MADE_IN_COUNTRY_3",
    "EKPO_CD_MADE_IN_COUNTRY_4",
    "EKPO_CD_MADE_IN_COUNTRY_5",
    "EKPO_CD_TYRE_SPECIFICATION",
    "EKPO_CD_TYRE_TYPE",
    "EKPO_NR_PO_QUANTITY",
    "EKPO_CD_REASON_CODE",
    "EKPO_CD_COMPANY_CODE",
    "EKPO_CD_ITEM_CATEG_PO",
    "EKPO_NR_PURCH_DOC_YEAR",
    "EKPO_CD_PURCH_DOCTYPE",
    "EKPO_CD_WPS_PREFIX",
    "EKPO_CD_PURCH_DOC_NBR_R3_GPP",
    "EKPO_CD_MATERIAL_MFG",
    "EKPO_DS_PLANT_SEGMENT",
    "PLBR_DS_PLANT_SEGMENT",
    "ODAG_PARTNUMBER",
    "ODAG_PROGRAM",
    "EKPO_DT_RETENTION_YEAR",
    "ODAG_PODOCUMENT",
    "EKPO_NR_NET_WEIGHT",
    "EKPO_NR_GROSS_WEIGHT",
    "EKPO_CD_UNIT_OF_WEIGHT",
    "EKPO_CD_PLANT_R3_STC",
    "EKPO_CD_PO_NBR10",
    "EKPO_NR_ITEM_NBR_PO5",
    "EKPO_CD_MATERIAL_NBR_TRIM",
    "EKPO_CD_MATERIAL_MFG_TRIM",
    "EKPO_CD_PURCH_DOC_NBR_R3_GPP10",
    "EKPO_KEY_STC")
```

Please note that the PySpark code assumes that the DataFrames `ekpo_df`, `plbr_df`, `ekko_df`, and `pf_df` already exist in your Spark environment. If they don't, you'll need to create them using the appropriate `spark.table()` method.