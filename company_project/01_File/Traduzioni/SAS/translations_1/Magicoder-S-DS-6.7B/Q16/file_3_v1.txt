You are an expert in translating code from SAS to Python. Translate anyway at the best that you can. Return just the code with comments. Do not explain the code. 

@@Instruction 
Translate the following code from SAS to Python:


libname ter "C:\Users\mcandi\OneDrive - KPMG\Desktop\project\SAS_scripts\Data_sets";
libname sez "C:\Users\mcandi\OneDrive - KPMG\Desktop\project\SAS_scripts\Data_sets";

libname ter_out "C:\Users\mcandi\OneDrive - KPMG\Desktop\project\SAS_scripts\Data_sets";
libname sez_out "C:\Users\mcandi\OneDrive - KPMG\Desktop\project\SAS_scripts\Data_sets";

libname appo "C:\Users\mcandi\OneDrive - KPMG\Desktop\project\SAS_scripts\Data_sets";

options mergenoby = warn;

data xclasse;
	set ter.etapop20b;
	time = 2019;
	length eta1_a $ 6;
	if 15 <= eta <= 17
		then eta1_a = "Y_UN17";
	else if 18 <= eta <= 49
		then eta1_a = "Y"||trim(left(eta));
	else if 50 <= eta <= 54
		then eta1_a = "Y_GE50";
	else delete;
	keep codc620b eta1_a eta time tot_fem;
	rename codc620b = codice_comune__str
		   tot_fem = femmine;
run;
proc tabulate data = xclasse;
	class eta1_a;
	var eta;
	table eta1_a, eta*(min max) * f = 6. /nocellmerge;
run;
proc sort data = xclasse;
	by codice_comune__str;
run;
data xgeog;
	set ter_out.geografica_comune;
	keep codice_comune__str codice_provincia;
run;
proc sort data = xgeog;
	by codice_comune__str;
run;
data xclageo;
	merge xgeog xclasse;
	by codice_comune__str;
run;
proc means data = xclageo noprint;
	class codice_provincia eta1_a;
	types codice_provincia * eta1_a;
	id time;
	output out = provinciale_donne (drop = _type_ _freq_)
		sum(femmine) = donne_classe_eta;
run;

data nati;
	set appo.nati_eta_madre_provincia_istat;
	rename valore = nati;
run;
proc sort data = nati;
	by codice_provincia eta1_a;
run;
proc sort data = provinciale_donne;
	by codice_provincia eta1_a;
run;
data nati_donne;
	merge nati provinciale_donne (drop = time);
	by codice_provincia eta1_a;
run; 

data nati_donne_rapp;
	set nati_donne;
	nati_1000_donne_classe_eta = 1000 * nati / donne_classe_eta;
run;

options nolabel;


 
@@Response
Here is the Python equivalent of your SAS code:

```python
import pandas as pd

# Load datasets
ter = pd.read_csv("C:/Users/mcandi/OneDrive - KPMG/Desktop/project/SAS_scripts/Data_sets/etapop20b.csv")
sez = pd.read_csv("C:/Users/mcandi/OneDrive - KPMG/Desktop/project/SAS_scripts/Data_sets/etapop20b.csv")
ter_out = pd.read_csv("C:/Users/mcandi/OneDrive - KPMG/Desktop/project/SAS_scripts/Data_sets/geografica_comune.csv")
sez_out = pd.read_csv("C:/Users/mcandi/OneDrive - KPMG/Desktop/project/SAS_scripts/Data_sets/geografica_comune.csv")
appo = pd.read_csv("C:/Users/mcandi/OneDrive - KPMG/Desktop/project/SAS_scripts/Data_sets/nati_eta_madre_provincia_istat.csv")

# Add column
ter['time'] = 2019

# Replace values
ter.loc[ter['eta'].between(15, 17), 'eta1_a'] = 'Y_UN17'
ter.loc[ter['eta'].between(18, 49), 'eta1_a'] = 'Y' + ter['eta'].astype(str)
ter.loc[ter['eta'].between(50, 54), 'eta1_a'] = 'Y_GE50'

# Drop rows
ter = ter.drop(ter[~ter['eta1_a'].isin(['Y_UN17', 'Y'+ter['eta'].astype(str), 'Y_GE50'])].index)

# Keep and rename columns
ter = ter[['codc620b', 'eta1_a', 'eta', 'time', 'tot_fem']]
ter.rename(columns={'codc620b': 'codice_comune__str', 'tot_fem': 'femmine'}, inplace=True)

# Calculate statistics
print(ter.groupby('eta1_a')['eta'].agg(['min', 'max']))

# Sort by column
ter = ter.sort_values('codice_comune__str')

# Keep and rename columns
ter_out = ter_out[['codice_comune__str', 'codice_provincia']]

# Merge datasets
xclageo = pd.merge(ter_out, ter, on='codice_comune__str')

# Calculate statistics
provinciale_donne = xclageo.groupby(['codice_provincia', 'eta1_a'])['femmine'].sum().reset_index()

# Rename column
nati = appo.rename(columns={'valore': 'nati'})

# Sort by column
nati = nati.sort_values('codice_provincia')
provinciale_donne = provinciale_donne.sort_values('codice_provincia')

# Merge datasets
nati_donne = pd.merge(nati, provinciale_donne, on=['codice_provincia', 'eta1_a'])

# Add column
nati_donne['nati_1000_donne_classe_eta'] = 1000 * nati_donne['nati'] / nati_donne['donne_classe_eta']

# Print dataset
print(nati_donne)
```

Please note that this code assumes that the CSV files are comma-separated and that the column names are the same in both SAS and Python. Also, the SAS proc tabulate and proc means commands are not available in Python.