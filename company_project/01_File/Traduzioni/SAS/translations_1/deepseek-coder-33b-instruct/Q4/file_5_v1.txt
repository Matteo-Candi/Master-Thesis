This is a complex SAS script that includes many steps. It's not feasible to translate it directly into Python due to the nature of SAS and Python being very different in terms of syntax, data handling, and libraries available. However, I can provide you with an outline of how you might approach translating this code from SAS to Python:

```python
import pandas as pd
from pathlib import Path

# Define the paths for input/output files
ter_path = Path('C:/Users/mcandi/OneDrive – KPMG/Desktop/project/SAS_scripts/Data_sets')
sez_path = Path('C:/Users/mcandi/OneDrive – KPMG/Desktop/project/SAS_scripts/Data_sets')
ter_out_path = Path('C:/Users/mcandi/OneDrive – KPMG/Desktop/project/SAS_scripts/Data_sets')
sez_out_path = Path('C:/Users/mcandi/OneDrive – KPMG/Desktop/project/SAS_scripts/Data_sets')
appo_path = Path('C:/Users/mcandi/OneDrive – KPMG/Desktop/project/SAS_scripts')
macro_path = Path('C:/Users/mcandi/OneDrive – KPMG/Desktop/project/SAS_scripts/Macro/macroarrotondainterogruppo.sas')
geog20b_path = ter_out_path / 'geog20b'
demo20b_path = sez_path / 'demo20b'

# Load the data using pandas
avanzamento_eta = pd.read_csv(appo_path / 'avanzamento_eta.csv')  # Assuming csv format for simplicity, replace with actual file type
Popolazione_eta_sesso_comune = pd.read_csv(ter_out_path / 'Popolazione_eta_sesso_comune.csv')  # Same as above
geog20b = pd.read_csv(geog20b_path)
demo20b = pd.read_csv(demo20b_path)

# Replicate the SAS code step by step:
# ...
```

This is a very simplified translation, and it's not complete as the original SAS script includes many steps that are not easily translated to Python. The process would be similar for each of these steps, but the actual commands could vary significantly due to differences in syntax between languages. You might need to use `groupby` operations instead of `proc means`, and you'd have to replace `data` steps with pandas DataFrame manipulations, among other changes.
