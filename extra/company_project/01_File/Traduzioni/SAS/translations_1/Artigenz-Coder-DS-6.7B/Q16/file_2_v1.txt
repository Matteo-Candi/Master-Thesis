You are an expert in translating code from SAS to Python. Translate anyway at the best that you can. Return just the code with comments. Do not explain the code. 

@@Instruction 
Translate the following code from SAS to Python:
%macro arrotondainterogruppo(ingresso,		
							 variab,		
							 datototeff,	
							 effettiva,		
							 vargru,		
							 uscita);		




%put;
%put %str(WARNING- =================================================================);
%put %str(WARNING: I nomi);
%put %str(WARNING- intermedio somma segnali);
%put %str(WARNING- identificano data set ausiliari della macro arrotondainterogruppo);
%put %str(WARNING- che vengono cancellati al termine delle elaborazioni             );
%put %str(WARNING- =================================================================);
%put;


data intermedio;
	set &ingresso;
run;
proc sort data = intermedio;
	by &vargru;
run;
proc means data = intermedio noprint;
	by &vargru;
	output out = somma (keep = &vargru vartot)
		   sum(&variab) = vartot;
run;
proc sort data = &datototeff;
	by &vargru;
run;
data somma;
	merge somma (in = inso) &datototeff (in = inda);
	by &vargru;
	if inso and inda;
	keep &vargru vartot &effettiva;
run;


data somma;
	set somma;
	diff = vartot - &effettiva;
	keep &vargru diff;
run;


data intermedio;
	merge intermedio somma (in = presente);
	by &vargru;
	if presente;
run; 


proc sort data = intermedio;
	by &vargru descending &variab;
run;


data intermedio;
	set intermedio;
	by &vargru;
	if first.&vargru then segnale = _N_;
run;
data segnali;
	set intermedio;
	by &vargru;
	if first.&vargru;
	keep &vargru segnale;
run;


data &uscita;
	merge intermedio (drop = segnale) segnali;
	by &vargru;
	if _N_ < segnale + abs(diff) then
		if diff < 0 then &variab = &variab + 1;
		else &variab = max(&variab - 1,0);
	drop diff segnale;
run;


proc datasets library = work;
	delete intermedio somma segnali;
run;
quit;

%mend arrotondainterogruppo;
 
@@Response
Here is the Python equivalent of the SAS code:

```python
def arrotondainterogruppo(ingresso, variab, datototeff, effettiva, vargru, uscita):

    print("\nWARNING- =================================================================")
    print("WARNING: I nomi")
    print("WARNING- intermedio somma segnali")
    print("WARNING- identificano data set ausiliari della macro arrotondainterogruppo")
    print("WARNING- che vengono cancellati al termine delle elaborazioni             ")
    print("WARNING- =================================================================\n")

    import pandas as pd

    # Load the input data
    intermedio = pd.read_csv(ingresso)

    # Sort the data by the grouping variable
    intermedio = intermedio.sort_values(by=[vargru])

    # Calculate the sum of the variable for each group
    somma = intermedio.groupby(vargru)[variab].sum().reset_index()
    somma = somma.rename(columns={variab: 'vartot'})

    # Load the reference data
    datototeff = pd.read_csv(datototeff)

    # Merge the data
    somma = pd.merge(somma, datototeff, on=vargru)

    # Calculate the difference
    somma['diff'] = somma['vartot'] - somma[effettiva]
    somma = somma[[vargru, 'diff']]

    # Merge the data back into the original data
    intermedio = pd.merge(intermedio, somma, on=vargru)

    # Sort the data by the grouping variable and the variable in descending order
    intermedio = intermedio.sort_values(by=[vargru, variab], ascending=[True, False])

    # Add a signal variable
    intermedio['segnale'] = intermedio.groupby(vargru).cumcount()

    # Select the signal data
    segnali = intermedio.groupby(vargru).first().reset_index()
    segnali = segnali[[vargru, 'segnale']]

    # Perform the rounding
    for index, row in intermedio.iterrows():
        if index < row['segnale'] + abs(row['diff']):
            if row['diff'] < 0:
                intermedio.at[index, variab] += 1
            else:
                intermedio.at[index, variab] = max(intermedio.at[index, variab] - 1, 0)

    # Merge the data back into the signal data
    intermedio = pd.merge(intermedio, segnali, on=vargru)

    # Drop unnecessary columns
    intermedio = intermedio.drop(columns=['diff', 'segnale'])

    # Save the output data
    intermedio.to_csv(uscita, index=False)

    # Delete temporary data
    del intermedio, somma, segnali
    
# End of function
```

Please note that the Python code is a direct translation of the SAS code. It uses the pandas library for data manipulation, and assumes that the input data files are in CSV format and that the names of the columns are correctly specified. Also, the function does not handle exceptions or errors, and it does not have the same functionality as the SAS macro.