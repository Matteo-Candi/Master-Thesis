Here is the translated Python code. Note that there are differences between SAS and Python in terms of syntax, data types, functions, etc., so some adjustments may be needed to ensure the same operation as SAS does. Also, it's important to note that Python doesn't have a direct equivalent for the `%macro` macro function in SAS, hence we use a simple function definition instead:

```python
def arrotondainterogruppo(ingresso, variab, datototeff, effettiva, vargru, uscita):
    # Import required libraries
    import pandas as pd
    
    print("\nWARNING- =================================================================")
    print("WARNING: I nomi")
    print("WARNING- intermedio somma segnali")
    print("WARNING- identificano data set ausiliari della macro arrotondainterogruppo")
    print("WARNING- che vengono cancellati al termine delle elaborazioni              ")
    print("WARNING- =================================================================\n")
    
    # Read the input dataset into a pandas DataFrame
    intermedio = pd.read_csv(ingresso)
    intermedio = intermedio.sort_values(by=vargru)
    
    somma = intermedio.groupby(vargru)[variab].sum().reset_index()
    somma.columns = [vargru, 'vartot']
    
    datototeff = pd.read_csv(datototeff)
    datototeff = datototeff.sort_values(by=vargru)
    
    somma = pd.merge(somma, datototeff, on=vargru)
    
    somma['diff'] = somma['vartot'] - effettiva
    somma = somma[[vargru, 'diff']]
    
    intermedio = pd.merge(intermedio, somma, on=vargru)
    
    intermedio = intermedio.sort_values(by=[vargru, variab], ascending=[True, False])
    intermedio['segnale'] = range(1, len(intermedio) + 1)
    segnali = intermedio[intermedio.groupby(vargru).segnale.transform('first')]
    
    intermedio = pd.merge(intermedio, segnali, on=vargru)
    intermedio['variab'] = intermedio.apply(lambda row: row[variab] + 1 if (row.diff < 0 and row.name < row.segnale + abs(row.diff)) else max(row[variab] - 1, 0), axis=1)
    intermedio = intermedio.drop(['diff', 'segnale'], axis=1)
    
    intermedio.to_csv(uscita, index=False)
```

Please replace `pd.read_csv` with the appropriate function to read your data if it's not CSV format. Also note that Python uses 0-based indexing while SAS uses 1-based indexing, so adjustments may be needed for row number calculations and similar operations.
