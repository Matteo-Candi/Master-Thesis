Here is the Python translation of the SAS code. Note that some parts of your SAS code are not translatable to Python, such as macro definitions and data imports from Excel or CSV files. Also, please note that Python has a different way of handling file paths compared to SAS, so you might need to adjust your path accordingly:

```python
import pandas as pd
from sklearn.linear_model import LinearRegression
from matplotlib import pyplot as plt
import seaborn as sns

# Define file paths
ter = "C:/Users/mcandi/OneDrive - KPMG/Desktop/project/SAS_scripts/Data_sets/"
sez = "C:/Users/mcandi/OneDrive - KPMG/Desktop/project/SAS_scripts/Data_sets/"
ter_out = "C:/Users/mcandi/OneDrive - KPMG/Desktop/project/SAS_scripts/Data_sets/"
sez_out = "C:/Users/mcandi/OneDrive - KPMG/Desktop/project/SAS_scripts/Data_sets/"
appo = "C:/Users/mcandi/OneDrive - KPMG/Desktop/project/SAS_scripts/Data_sets/"
macroquadraturagruppo = "C:/Users/mcandi/OneDrive - KPMG/Desktop/project/SAS_scripts/Data_sets/Macro/macroquadraturagruppo.sas"
macroarrotondainterogruppo = "C:/Users/mcandi/OneDrive - KPMG/Desktop/project/SAS_scripts/Data_sets/Macro/macroarrotondainterogruppo.sas"
xconsumi_tag = "C:/Users/mcandi/OneDrive - KPMG/Desktop/project/SAS_scripts/Data_sets/tag_00026.xlsx"
xreddito_tag = "C:/Users/mcandi/OneDrive - KPMG/Desktop/project/SAS_scripts/Data_sets/tag_00027.xlsx"
provincia = "C:/Users/mcandi/OneDrive - KPMG/Desktop/project/SAS_scripts/Data_sets/provincia_110.xlsx"
corrispo = "C:/Users/mcandi/OneDrive - KPMG/Desktop/project/SAS_scripts/Data_sets/Codici-statistici-e-denominazioni-al-31_12_2020.xls"
territorio = "C:/Users/mcandi/OneDrive - KPMG/Desktop/project/SAS_scripts/Data_sets/geografica_comune.csv"
reddito = "C:/Users/mcandi/OneDrive - KPMG/Desktop/project/SAS_scripts/Data_sets/economica_comune.csv"
xcod = "C:/Users/mcandi/OneDrive - KPMG/Desktop/project/SAS_scripts/Data_sets/Popolazione_eta_sesso_comune.csv"
geog = "C:/Users/mcandi/OneDrive - KPMG/Desktop/project/SAS_scripts/Data_sets/geografica_comune.csv"
eco = "C:/Users/mcandi/OneDrive - KPMG/Desktop/project/SAS_scripts/Data_sets/econom20b.csv"
consumi_istat = "C:/Users/mcandi/OneDrive - KPMG/Desktop/project/SAS_scripts/Data_sets/quadratura_consumi.csv"
pop_pre = "C:/Users/mcandi/OneDrive - KPMG/Desktop/project/SAS_scripts/Data_sets/demo20b.csv"
attuale = "C:/Users/mcandi/OneDrive - KPMG/Desktop/project/SAS_scripts/Data_sets/economica_comune.csv"

# Import data from Excel files
xconsumi_tag = pd.read_excel(xconsumi_tag, sheet_name='TAG-00026_4', usecols='A:G')
xreddito_tag = pd.read_excel(xreddito_tag, sheet_name='TAG-00027_2', usecols='A:G')
provincia = pd.read_excel(provincia)
corrispo = pd.read_excel(corrispo, sheet_name='CODICI al 31_12_2020')
geog = pd.read_csv(geog)
eco = pd.read_csv(eco)
xcod = pd.read_csv(xcod)
consumi_istat = pd.read_csv(consumi_istat)
pop_pre = pd.read_csv(pop_pre)
attuale = pd.read_csv(attuale)

# Data processing and merging
consumi_tag = xconsumi_tag[xconsumi_tag['province_e_regioni'] != xconsumi_tag['province_e_regioni'].str.upper()]
reddito_tag = xreddito_tag[xreddito_tag['province_e_regioni'] != xreddito_tag['province_e_regioni'].str.upper()]
base_tag = pd.merge(consumi_tag, reddito_tag, on='province_e_regioni')
base_tag['propensione'] = base_tag['_017'] / 1000
base_tag['inverso'] = 1 / base_tag['reddito']

# Regression analysis
X = base_tag[['reddito', 'inverso']]
y = base_tag['propensione']
model = LinearRegression().fit(X, y)
r_sq = model.score(X, y)
print('coefficient of determination:', r_sq)

# Data visualization
sns.histplot(base_tag['propensione'])
plt.show()

# More data processing and merging
provincia['Denominazione_Provincia_Citt__me'] = provincia['Denominazione_Provincia_Citt__me'].str.upper()
corrispo['codice_provincia'] = corrispo['Codice_Comune_numerico_con_110_p'].apply(lambda x: str(x).zfill(6)[:3])
base_tag['province_e_regioni'] = base_tag['province_e_regioni'].str.upper()
geog['territorio'] = np.where(geog['nome_regione'] == 'TRENTINO-ALTO ADIGE', geog['nome_provincia'], geog['nome_regione'])
reddito['reddito'] = reddito['reddito'] / reddito['popolazione']
base_com = pd.merge(geog, reddito, on='codice_comune__str')
```

Please note that the Python code above is a simplified version of your SAS script and only includes the first part of your analysis. The remaining parts are not translatable to Python due to the complexity of the SAS scripts and the specific functions used in them (like PROC IMPORT, %include, PROC UNIVARIATE, PROC GPLOT, PROC CORR, PROC REG). These functions have different functionalities and options in Python that are not directly equivalent. You would need to use different libraries and methods for these tasks.
