
```python
from pyspark.sql import SparkSession
from pyspark.sql.functions import *

def translate_code():
    spark = SparkSession.builder \
        .appName('Translate SQL to PySpark') \
        .getOrCreate()

    df = spark.table('ddwh01_dw.td_inol_invoice_orders_lines')

    df = df.join(spark.table('ddwh02_dim.twrk_pvan_delta_flash_legacy'), df['vele_id_vehicle_legacy_id_pk'] == spark.table('ddwh02_dim.twrk_pvan_delta_flash_legacy')['vele_id_vehicle_legacy_id_pk'], 'inner')
    df = df.join(spark.table('ddwh01_dw.tm_vele_vehicle_legacy'), df['vele_id_vehicle_legacy_id_pk'] == spark.table('ddwh01_dw.tm_vele_vehicle_legacy')['vele_id_vehicle_legacy_id_pk'], 'inner')
    df = df.join(spark.table('ddwh01_dw.tt_sops_sales_order_position'), (df['sops_cd_sales_order'] == spark.table('ddwh01_dw.tt_sops_sales_order_position')['sops_cd_sales_order']) & 
                         (df['sops_cd_legacy_mkt'] == spark.table('ddwh01_dw.tt_sops_sales_order_position')['sops_cd_legacy_mkt']) & 
                         (df['sops_cd_dealer_code'] == spark.table('ddwh01_dw.tt_sops_sales_order_position')['sops_cd_dealer_code']) & 
                         (df['sops_cd_source_order'] == spark.table('ddwh01_dw.tt_sops_sales_order_position')['sops_cd_source_order']) & 
                         (df['sops_cd_source_order_sequence'] == spark.table('ddwh01_dw.tt_sops_sales_order_position')['sops_cd_source_order_sequence']) & 
                         (df['sops_cd_source_system'] == spark.table('ddwh01_dw.tt_sops_sales_order_position')['sops_cd_source_system']) & 
                         (df['sops_cd_product_line'] == spark.table('ddwh01_dw.tt_sops_sales_order_position')['sops_cd_product_line']) & 
                         (df['vele_id_vehicle_legacy_id_pk'] == spark.table('ddwh01_dw.tt_sops_sales_order_position')['vele_id_vehicle_legacy_id_pk']), 'leftouter')
    df = df.join(spark.table('ddwh01_dw.tt_slor_sales_order'), df['sops_id_slor_sales_order'] == spark.table('ddwh01_dw.tt_slor_sales_order')['slor_id_sales_order'], 'leftouter')
    df = df.join(spark.table('ddwh01_dw.tt_inoh_invoice_orders_header'), df['inoh_id_invoice_orders_header'] == spark.table('ddwh01_dw.tt_inoh_invoice_orders_header')['inoh_id_invoice_orders_header'], 'leftouter')
    df = df.join(spark.table('tdim_pvan_vehicle'), df['pvan_id_vcl'] == spark.table('tdim_pvan_vehicle')['pvan_id_vcl'], 'leftouter')
    df = df.where(df['inol_fl_delete_line'].isNull())

    df = df.select(-1 AS fbil_id_comp_company,
                       '-1' AS fbil_cd_accg_doc_code,
                       to_number(to_char(df['inol_dt_document_date'], 'YYYY')) AS fbil_nr_accg_doc_fiscal_year,
                       df['inol_cd_document_number'] AS fbil_cd_cmm_doc_code,
                       df['inol_cd_progressive_order'] AS fbil_cd_cmm_doc_pos_code,
                       coalesce(df['inol_id_vele_vcl_legacy'], -1) AS fbil_id_pvan_vcl,
                       df['inol_cd_sales_order'] AS fbil_cd_sls_ord_code,
                       df['inol_cd_progressive_order'] AS fbil_cd_sls_ord_pos_code,
                       coalesce(df['inol_id_inoh_invoice_orders_he'], -1) AS fbil_id_cmm_doc_id,
                       coalesce(df['inol_id_invoice_orders_lines'], -1) AS fbil_id_cmm_doc_pos_id,
                       df['inoh_cd_document_type'] AS fbil_id_bdty_billing_doc_tp,
                       coalesce(to_number(to_char(df['inol_dt_document_date'], 'J')), 5373484) AS fbil_id_time_cmm_doc_date,
                       coalesce(df['inoh_id_cust_customer'], -1) AS fbil_id_cust_payer,
                       coalesce(df['inol_id_cust_customer'], -1) AS fbil_id_cust_sold,
                       -2 AS fbil_id_cuty_customer_type,
                       coalesce(df['vele_id_ledi_legacy_division'], -1) AS fbil_id_divi_division,
                       coalesce(df['vele_id_hmup_plank_key'], -1) AS fbil_id_hmup_hmu_product,
                       coalesce(df['pvan_id_prat_pr_attributes'], -1) AS fbil_id_prat_pr_attributes,
                       coalesce(df['pvan_id_prpp_prp_product'], -1) AS fbil_id_prp_prpp_product,
                       5373484 AS fbil_id_time_return_date,
                       coalesce(to_number(to_char(df['slor_dt_document_date'], 'J')), 5373484) AS fbil_id_time_sales_order_date,
                       coalesce(df['slor_id_sales_order'], -1) AS fbil_id_sls_ord_id,
                       coalesce(df['sops_id_sales_order_pos'], -1) AS fbil_id_sls_ord_pos_id,
                       coalesce(to_number(to_char(df['vele_dt_dealer_invoice_date'], 'J')), 5373484) AS fbil_id_time_start_billing_dat,
                       1 AS fbil_id_batch_id,
                       None AS fbil_fl_itc_flg,
                       coalesce(df['inoh_id_cust_customer'], -1) AS fbil_id_cust_payee,
                       coalesce(df['inoh_id_cust_customer'], -1) AS fbil_id_cust_billtoparner,
                       coalesce(df['inoh_id_cust_customer'], -1) AS fbil_id_cust_saleschannel,
                       coalesce(df['inoh_id_cust_customer'], -1) AS fbil_id_cust_soldtoparner,
                       coalesce(df['inoh_id_cust_customer'], -1) AS fbil_id_cust_ownership_group,
                       -2 AS fbil_id_addr_ownership_group,
                       df['inol_cd_business_area_code'] AS fbil_cd_business_area_code,
                       df['slor_cd_codice_resa'] AS fbil_cd_codice_resa,
                       df['inol_cd_dealer_code'] AS fbil_cd_dlr_code,
                       df['inoh_cd_dealer_order_reference'] AS fbil_cd_dlr_ord_ref,
                       df['inol_cd_dealer_order_type'] AS fbil_cd_dlr_ord_tp,
                       df['inol_cd_document_number'] AS fbil_cd_doc_nbr,
                       df['inoh_cd_document_type'] AS fbil_cd_doc_tp,
                       df['inol_cd_draft_number'] AS fbil_cd_draft_inv_code,
                       df['inol_cd_engine_number'] AS fbil_cd_eng_nbr,
                       df['inol_cd_machine_type'] AS fbil_cd_machine_tp,
                       df['inol_cd_legacy_mkt'] AS fbil_cd_market_legacy,
                       df['inol_cd_tyres_price_1'] AS fbil_cd_price_tyres_1,
                       df['inol_cd_tyres_price_2'] AS fbil_cd_price_tyres_2,
                       df['inol_cd_price_list'] AS fbil_cd_price_list,
                       df['inol_cd_tech_type_price'] AS fbil_cd_price_tech_tp,
                       df['inol_cd_product_class'] AS fbil_cd_product_cl,
                       df['inol_cd_product_line'] AS fbil_cd_product_line,
                       df['inol_cd_product_type'] AS fbil_cd_product_tp,
                       df['inol_cd_progressive_order'] AS fbil_cd_progressive_ord,
                       df['inol_cd_reference_document_num'] AS fbil_cd_ref_doc_nbr,
                       df['inol_cd_serial_number'] AS fbil_cd_serial_nbr,
                       df['inol_cd_shipment_progressive'] AS fbil_cd_shipment_progressive,
                       df['inol_cd_sales_order'] AS fbil_cd_sls_ord,
                       df['inol_cd_source_order'] AS fbil_cd_source_ord,
                       df['inol_cd_source_order_sequence'] AS fbil_cd_source_ord_sequence,
                       df['inol_cd_standard_card_model'] AS fbil_cd_std_card_mdl,
                       df['inol_cd_standard_card_tyres'] AS fbil_cd_std_card_tyres,
                       df['inol_cd_standard_card_version'] AS fbil_cd_std_card_vrs,
                       df['inol_cd_tech_tp'] AS fbil_cd_tech_tp,
                       5373484 AS fbil_id_time_itc_inv_date,
                       df['inol_fl_invoice_reject_reason'] AS fbil_fl_inv_reject_reason,
                       coalesce(to_number(to_char(df['inol_dt_draft_date'], 'J')), 5373484) AS fbil_id_time_draft_inv_date,
                       coalesce(df['inol_id_mark_std_legacy_mkt'], -1) AS fbil_id_coun_country,
                       df['inol_cd_source_system'] AS fbil_cd_source_system,
                       when(df['inoh_cd_document_type'].isin(['1']), 1).otherwise(0) AS fbil_in_wholesale_qty,
                       when(df['inoh_cd_document_type'].isin(['1']), 1).otherwise(0) - when(df['inoh_cd_document_type'].isin(['6']), 1).otherwise(0) AS fbil_in_wholesale_net_qty
                      )

    df.write.mode('append').saveAsTable('ddwh02_sm.twrk_fbil_billing_l_flash', 'fbil')

translate_code()
```