You are an expert in translating code from SQL to PySpark; translate the given SQL code to PySpark as best as you can, even if there are problems; insert comments inside the code; do not add any other documentation or explanation outside the code; make the code as readable as possible; minimize its complexity and volume by reducing the number of independent paths, operators, and operands; do not make any mistakes; all the variables have to be defined; ensure the user can copy and run the code without modifications; translate from SQL to PySpark every file provided. 

@@Instruction 
Translate the following code from SQL to PySpark:
CREATE OR REPLACE
FORCE EDITIONABLE VIEW "DDWH02_SM"."VW_EKKO_PURCH_DOC_HEADER_AGCE" ("EKKO_DT_LAST_MODIFY",
                                                                    "EKKO_ID_PURCH_DOC_HEADER_GPP",
                                                                    "EKKO_CD_PURCH_DOC_NBR",
                                                                    "EKKO_NR_TOT_VAL_OF_RELEASE",
                                                                    "EKKO_DT_PURCH_DOC_DATE",
                                                                    "EKKO_DT_RECORD_CREATED_ON",
                                                                    "EKKO_CD_PURCH_GRP",
                                                                    "EKKO_FL_TAKE_PURCH_GRP",
                                                                    "EKKO_CD_VENDOR_ACCOUNT_NBR",
                                                                    "EKKO_CD_DOC_PROCESS_STATE",
                                                                    "EKKO_CD_PURCH_DOC_CATEGORY",
                                                                    "EKKO_CD_PURCH_DOCTYPE",
                                                                    "EKKO_DT_CONTRACT_START_DATE",
                                                                    "EKKO_NR_CHG_TIMESTAMP",
                                                                    "EKKO_DT_CONTRACT_END_DATE",
                                                                    "EKKO_CD_PURCH_DOC_STATUS",
                                                                    "EKKO_NR_CURRENCY_KEY",
                                                                    "EKKO_CD_PURCH_AGREEMENT_NBR",
                                                                    "EKKO_CD_OBJ_CREATED_BY",
                                                                    "EKKO_CD_INCOTERMS_PART_1",
                                                                    "EKKO_CD_INCOTERMS_PART_2",
                                                                    "EKKO_CD_TERMS_OF_PAYMENT_1",
                                                                    "EKKO_CD_PURCH_ORG_1",
                                                                    "EKKO_CD_COMPANY_CODE",
                                                                    "EKKO_CD_REMARK_1",
                                                                    "EKKO_NR_PURCH_DOC_YEAR",
                                                                    "PLBR_DS_PLANT_SEGMENT",
                                                                    "ODAG_PODOCUMENTTYPE",
                                                                    "ODAG_SUPPLIERCODE",
                                                                    "EKKO_DT_RETENTION_YEAR",
                                                                    "ODAG_PODOCUMENTYEAR",
                                                                    "EKKO_CD_PURCH_DOC_NBR10",
                                                                    "EKKO_CD_SUPPLIER_TYPE") AS
SELECT EKKO_DT_LAST_MODIFY,
       EKKO_ID_PURCH_DOC_HEADER_GPP,
       EKKO_CD_PURCH_DOC_NBR,
       EKKO_NR_TOT_VAL_OF_RELEASE,
       EKKO_DT_PURCH_DOC_DATE,
       EKKO_DT_RECORD_CREATED_ON,
       EKKO_CD_PURCH_GRP,
       EKKO_FL_TAKE_PURCH_GRP,
       EKKO_CD_VENDOR_ACCOUNT_NBR,
       EKKO_CD_DOC_PROCESS_STATE,
       EKKO_CD_PURCH_DOC_CATEGORY,
       EKKO_CD_PURCH_DOCTYPE,
       EKKO_DT_CONTRACT_START_DATE,
       EKKO_NR_CHG_TIMESTAMP,
       EKKO_DT_CONTRACT_END_DATE,
       EKKO_CD_PURCH_DOC_STATUS,
       EKKO_NR_CURRENCY_KEY,
       EKKO_CD_PURCH_AGREEMENT_NBR,
       EKKO_CD_OBJ_CREATED_BY,
       EKKO_CD_INCOTERMS_PART_1,
       EKKO_CD_INCOTERMS_PART_2,
       EKKO_CD_TERMS_OF_PAYMENT_1,
       EKKO_CD_PURCH_ORG_1,
       EKKO_CD_COMPANY_CODE,
       EKKO_CD_REMARK_1,
       TO_NUMBER(TO_CHAR(EKKO_DT_PURCH_DOC_DATE, 'YYYY')) AS EKKO_NR_PURCH_DOC_YEAR,
       ' ' AS PLBR_DS_PLANT_SEGMENT,
       EKKO_CD_PURCH_DOCTYPE AS ODAG_PODOCUMENTTYPE,
       EKKO_CD_VENDOR_ACCOUNT_NBR AS ODAG_SUPPLIERCODE,
       TO_CHAR(COALESCE(EKKO_DT_CONTRACT_END_DATE, EKKO_DT_RECORD_CREATED_ON), 'YYYY') AS EKKO_DT_RETENTION_YEAR,
       TO_CHAR(EKKO_DT_PURCH_DOC_DATE, 'YYYY') AS ODAG_PODOCUMENTYEAR,
       to_Char(substr('0000000000' || EKKO_CD_PURCH_DOC_NBR, -10)) AS EKKO_CD_PURCH_DOC_NBR10,
       Supplier_Type AS EKKO_CD_SUPPLIER_TYPE
FROM ddwh01_dw.TT_EKKO_PURCH_DOC_HEADER_GPP
INNER JOIN
  (SELECT DISTINCT EKPO_CD_PO_NBR
   FROM ddwh01_dw.TT_EKPO_PURCH_DOC_ITEM_GPP
   INNER JOIN ddwh01_dw.TD_PLBR_PLANT_BRANCHES ON EKPO_CD_PLANT = PLBR_CD_PLANT
   AND PLBR_DS_PLANT_SEGMENT IN ('AG',
                                 'CE',
                                 '-1',
                                 'AM',
                                 'AS')
   AND (EKPO_CD_PLANT NOT IN ('FA01',
                              'FB01',
                              'IA01')
        OR EKPO_CD_PLANT NOt like '00%')) AGCE ON EKKO_CD_PURCH_DOC_NBR = AGCE.EKPO_CD_PO_NBR
LEFT JOIN
  (SELECT DISTINCT SUPM_CD_ACCOUNT_NBR,
                   CASE
                       WHEN LENGTH(SUPM_CD_COMP_TRADING_PARTNER) > 1 THEN 'Intercompany'
                       ELSE 'Third Party'
                   END AS Supplier_Type
   FROM ddwh01_dw.TM_SUPM_SUPPLIER_GPP) SUPM ON EKKO_CD_VENDOR_ACCOUNT_NBR = SUPM.SUPM_CD_ACCOUNT_NBR; 
@@Response
Here is the PySpark equivalent code:

```python
from pyspark.sql import SparkSession
from pyspark.sql import functions as F
from pyspark.sql.types import IntegerType

spark = SparkSession.builder.appName('DDWH02_SM.VW_EKKO_PURCH_DOC_HEADER_AGCE').getOrCreate()

# Loading TT_EKKO_PURCH_DOC_HEADER_GPP
df_ekko = spark.table('ddwh01_dw.TT_EKKO_PURCH_DOC_HEADER_GPP')

# Loading TD_PLBR_PLANT_BRANCHES
df_plbr = spark.table('ddwh01_dw.TD_PLBR_PLANT_BRANCHES')

# Loading TT_EKPO_PURCH_DOC_ITEM_GPP
df_ekpo = spark.table('ddwh01_dw.TT_EKPO_PURCH_DOC_ITEM_GPP')

# Loading TM_SUPM_SUPPLIER_GPP
df_supm = spark.table('ddwh01_dw.TM_SUPM_SUPPLIER_GPP')

# Joining the dataframes
df_ekko_joined = df_ekko.join(df_ekpo, df_ekko.EKKO_CD_PURCH_DOC_NBR == df_ekpo.EKPO_CD_PO_NBR, 'inner') \
                        .join(df_plbr, (df_ekpo.EKPO_CD_PLANT == df_plbr.PLBR_CD_PLANT) & df_plbr.PLBR_DS_PLANT_SEGMENT.isin(['AG', 'CE', '-1', 'AM', 'AS']), 'inner') \
                        .filter(~df_ekpo.EKPO_CD_PLANT.isin(['FA01', 'FB01', 'IA01']) | ~df_ekpo.EKPO_CD_PLANT.like('00%'))

# Converting EKKO_DT_PURCH_DOC_DATE to YYYY format
df_ekko_joined = df_ekko_joined.withColumn('EKKO_NR_PURCH_DOC_YEAR', F.expr("TO_NUMBER(TO_CHAR(EKKO_DT_PURCH_DOC_DATE, 'YYYY'))"))

# Converting EKKO_DT_CONTRACT_END_DATE and EKKO_DT_RECORD_CREATED_ON to YYYY format for EKKO_DT_RETENTION_YEAR
df_ekko_joined = df_ekko_joined.withColumn('EKKO_DT_RETENTION_YEAR', F.expr("TO_CHAR(COALESCE(EKKO_DT_CONTRACT_END_DATE, EKKO_DT_RECORD_CREATED_ON), 'YYYY')"))

# Converting EKKO_CD_PURCH_DOC_NBR to string with leading zeros
df_ekko_joined = df_ekko_joined.withColumn('EKKO_CD_PURCH_DOC_NBR10', F.expr("to_Char(substr('0000000000' || EKKO_CD_PURCH_DOC_NBR, -10))"))

# Joining with SUPM_SUPPLIER_GPP and creating Supplier_Type
df_ekko_joined = df_ekko_joined.join(df_supm, df_ekko_joined.EKKO_CD_VENDOR_ACCOUNT_NBR == df_supm.SUPM_CD_ACCOUNT_NBR, 'left') \
                               .withColumn('Supplier_Type', F.when(F.length(df_supm.SUPM_CD_COMP_TRADING_PARTNER) > 1, 'Intercompany').otherwise('Third Party'))

# Selecting the required columns and renaming some columns
df_final = df_ekko_joined.select(
    df_ekko_joined.EKKO_DT_LAST_MODIFY,
    df_ekko_joined.EKKO_ID_PURCH_DOC_HEADER_GPP,
    df_ekko_joined.EKKO_CD_PURCH_DOC_NBR,
    df_ekko_joined.EKKO_NR_TOT_VAL_OF_RELEASE,
    df_ekko_joined.EKKO_DT_PURCH_DOC_DATE,
    df_ekko_joined.EKKO_DT_RECORD_CREATED_ON,
    df_ekko_joined.EKKO_CD_PURCH_GRP,
    df_ekko_joined.EKKO_FL_TAKE_PURCH_GRP,
    df_ekko_joined.EKKO_CD_VENDOR_ACCOUNT_NBR,
    df_ekko_joined.EKKO_CD_DOC_PROCESS_STATE,
    df_ekko_joined.EKKO_CD_PURCH_DOC_CATEGORY,
    df_ekko_joined.EKKO_CD_PURCH_DOCTYPE,
    df_ekko_joined.EKKO_DT_CONTRACT_START_DATE,
    df_ekko_joined.EKKO_NR_CHG_TIMESTAMP,
    df_ekko_joined.EKKO_DT_CONTRACT_END_DATE,
    df_ekko_joined.EKKO_CD_PURCH_DOC_STATUS,
    df_ekko_joined.EKKO_NR_CURRENCY_KEY,
    df_ekko_joined.EKKO_CD_PURCH_AGREEMENT_NBR,
    df_ekko_joined.EKKO_CD_OBJ_CREATED_BY,
    df_ekko_joined.EKKO_CD_INCOTERMS_PART_1,
    df_ekko_joined.EKKO_CD_INCOTERMS_PART_2,
    df_ekko_joined.EKKO_CD_TERMS_OF_PAYMENT_1,
    df_ekko_joined.EKKO_CD_PURCH_ORG_1,
    df_ekko_joined.EKKO_CD_COMPANY_CODE,
    df_ekko_joined.EKKO_CD_REMARK_1,
    df_ekko_joined.EKKO_NR_PURCH_DOC_YEAR,
    F.lit(' ').alias('PLBR_DS_PLANT_SEGMENT'),
    df_ekko_joined.EKKO_CD_PURCH_DOCTYPE.alias('ODAG_PODOCUMENTTYPE'),
    df_ekko_joined.EKKO_CD_VENDOR_ACCOUNT_NBR.alias('ODAG_SUPPLIERCODE'),
    df_ekko_joined.EKKO_DT_RETENTION_YEAR,
    F.expr("TO_CHAR(EKKO_DT_PURCH_DOC_DATE, 'YYYY')").alias('ODAG_PODOCUMENTYEAR'),
    df_ekko_joined.EKKO_CD_PURCH_DOC_NBR10,
    df_ekko_joined.Supplier_Type.alias('EKKO_CD_SUPPLIER_TYPE')
)

# Creating a view in Spark
df_final.createOrReplaceTempView('DDWH02_SM.VW_EKKO_PURCH_DOC_HEADER_AGCE')
```

Note: Please replace 'ddwh01_dw.TT_EKKO_PURCH_DOC_HEADER_GPP', 'ddwh01_dw.TT_EKPO_PURCH_DOC_ITEM_GPP', 'ddwh01_dw.TD_PLBR_PLANT_BRANCHES', 'ddwh01_dw.TM_SUPM_SUPPLIER_GPP' with your actual table names.