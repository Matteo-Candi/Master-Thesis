This code is quite extensive and involves a lot of operations on datasets. However, I can translate some parts for you. Note that Python does not have direct equivalents to SAS's PROC MEANS or PROC TABULATE procedures, so I will use pandas library for these tasks. Also, the %include statement is used in SAS to include a file containing macro definitions. In Python, we can simply import the corresponding module.

```python
import os
import pandas as pd
from sas7bdat import SAS7BDAT # To read SAS datasets

# Define library paths
ter = "C:\\Users\\mcandi\\OneDrive - KPMG\\Desktop\\project\\SAS_scripts\\Data_sets"
sez = "C:\\Users\\mcandi\\OneDrive - KPMG\\Desktop\\project\\SAS_scripts\\Data_sets"
ter_out = "C:\\Users\\mcandi\\OneDrive - KPMG\\Desktop\\project\\SAS_scripts\\Data_sets"
sez_out = "C:\\Users\\mcandi\\OneDrive - KPMG\\Desktop\\project\\SAS_scripts\\Data_sets"
appo = "C:\\Users\\mcandi\\OneDrive - KPMG\\Desktop\\project\\SAS_scripts"

# Include the SAS macro file
os.system('sas -include "C:\\Users\\mcandi\\OneDrive - KPMG\\Desktop\\project\\SAS_scripts\\Macro\\macroarrotondainterogruppo.sas"')
```

For translating the SAS PROC MEANS step, we can use pandas' groupby and sum functions:

```python
# Read the dataset with sas7bdat package
with SAS7BDAT('appo\\avanzamento_eta.sas7bdat') as file:
    df = file.to_data_frame()

# Perform groupby and sum operations
df2 = df.groupby(['codice_sezione', 'cleta'])['maschi_distribuiti', 'femmine_distribuite'].sum().reset_index()
```

For the PROC TABULATE step, we can use pandas' sum function:

```python
print(df2.sum())
```

Please note that translating SAS code to Python is a complex task and requires knowledge of both languages. Also, some SAS procedures have no direct equivalents in Python, so you may need to find alternative solutions or use different libraries for certain tasks. The provided translation is just an example and might not work perfectly due to the complexity of the original SAS code.
