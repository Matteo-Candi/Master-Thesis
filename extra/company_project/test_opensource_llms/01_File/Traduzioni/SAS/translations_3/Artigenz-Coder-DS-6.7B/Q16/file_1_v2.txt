You are an expert in translating code from SAS to Python; translate the given code at your best even if there are problems; insert comments inside the code; do not return any message outside the code and make it as readable as possible; minimize the code complexity and volume; create functions to automate frequently needed operations; ensure to not make any syntax error; define all variables and import all libraries used even if imported locally; ensure the user can copy and run the code without modifications; translate from SAS to Python every part of the input code reproducing the same operations; do not use SAS syntax in the Python code; define correctly the file paths; return the code in single block; make Python code more efficient than the SAS one. 

@@Instruction 
Translate the following code from SAS to Python:
%macro quadraturagruppo(daquadrare,		
						daquad,			
						totpergru,		
						perquad,		
						giaquad,		
						vargruppo,		
						quadrato);		





%put;
%put %str(WARNING- ============================================================);
%put %str(WARNING: I nomi);
%put %str(WARNING- somma quadrare);
%put %str(WARNING- identificano data set ausiliari della macro quadraturagruppo);
%put %str(WARNING- che vengono cancellati al termine delle elaborazioni        );
%put %str(WARNING- ============================================================);
%put;


proc sort data = &daquadrare;
	by &vargruppo;
run;
proc means data = &daquadrare noprint;
	by &vargruppo;
	output out = somma (keep = &vargruppo datot)
		   sum(&daquad) = datot;
run;
proc sort data = &totpergru;
	by &vargruppo;
run;
data somma;
	merge somma (in = inso) &totpergru (in = into);
	by &vargruppo;
	if inso and into;
	keep &vargruppo datot &perquad;
run; 


data quadrare;
	merge &daquadrare somma (in = presente);
	by &vargruppo;
	if presente;
	&giaquad = &daquad*&perquad/datot;
run;


data &quadrato;
	set quadrare;
	drop &daquad datot &perquad;
run;


proc datasets library = work;
	delete somma quadrare;
run;
quit;

%mend quadraturagruppo;
 
@@Response
Here is the python equivalent code for your SAS macro:

```python
def quadraturagruppo(daquadrare, daquad, totpergru, perquad, giaquad, vargruppo, quadrato):
    '''
    WARNING- ============================================================
    WARNING: 
    WARNING- The names `somma quadrare` identify auxiliary datasets of the function quadraturagruppo
    WARNING- that get deleted at the end of computations      
    WARNING- ============================================================
    '''

    # Sort the daquadrare dataset by vargruppo
    daquadrare.sort_values(by=[vargruppo])

    # Compute the sum of daquad by vargruppo
    somma = daquadrare.groupby(by=[vargruppo])[daquad].sum().reset_index().rename(columns={daquad:'datot'})

    # Sort the totpergru dataset by vargruppo
    totpergru.sort_values(by=[vargruppo])

    # Merge somma and totpergru datasets on vargruppo
    somma = pd.merge(somma, totpergru, on=vargruppo)
    # Keep only the rows where the merge is successful and where there exists both rows in somma and totpergru
    somma = somma[pd.notnull(somma[vargruppo])]

    # Create a new dataset quadrare by merging daquadrare and somma on vargruppo
    quadrare = pd.merge(daquadrare, somma, on=vargruppo)
    # Keep only the rows where the merge is successful
    quadrare = quadrare[pd.notnull(quadrare[vargruppo])]

    # Create a new column giaquad
    quadrare[giaquad] = quadrare[daquad] * quadrare[perquad] / quadrare['datot']

    # Remove unneeded columns from quadrare
    quadrare = quadrare.drop([daquad, 'datot', perquad], axis=1)

    # Return quadrare to varquadrato
    return quadrare

    # Uncomment the following code to delete the temporary dataframes
    # del somma, quadrare
```